{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 3e5a29ccf88223e9a798","webpack:///./src/clients/BaseClient.js","webpack:///./~/superagent/lib/is-object.js","webpack:///./src/clients/Wargaming.js","webpack:///./src/clients/WorldOfTanks.js","webpack:///./src/clients/WorldOfTanksBlitz.js","webpack:///./src/clients/WorldOfTanksConsole.js","webpack:///./src/clients/WorldOfWarplanes.js","webpack:///./src/clients/WorldOfWarships.js","webpack:///./src/errors/RequestError.js","webpack:///./src/Wargamer.js","webpack:///./src/errors/APIError.js","webpack:///./src/responses/APIResponse.js","webpack:///./src/utils/mapValues.js","webpack:///./~/component-emitter/index.js","webpack:///./~/es6-error/lib/index.js","webpack:///./~/superagent/lib/client.js","webpack:///./~/superagent/lib/is-function.js","webpack:///./~/superagent/lib/request-base.js","webpack:///./~/superagent/lib/response-base.js","webpack:///./~/superagent/lib/utils.js","webpack:///./src/index.js"],"names":["VALID_REQUEST_METHODS","Set","isValidRequestMethod","method","TypeError","has","toUpperCase","REALM_TLD","ru","eu","na","kr","asia","xbox","ps4","BASE_URI","wot","realm","wotb","wotx","wows","wowp","wgn","getBaseUri","type","Error","BaseClient","applicationId","accessToken","requestMethod","toLowerCase","normalizedRealm","normalizedRequestMethod","baseUri","params","options","normalizedMethod","baseUrl","requestUrl","replace","payload","application_id","access_token","normalizedPayload","constructor","normalizeParameterValue","fulfill","response","body","error","client","statusCode","status","url","req","requestRealm","reject","value","message","get","query","then","catch","post","send","Promise","parameter","Array","isArray","join","Date","toISOString","Wargaming","WorldOfTanks","WorldOfTanksBlitz","WorldOfTanksConsole","WorldOfWarplanes","WorldOfWarships","RequestError","Wargamer","APIError","rest","code","field","apiMessage","APIResponse","meta","data","mapValues","object","callback","keys","Object","reduce","mapped","nextKey"],"mappings":"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AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,YAAY;AACZ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,2CAA2C,SAAS;AACpD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;;;;;;;AClKA;;AAEA;AACA;AACA,CAAC;;AAED,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,iDAAiD,aAAa,uFAAuF,EAAE,uFAAuF;;AAE9O,0CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,CAAC;;AAED;AACA,oC;;;;;;AC9EA;AACA;AACA;;AAEA;AACA,oCAAoC;AACpC;AACA,CAAC,wCAAwC;AACzC;AACA,CAAC,OAAO;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,SAAS,+CAA+C,EAAE;AAC1D,SAAS,gDAAgD,EAAE;AAC3D,SAAS,gDAAgD,EAAE;AAC3D,SAAS,4CAA4C,EAAE;AACvD;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA,iBAAiB,iBAAiB;AAClC,iBAAiB,sCAAsC;;AAEvD;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc;;AAEd,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA,iBAAiB,aAAa;AAC9B,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,iBAAiB,aAAa,iBAAiB;AAC/C;AACA;AACA;AACA;AACA,0BAA0B,aAAa;AACvC,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,0BAA0B,aAAa,iBAAiB;AACxD;AACA,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,kBAAkB;AAClB;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B;AACA,UAAU,cAAc;AACxB,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,mBAAmB;AAC3F;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,WAAW,cAAc;AACzB,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS,sBAAsB,WAAW,YAAY;;AAEtD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,4FAA4F;AAC5F;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACv4BA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACdA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc,QAAQ;AACjC,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,OAAO;AACP,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oDAAoD;AACpE;AACA;AACA,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,yBAAyB;AACtC;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,sCAAsC;AACjD,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,+BAA+B;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA,kBAAkB,aAAa;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,aAAa;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;ACphBA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnIA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA,uBAAuB;AACvB;AACA;AACA;;AAEA;AACA;AACA,GAAG,IAAI;AACP;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,GAAG,IAAI;AACP;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACnEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;QAGErB,Y;QACAC,iB;QACAC,mB;QACAE,e;QACAD,gB;QACAJ,S","file":"wargamer.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"wargamer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"wargamer\"] = factory();\n\telse\n\t\troot[\"wargamer\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 20);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3e5a29ccf88223e9a798","import request from 'superagent';\nimport APIError from '../errors/APIError';\nimport APIResponse from '../responses/APIResponse';\nimport RequestError from '../errors/RequestError';\nimport mapValues from '../utils/mapValues';\n\n/**\n * The options available to use on a client constructor.\n * @typedef {Object} ClientOptions\n * @property {string} realm - The realm/region this client is for.\n * @property {string} applicationId - The application ID of this client.\n * @property {string} [accessToken=null] - The access token for this client,\n *   if it will be using one.\n * @property {string} [requestMethod='POST'] - The default request method for\n *   this client.\n */\n\n/**\n * The options available to use when making a single request.\n * @typedef {Object} RequestOptions\n * @property {string} [realm] - The realm/region to use for the request.\n * @property {string} [requestMethod] - The method to use for the request.\n */\n\n/**\n * Valid request methods for the Wargaming API.\n * @type {Set.<string>}\n * @constant\n * @private\n */\nconst VALID_REQUEST_METHODS = new Set(['GET', 'POST']);\n\n/**\n * Checks if a request method is valid.\n * @param {string} method - The request method.\n * @returns {boolean} True if the method is valid.\n * @throws {TypeError} Thrown if the given request method is not a string.\n * @private\n */\nconst isValidRequestMethod = (method) => {\n  if (typeof method !== 'string') {\n    throw new TypeError('Given request method must be a string.');\n  }\n\n  return VALID_REQUEST_METHODS.has(method.toUpperCase());\n};\n\n/**\n * Mapping between realms and their TLDs.\n * @type {Object}\n * @constant\n * @private\n */\nconst REALM_TLD = {\n  ru: 'ru',\n  eu: 'eu',\n  na: 'com',\n  kr: 'kr',\n  asia: 'asia',\n  xbox: 'xbox',\n  ps4: 'ps4',\n};\n\n/**\n * Functions which generate the base URIs for various APIs.\n * @type {Object}\n * @constant\n * @private\n */\nconst BASE_URI = {\n  wot: realm => `https://api.worldoftanks.${REALM_TLD[realm]}/wot`,\n  wotb: realm => `https://api.wotblitz.${REALM_TLD[realm]}/wotb`,\n  wotx: realm => `https://api-${REALM_TLD[realm]}-console.worldoftanks.com/wotx`,\n  wows: realm => `https://api.worldofwarships.${REALM_TLD[realm]}/wows`,\n  wowp: realm => `https://api.worldofwarplanes.${REALM_TLD[realm]}/wowp`,\n  wgn: realm => `https://api.worldoftanks.${REALM_TLD[realm]}/wgn`,\n};\n\n/**\n * Returns the base URI for a given realm and API type.\n * @param {string} realm - The realm/region of the server.\n * @param {string} type - The desired API.\n * @returns {string} The base URI for the API that was specified.\n * @throws {Error} Thrown if the given `realm` or `type` don't exist.\n * @private\n */\nconst getBaseUri = (realm, type) => {\n  if (!REALM_TLD[realm] || !BASE_URI[type]) {\n    throw new Error();\n  }\n\n  return BASE_URI[type](realm);\n};\n\n/**\n * @classdesc The base API client.\n */\nclass BaseClient {\n  /**\n   * Constructor.\n   * @param {Object} options - The client options.\n   * @param {string} options.type - The type of API this client is for.\n   * @param {string} options.realm - The realm/region this client is for.\n   * @param {string} options.applicationId - The application ID of this client.\n   * @param {string} [options.accessToken=null] - The access token for this\n   *   client, if it will be using one.\n   * @param {string} [options.requestMethod='POST'] - The default request method\n   *   for this client.\n   * @throws {TypeError} Thrown if options are not well-formed.\n   */\n  constructor({ type, realm, applicationId, accessToken = null, requestMethod = 'POST' }) {\n    if (typeof realm !== 'string' || !REALM_TLD[realm.toLowerCase()]) {\n      throw new TypeError('Must specify a valid realm for the client.');\n    } else if (typeof applicationId !== 'string') {\n      throw new TypeError('Must specify an application ID for the client.');\n    } else if (!isValidRequestMethod(requestMethod)) {\n      throw new TypeError('Must specify a valid request method.');\n    }\n\n    const normalizedRealm = realm.toLowerCase();\n    const normalizedRequestMethod = requestMethod.toUpperCase();\n\n    /**\n     * The type of API this client is for.\n     * @type {string}\n     * @private\n     */\n    this.type = type;\n\n    /**\n     * The realm, i.e. region of this client.\n     * @type {string}\n     * @private\n     */\n    this.realm = normalizedRealm;\n\n    /**\n     * The application ID for this client.\n     * @type {string}\n     * @private\n     */\n    this.applicationId = applicationId;\n\n    /**\n     * The access token for this client.\n     * @type {?string}\n     * @private\n     */\n    this.accessToken = accessToken;\n\n    /**\n     * The default request method to use. One of `'GET'` or `'POST'`.\n     * @type {string}\n     * @private\n     */\n    this.requestMethod = normalizedRequestMethod;\n\n    /**\n     * The base API URI for this client.\n     * @type {string}\n     * @private\n     */\n    this.baseUri = getBaseUri(normalizedRealm, type);\n  }\n\n  /**\n   * Normalizes a given parameter type so the API can consume it.\n   * @param {*} parameter - The parameter to normalize.\n   * @returns {*} The normalized parameter.\n   * @static\n   * @private\n   */\n  static normalizeParameterValue(parameter) {\n    if (Array.isArray(parameter)) {\n      return parameter.join(',');\n    } else if (parameter instanceof Date) {\n      return parameter.toISOString();\n    }\n\n    return parameter;\n  }\n\n  /**\n   * Fetches data from an endpoint method.\n   * @param {string} method - The method to request.\n   * @param {Object} [params={}] - The parameters to include in the request.\n   * @param {RequestOptions} [options={}] - Options used to override client defaults.\n   * @returns {Promise.<Object, Error>} Returns a promise resolving to the returned\n   *   API data, or rejecting with an error.\n   * @throws {TypeError} Thrown if any parameters are not the right type.\n   */\n  fetch(method, params = {}, options = {}) {\n    const { realm = this.realm, requestMethod = this.requestMethod } = options;\n\n    if (typeof method !== 'string') {\n      throw new TypeError('Expected method to be a string.');\n    } else if (!isValidRequestMethod(requestMethod)) {\n      throw new TypeError('Must specify a valid request method.');\n    }\n\n    const normalizedMethod = method.toLowerCase();\n    const normalizedRequestMethod = requestMethod.toUpperCase();\n    const normalizedRealm = realm.toLowerCase();\n\n    // construct the request URL\n    const baseUrl = normalizedRealm === this.realm\n      ? this.baseUri\n      : getBaseUri(normalizedRealm, this.type);\n    const requestUrl = `${baseUrl}/${normalizedMethod.replace(/^\\/*(.+?)\\/*$/, '$1')}/`;\n\n    // construct the payload\n    const payload = {\n      application_id: this.applicationId,\n      access_token: this.accessToken,\n      ...params,\n    };\n\n    const normalizedPayload = mapValues(payload, this.constructor.normalizeParameterValue);\n\n    const fulfill = (response) => {\n      const { error = null } = response.body;\n\n      if (error) {\n        // Wargaming API error\n        throw new APIError({\n          client: this,\n          statusCode: response.status,\n          url: response.req.url,\n          method: normalizedMethod,\n          error,\n        });\n      }\n\n      return new APIResponse({\n        client: this,\n        requestRealm: normalizedRealm,\n        url: response.req.url,\n        method: normalizedMethod,\n        response: response.body,\n      });\n    };\n\n    const reject = (value) => {\n      // check if this is a HTTP error or a Wargaming error\n      if (value instanceof APIError) {\n        throw value;\n      }\n\n      const { response: { error, req } } = value;\n\n      throw new RequestError({\n        message: value.response.error.message,\n        client: this,\n        statusCode: error.status,\n        url: req.url,\n      });\n    };\n\n    switch (normalizedRequestMethod) {\n      case 'GET':\n        return request.get(requestUrl)\n          .query(normalizedPayload)\n          .then(fulfill)\n          .catch(reject);\n      case 'POST':\n        return request.post(requestUrl)\n          .type('form')\n          .send(normalizedPayload)\n          .then(fulfill)\n          .catch(reject);\n      default:\n        // we should never get here anyways\n        return Promise.reject(new Error('Received invalid request method.'));\n    }\n  }\n}\n\nexport default BaseClient;\n\n\n\n// WEBPACK FOOTER //\n// ./src/clients/BaseClient.js","/**\n * Check if `obj` is an object.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(obj) {\n  return null !== obj && 'object' === typeof obj;\n}\n\nmodule.exports = isObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/superagent/lib/is-object.js\n// module id = 1\n// module chunks = 0","import BaseClient from './BaseClient';\n\n/**\n * @classdesc The Wargaming.net API client.\n * @extends BaseClient\n */\nclass Wargaming extends BaseClient {\n  /**\n   * Constructor.\n   * @param {ClientOptions} options - The client options.\n   */\n  constructor(options) {\n    super({ ...options, type: 'wgn' });\n  }\n}\n\nexport default Wargaming;\n\n\n\n// WEBPACK FOOTER //\n// ./src/clients/Wargaming.js","import BaseClient from './BaseClient';\n\n/**\n * @classdesc The World of Tanks API client.\n * @extends BaseClient\n */\nclass WorldOfTanks extends BaseClient {\n  /**\n   * Constructor.\n   * @param {ClientOptions} options - The client options.\n   */\n  constructor(options) {\n    super({ ...options, type: 'wot' });\n  }\n}\n\nexport default WorldOfTanks;\n\n\n\n// WEBPACK FOOTER //\n// ./src/clients/WorldOfTanks.js","import BaseClient from './BaseClient';\n\n/**\n * @classdesc The World of Tanks Blitz API client.\n * @extends BaseClient\n */\nclass WorldOfTanksBlitz extends BaseClient {\n  /**\n   * Constructor.\n   * @param {ClientOptions} options - The client options.\n   */\n  constructor(options) {\n    super({ ...options, type: 'wotb' });\n  }\n}\n\nexport default WorldOfTanksBlitz;\n\n\n\n// WEBPACK FOOTER //\n// ./src/clients/WorldOfTanksBlitz.js","import BaseClient from './BaseClient';\n\n/**\n * @classdesc The World of Tanks Console API client.\n * @extends BaseClient\n */\nclass WorldOfTanksConsole extends BaseClient {\n  /**\n   * Constructor.\n   * @param {ClientOptions} options - The client options.\n   */\n  constructor(options) {\n    super({ ...options, type: 'wotx' });\n  }\n}\n\nexport default WorldOfTanksConsole;\n\n\n\n// WEBPACK FOOTER //\n// ./src/clients/WorldOfTanksConsole.js","import BaseClient from './BaseClient';\n\n/**\n * @classdesc The World of Warplanes API client.\n * @extends BaseClient\n */\nclass WorldOfWarplanes extends BaseClient {\n  /**\n   * Constructor.\n   * @param {ClientOptions} options - The client options.\n   */\n  constructor(options) {\n    super({ ...options, type: 'wowp' });\n  }\n}\n\nexport default WorldOfWarplanes;\n\n\n\n// WEBPACK FOOTER //\n// ./src/clients/WorldOfWarplanes.js","import BaseClient from './BaseClient';\n\n/**\n * @classdesc The World of Warships API client.\n * @extends BaseClient\n */\nclass WorldOfWarships extends BaseClient {\n  /**\n   * Constructor.\n   * @param {ClientOptions} options - The client options.\n   */\n  constructor(options) {\n    super({ ...options, type: 'wows' });\n  }\n}\n\nexport default WorldOfWarships;\n\n\n\n// WEBPACK FOOTER //\n// ./src/clients/WorldOfWarships.js","import ExtendableError from 'es6-error';\n\n/**\n * @classdesc Generic API client error encountered during requests.\n * @extends ExtendableError\n */\nclass RequestError extends ExtendableError {\n  /**\n   * Constructor.\n   * @param {Object} options - The constructor options.\n   * @param {string} options.message - The error message.\n   * @param {BaseClient} options.client - The API client that the error originated\n   *   from.\n   * @param {number} options.statusCode - The HTTP status code of the request.\n   * @param {string} options.url - The URL that the request was for.\n   */\n  constructor({ message, client, statusCode, url }) {\n    super(message);\n\n    /**\n     * The API client that the error originated from.\n     * @type {BaseClient}\n     */\n    this.client = client;\n\n    /**\n     * The HTTP status code of the request.\n     * @type {number}\n     */\n    this.statusCode = statusCode;\n\n    /**\n     * The URL of the request.\n     * @type {string}\n     */\n    this.url = url;\n  }\n}\n\nexport default RequestError;\n\n\n\n// WEBPACK FOOTER //\n// ./src/errors/RequestError.js","import WorldOfTanks from './clients/WorldOfTanks';\nimport WorldOfTanksBlitz from './clients/WorldOfTanksBlitz';\nimport WorldOfTanksConsole from './clients/WorldOfTanksConsole';\nimport WorldOfWarships from './clients/WorldOfWarships';\nimport WorldOfWarplanes from './clients/WorldOfWarplanes';\nimport Wargaming from './clients/Wargaming';\n\n/**\n * @classdesc The Wargamer client.\n */\nclass Wargamer {\n  /**\n   * Constructs a new World of Tanks API client.\n   * @param {ClientOptions} options - The client options.\n   * @returns {WorldOfTanks} The API client.\n   * @static\n   */\n  static WoT(options) {\n    return new WorldOfTanks(options);\n  }\n\n  /**\n   * Constructs a new World of Tanks Blitz API client.\n   * @param {ClientOptions} options - The client options.\n   * @returns {WorldOfTanksBlitz} The API client.\n   * @static\n   */\n  static WoTB(options) {\n    return new WorldOfTanksBlitz(options);\n  }\n\n  /**\n   * Constructs a new World of Tanks Console API client.\n   * @param {ClientOptions} options - The client options.\n   * @returns {WorldOfTanksConsole} The API client.\n   * @static\n   */\n  static WoTC(options) {\n    return new WorldOfTanksConsole(options);\n  }\n\n  /**\n   * Constructs a new World of Warships API client.\n   * @param {ClientOptions} options - The client options.\n   * @returns {WorldOfWarships} The API client.\n   * @static\n   */\n  static WoWS(options) {\n    return new WorldOfWarships(options);\n  }\n\n  /**\n   * Constructs a new World of Warplanes API client.\n   * @param {ClientOptions} options - The client options.\n   * @returns {WorldOfWarplanes} The API client.\n   * @static\n   */\n  static WoWP(options) {\n    return new WorldOfWarplanes(options);\n  }\n\n  /**\n   * Constructs a new Wargaming.net API client.\n   * @param {ClientOptions} options - The client options.\n   * @returns {Wargaming} The API client.\n   * @static\n   */\n  static WGN(options) {\n    return new Wargaming(options);\n  }\n}\n\nexport default Wargamer;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Wargamer.js","import RequestError from './RequestError';\n\n/**\n * The error object returned from Wargaming API methods.\n * @typedef {Object} WargamingAPIError\n * @property {number} code - The Wargaming API error code.\n * @property {string} message - The wargaming API error message.\n * @property {string} field - The Wargaming API error field.\n * @property {*} value - The Wargaming API error field value.\n * @private\n */\n\n/**\n * @classdesc Error received from Wargaming's API.\n * @extends RequestError\n */\nclass APIError extends RequestError {\n  /**\n   * Constructor.\n   * @param {Object} options - The constructor options.\n   * @param {BaseClient} options.client - The API client that the error originated\n   *   from.\n   * @param {number} options.statusCode - The HTTP status code of the request.\n   * @param {string} options.url - The URL that the request was for.\n   * @param {string} options.requestRealm - The realm of the API that this error\n   *   originated from.\n   * @param {string} options.method - The API method that the request was for.\n   * @param {WargamingAPIError} options.error - The error object returned from\n   *   the API.\n   */\n  constructor({ requestRealm, method, error, ...rest }) {\n    const { code, message, field, value } = error;\n\n    super({\n      ...rest,\n      message: `${code}: ${message}. Error field: ${field} => ${value}.`,\n    });\n\n    /**\n     * The realm of the API that this response originated from.\n     * @type {string}\n     */\n    this.requestRealm = requestRealm;\n\n    /**\n     * The API method that the request was for.\n     * @type {string}\n     */\n    this.method = method;\n\n    /**\n     * The Wargaming API error code.\n     * @type {number}\n     */\n    this.code = code;\n\n    /**\n     * The message corresponding to the error code.\n     * @type {string}\n     */\n    this.apiMessage = message;\n\n    /**\n     * The field which was flagged in the error.\n     * @type {string}\n     */\n    this.field = field;\n\n    /**\n     * The value of the field which was flagged in the error.\n     * @type {*}\n     */\n    this.value = value;\n  }\n}\n\nexport default APIError;\n\n\n\n// WEBPACK FOOTER //\n// ./src/errors/APIError.js","/**\n * @classdesc Wraps a response from the Wargaming API.\n */\nclass APIResponse {\n  /**\n   * Constructor.\n   * @param {Object} data - The response data.\n   * @param {BaseClient} data.client - The API client that the response originated\n   *   from.\n   * @param {string} data.requestRealm - The realm of the API that this response\n   *   originated from.\n   * @param {string} data.url - The URL of the request this response corresponds to.\n   * @param {string} data.method - The name of the method that was used to get\n   *   this response data.\n   * @param {Object} data.response - The parsed JSON data from the API.\n   */\n  constructor({ client, requestRealm, url, method, response }) {\n    /**\n     * The API client that the response originated from.\n     * @type {BaseClient}\n     */\n    this.client = client;\n\n    /**\n     * The realm of the API that this response originated from.\n     * @type {string}\n     */\n    this.requestRealm = requestRealm;\n\n    /**\n     * The URL of the request this response corresponds to.\n     * @type {string}\n     */\n    this.url = url;\n\n    /**\n     * The name of the API method that gave this response.\n     * @type {string}\n     */\n    this.method = method;\n\n    /**\n     * The response's parsed JSON data.\n     * @type {Object}\n     */\n    this.response = response;\n  }\n\n  /**\n   * The value of the meta object returned in the response.\n   * @type {Object}\n   */\n  get meta() {\n    return this.response.meta;\n  }\n\n  /**\n   * The value of the data object returned in the response.\n   * @type {Object}\n   */\n  get data() {\n    return this.response.data;\n  }\n}\n\nexport default APIResponse;\n\n\n\n// WEBPACK FOOTER //\n// ./src/responses/APIResponse.js","/**\n * Identical to `Array.prototype.map()` except for object values.\n * @param {Object} object - The object whose values will be mapped.\n * @param {Function} callback - The callback to map the object values. Gets passed\n *   equivalent parameters as `Array.prototype.map()`.\n * @returns {Object} A new mapped object.\n * @private\n */\nexport default function mapValues(object, callback = value => value) {\n  const keys = Object.keys(object);\n\n  return keys.reduce((mapped, nextKey) => {\n    mapped[nextKey] = callback(object[nextKey], nextKey, object); // eslint-disable-line\n\n    return mapped;\n  }, {});\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/mapValues.js","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/component-emitter/index.js\n// module id = 13\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _extendableBuiltin(cls) {\n  function ExtendableBuiltin() {\n    cls.apply(this, arguments);\n  }\n\n  ExtendableBuiltin.prototype = Object.create(cls.prototype, {\n    constructor: {\n      value: cls,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(ExtendableBuiltin, cls);\n  } else {\n    ExtendableBuiltin.__proto__ = cls;\n  }\n\n  return ExtendableBuiltin;\n}\n\nvar ExtendableError = function (_extendableBuiltin2) {\n  _inherits(ExtendableError, _extendableBuiltin2);\n\n  function ExtendableError() {\n    var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n    _classCallCheck(this, ExtendableError);\n\n    // extending Error is weird and does not propagate `message`\n    var _this = _possibleConstructorReturn(this, (ExtendableError.__proto__ || Object.getPrototypeOf(ExtendableError)).call(this, message));\n\n    Object.defineProperty(_this, 'message', {\n      configurable: true,\n      enumerable: false,\n      value: message,\n      writable: true\n    });\n\n    Object.defineProperty(_this, 'name', {\n      configurable: true,\n      enumerable: false,\n      value: _this.constructor.name,\n      writable: true\n    });\n\n    if (Error.hasOwnProperty('captureStackTrace')) {\n      Error.captureStackTrace(_this, _this.constructor);\n      return _possibleConstructorReturn(_this);\n    }\n\n    Object.defineProperty(_this, 'stack', {\n      configurable: true,\n      enumerable: false,\n      value: new Error(message).stack,\n      writable: true\n    });\n    return _this;\n  }\n\n  return ExtendableError;\n}(_extendableBuiltin(Error));\n\nexports.default = ExtendableError;\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es6-error/lib/index.js\n// module id = 14\n// module chunks = 0","/**\n * Root reference for iframes.\n */\n\nvar root;\nif (typeof window !== 'undefined') { // Browser window\n  root = window;\n} else if (typeof self !== 'undefined') { // Web Worker\n  root = self;\n} else { // Other environments\n  console.warn(\"Using browser-only version of superagent in non-browser environment\");\n  root = this;\n}\n\nvar Emitter = require('emitter');\nvar RequestBase = require('./request-base');\nvar isObject = require('./is-object');\nvar isFunction = require('./is-function');\nvar ResponseBase = require('./response-base');\n\n/**\n * Noop.\n */\n\nfunction noop(){};\n\n/**\n * Expose `request`.\n */\n\nvar request = exports = module.exports = function(method, url) {\n  // callback\n  if ('function' == typeof url) {\n    return new exports.Request('GET', method).end(url);\n  }\n\n  // url first\n  if (1 == arguments.length) {\n    return new exports.Request('GET', method);\n  }\n\n  return new exports.Request(method, url);\n}\n\nexports.Request = Request;\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = function () {\n  if (root.XMLHttpRequest\n      && (!root.location || 'file:' != root.location.protocol\n          || !root.ActiveXObject)) {\n    return new XMLHttpRequest;\n  } else {\n    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n  }\n  throw Error(\"Browser-only verison of superagent could not find XHR\");\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nvar trim = ''.trim\n  ? function(s) { return s.trim(); }\n  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  var pairs = [];\n  for (var key in obj) {\n    pushEncodedKeyValuePair(pairs, key, obj[key]);\n  }\n  return pairs.join('&');\n}\n\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\nfunction pushEncodedKeyValuePair(pairs, key, val) {\n  if (val != null) {\n    if (Array.isArray(val)) {\n      val.forEach(function(v) {\n        pushEncodedKeyValuePair(pairs, key, v);\n      });\n    } else if (isObject(val)) {\n      for(var subkey in val) {\n        pushEncodedKeyValuePair(pairs, key + '[' + subkey + ']', val[subkey]);\n      }\n    } else {\n      pairs.push(encodeURIComponent(key)\n        + '=' + encodeURIComponent(val));\n    }\n  } else if (val === null) {\n    pairs.push(encodeURIComponent(key));\n  }\n}\n\n/**\n * Expose serialization method.\n */\n\n request.serializeObject = serialize;\n\n /**\n  * Parse the given x-www-form-urlencoded `str`.\n  *\n  * @param {String} str\n  * @return {Object}\n  * @api private\n  */\n\nfunction parseString(str) {\n  var obj = {};\n  var pairs = str.split('&');\n  var pair;\n  var pos;\n\n  for (var i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    pos = pair.indexOf('=');\n    if (pos == -1) {\n      obj[decodeURIComponent(pair)] = '';\n    } else {\n      obj[decodeURIComponent(pair.slice(0, pos))] =\n        decodeURIComponent(pair.slice(pos + 1));\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'application/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  'form': 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\n request.serialize = {\n   'application/x-www-form-urlencoded': serialize,\n   'application/json': JSON.stringify\n };\n\n /**\n  * Default parsers.\n  *\n  *     superagent.parse['application/xml'] = function(str){\n  *       return { object parsed from str };\n  *     };\n  *\n  */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  var lines = str.split(/\\r?\\n/);\n  var fields = {};\n  var index;\n  var line;\n  var field;\n  var val;\n\n  lines.pop(); // trailing CRLF\n\n  for (var i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  return /[\\/+]json\\b/.test(mime);\n}\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(req, options) {\n  options = options || {};\n  this.req = req;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n     ? this.xhr.responseText\n     : null;\n  this.statusText = this.req.xhr.statusText;\n  var status = this.xhr.status;\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n      status = 204;\n  }\n  this._setStatusProperties(status);\n  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this._setHeaderProperties(this.header);\n\n  if (null === this.text && req._responseType) {\n    this.body = this.xhr.response;\n  } else {\n    this.body = this.req.method != 'HEAD'\n      ? this._parseBody(this.text ? this.text : this.xhr.response)\n      : null;\n  }\n}\n\nResponseBase(Response.prototype);\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype._parseBody = function(str){\n  var parse = request.parse[this.type];\n  if(this.req._parser) {\n    return this.req._parser(this, str);\n  }\n  if (!parse && isJSON(this.type)) {\n    parse = request.parse['application/json'];\n  }\n  return parse && str && (str.length || str instanceof Object)\n    ? parse(str)\n    : null;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function(){\n  var req = this.req;\n  var method = req.method;\n  var url = req.url;\n\n  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n  var err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  var self = this;\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {}; // preserves header name case\n  this._header = {}; // coerces header names to lowercase\n  this.on('end', function(){\n    var err = null;\n    var res = null;\n\n    try {\n      res = new Response(self);\n    } catch(e) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = e;\n      // issue #675: return the raw response if the response parsing fails\n      if (self.xhr) {\n        // ie9 doesn't have 'response' property\n        err.rawResponse = typeof self.xhr.responseType == 'undefined' ? self.xhr.responseText : self.xhr.response;\n        // issue #876: return the http status code if the response parsing fails\n        err.status = self.xhr.status ? self.xhr.status : null;\n        err.statusCode = err.status; // backwards-compat only\n      } else {\n        err.rawResponse = null;\n        err.status = null;\n      }\n\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n\n    var new_err;\n    try {\n      if (!self._isResponseOK(res)) {\n        new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n        new_err.original = err;\n        new_err.response = res;\n        new_err.status = res.status;\n      }\n    } catch(e) {\n      new_err = e; // #985 touching res may cause INVALID_STATE_ERR on old Android\n    }\n\n    // #1000 don't catch errors from the callback to avoid double calling it\n    if (new_err) {\n      self.callback(new_err, res);\n    } else {\n      self.callback(null, res);\n    }\n  });\n}\n\n/**\n * Mixin `Emitter` and `RequestBase`.\n */\n\nEmitter(Request.prototype);\nRequestBase(Request.prototype);\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function(type){\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function(type){\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} pass\n * @param {Object} options with 'type' property 'auto' or 'basic' (default 'basic')\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function(user, pass, options){\n  if (!options) {\n    options = {\n      type: 'function' === typeof btoa ? 'basic' : 'auto',\n    }\n  }\n\n  switch (options.type) {\n    case 'basic':\n      this.set('Authorization', 'Basic ' + btoa(user + ':' + pass));\n    break;\n\n    case 'auto':\n      this.username = user;\n      this.password = pass;\n    break;\n  }\n  return this;\n};\n\n/**\n* Add query-string `val`.\n*\n* Examples:\n*\n*   request.get('/shoes')\n*     .query('size=10')\n*     .query({ color: 'blue' })\n*\n* @param {Object|String} val\n* @return {Request} for chaining\n* @api public\n*/\n\nRequest.prototype.query = function(val){\n  if ('string' != typeof val) val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `options` (or filename).\n *\n * ``` js\n * request.post('/upload')\n *   .attach('content', new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String|Object} options\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function(field, file, options){\n  if (this._data) {\n    throw Error(\"superagent can't mix .send() and .attach()\");\n  }\n\n  this._getFormData().append(field, file, options || file.name);\n  return this;\n};\n\nRequest.prototype._getFormData = function(){\n  if (!this._formData) {\n    this._formData = new root.FormData();\n  }\n  return this._formData;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function(err, res){\n  var fn = this._callback;\n  this.clearTimeout();\n\n  if (err) {\n    this.emit('error', err);\n  }\n\n  fn(err, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function(){\n  var err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n  err.crossDomain = true;\n\n  err.status = this.status;\n  err.method = this.method;\n  err.url = this.url;\n\n  this.callback(err);\n};\n\n// This only warns, because the request is still likely to work\nRequest.prototype.buffer = Request.prototype.ca = Request.prototype.agent = function(){\n  console.warn(\"This is not supported in browser version of superagent\");\n  return this;\n};\n\n// This throws, because it can't send/receive data as expected\nRequest.prototype.pipe = Request.prototype.write = function(){\n  throw Error(\"Streaming is not supported in browser version of superagent\");\n};\n\n/**\n * Compose querystring to append to req.url\n *\n * @api private\n */\n\nRequest.prototype._appendQueryString = function(){\n  var query = this._query.join('&');\n  if (query) {\n    this.url += (this.url.indexOf('?') >= 0 ? '&' : '?') + query;\n  }\n\n  if (this._sort) {\n    var index = this.url.indexOf('?');\n    if (index >= 0) {\n      var queryArr = this.url.substring(index + 1).split('&');\n      if (isFunction(this._sort)) {\n        queryArr.sort(this._sort);\n      } else {\n        queryArr.sort();\n      }\n      this.url = this.url.substring(0, index) + '?' + queryArr.join('&');\n    }\n  }\n};\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\nRequest.prototype._isHost = function _isHost(obj) {\n  // Native objects stringify to [object File], [object Blob], [object FormData], etc.\n  return obj && 'object' === typeof obj && !Array.isArray(obj) && Object.prototype.toString.call(obj) !== '[object Object]';\n}\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function(fn){\n  var self = this;\n  var xhr = this.xhr = request.getXHR();\n  var data = this._formData || this._data;\n\n  if (this._endCalled) {\n    console.warn(\"Warning: .end() was called twice. This is not supported in superagent\");\n  }\n  this._endCalled = true;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // state change\n  xhr.onreadystatechange = function(){\n    var readyState = xhr.readyState;\n    if (readyState >= 2 && self._responseTimeoutTimer) {\n      clearTimeout(self._responseTimeoutTimer);\n    }\n    if (4 != readyState) {\n      return;\n    }\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    var status;\n    try { status = xhr.status } catch(e) { status = 0; }\n\n    if (!status) {\n      if (self.timedout || self._aborted) return;\n      return self.crossDomainError();\n    }\n    self.emit('end');\n  };\n\n  // progress\n  var handleProgress = function(direction, e) {\n    if (e.total > 0) {\n      e.percent = e.loaded / e.total * 100;\n    }\n    e.direction = direction;\n    self.emit('progress', e);\n  }\n  if (this.hasListeners('progress')) {\n    try {\n      xhr.onprogress = handleProgress.bind(null, 'download');\n      if (xhr.upload) {\n        xhr.upload.onprogress = handleProgress.bind(null, 'upload');\n      }\n    } catch(e) {\n      // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n      // Reported here:\n      // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n    }\n  }\n\n  // querystring\n  this._appendQueryString();\n\n  this._setTimeouts();\n\n  // initiate request\n  if (this.username && this.password) {\n    xhr.open(this.method, this.url, true, this.username, this.password);\n  } else {\n    xhr.open(this.method, this.url, true);\n  }\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if (!this._formData && 'GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !this._isHost(data)) {\n    // serialize stuff\n    var contentType = this._header['content-type'];\n    var serialize = this._serializer || request.serialize[contentType ? contentType.split(';')[0] : ''];\n    if (!serialize && isJSON(contentType)) {\n      serialize = request.serialize['application/json'];\n    }\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (var field in this.header) {\n    if (null == this.header[field]) continue;\n    xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  if (this._responseType) {\n    xhr.responseType = this._responseType;\n  }\n\n  // send stuff\n  this.emit('request', this);\n\n  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n  xhr.send(typeof data !== 'undefined' ? data : null);\n  return this;\n};\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.get = function(url, data, fn){\n  var req = request('GET', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.head = function(url, data, fn){\n  var req = request('HEAD', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * OPTIONS query to `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.options = function(url, data, fn){\n  var req = request('OPTIONS', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nfunction del(url, fn){\n  var req = request('DELETE', url);\n  if (fn) req.end(fn);\n  return req;\n};\n\nrequest['del'] = del;\nrequest['delete'] = del;\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.patch = function(url, data, fn){\n  var req = request('PATCH', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.post = function(url, data, fn){\n  var req = request('POST', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.put = function(url, data, fn){\n  var req = request('PUT', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/superagent/lib/client.js\n// module id = 15\n// module chunks = 0","/**\n * Check if `fn` is a function.\n *\n * @param {Function} fn\n * @return {Boolean}\n * @api private\n */\nvar isObject = require('./is-object');\n\nfunction isFunction(fn) {\n  var tag = isObject(fn) ? Object.prototype.toString.call(fn) : '';\n  return tag === '[object Function]';\n}\n\nmodule.exports = isFunction;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/superagent/lib/is-function.js\n// module id = 16\n// module chunks = 0","/**\n * Module of mixed-in functions shared between node and client code\n */\nvar isObject = require('./is-object');\n\n/**\n * Expose `RequestBase`.\n */\n\nmodule.exports = RequestBase;\n\n/**\n * Initialize a new `RequestBase`.\n *\n * @api public\n */\n\nfunction RequestBase(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the prototype properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in RequestBase.prototype) {\n    obj[key] = RequestBase.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.clearTimeout = function _clearTimeout(){\n  this._timeout = 0;\n  this._responseTimeout = 0;\n  clearTimeout(this._timer);\n  clearTimeout(this._responseTimeoutTimer);\n  return this;\n};\n\n/**\n * Override default response body parser\n *\n * This function will be called to convert incoming data into request.body\n *\n * @param {Function}\n * @api public\n */\n\nRequestBase.prototype.parse = function parse(fn){\n  this._parser = fn;\n  return this;\n};\n\n/**\n * Set format of binary response body.\n * In browser valid formats are 'blob' and 'arraybuffer',\n * which return Blob and ArrayBuffer, respectively.\n *\n * In Node all values result in Buffer.\n *\n * Examples:\n *\n *      req.get('/')\n *        .responseType('blob')\n *        .end(callback);\n *\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.responseType = function(val){\n  this._responseType = val;\n  return this;\n};\n\n/**\n * Override default request body serializer\n *\n * This function will be called to convert data set via .send or .attach into payload to send\n *\n * @param {Function}\n * @api public\n */\n\nRequestBase.prototype.serialize = function serialize(fn){\n  this._serializer = fn;\n  return this;\n};\n\n/**\n * Set timeouts.\n *\n * - response timeout is time between sending request and receiving the first byte of the response. Includes DNS and connection time.\n * - deadline is the time from start of the request to receiving response body in full. If the deadline is too short large files may not load at all on slow connections.\n *\n * Value of 0 or false means no timeout.\n *\n * @param {Number|Object} ms or {response, read, deadline}\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.timeout = function timeout(options){\n  if (!options || 'object' !== typeof options) {\n    this._timeout = options;\n    this._responseTimeout = 0;\n    return this;\n  }\n\n  if ('undefined' !== typeof options.deadline) {\n    this._timeout = options.deadline;\n  }\n  if ('undefined' !== typeof options.response) {\n    this._responseTimeout = options.response;\n  }\n  return this;\n};\n\n/**\n * Promise support\n *\n * @param {Function} resolve\n * @param {Function} reject\n * @return {Request}\n */\n\nRequestBase.prototype.then = function then(resolve, reject) {\n  if (!this._fullfilledPromise) {\n    var self = this;\n    if (this._endCalled) {\n      console.warn(\"Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises\");\n    }\n    this._fullfilledPromise = new Promise(function(innerResolve, innerReject){\n      self.end(function(err, res){\n        if (err) innerReject(err); else innerResolve(res);\n      });\n    });\n  }\n  return this._fullfilledPromise.then(resolve, reject);\n}\n\nRequestBase.prototype.catch = function(cb) {\n  return this.then(undefined, cb);\n};\n\n/**\n * Allow for extension\n */\n\nRequestBase.prototype.use = function use(fn) {\n  fn(this);\n  return this;\n}\n\nRequestBase.prototype.ok = function(cb) {\n  if ('function' !== typeof cb) throw Error(\"Callback required\");\n  this._okCallback = cb;\n  return this;\n};\n\nRequestBase.prototype._isResponseOK = function(res) {\n  if (!res) {\n    return false;\n  }\n\n  if (this._okCallback) {\n    return this._okCallback(res);\n  }\n\n  return res.status >= 200 && res.status < 300;\n};\n\n\n/**\n * Get request header `field`.\n * Case-insensitive.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nRequestBase.prototype.get = function(field){\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Get case-insensitive header `field` value.\n * This is a deprecated internal API. Use `.get(field)` instead.\n *\n * (getHeader is no longer used internally by the superagent code base)\n *\n * @param {String} field\n * @return {String}\n * @api private\n * @deprecated\n */\n\nRequestBase.prototype.getHeader = RequestBase.prototype.get;\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n * Case-insensitive.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.set = function(field, val){\n  if (isObject(field)) {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n    return this;\n  }\n  this._header[field.toLowerCase()] = val;\n  this.header[field] = val;\n  return this;\n};\n\n/**\n * Remove header `field`.\n * Case-insensitive.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field\n */\nRequestBase.prototype.unset = function(field){\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n\n/**\n * Write the field `name` and `val`, or multiple fields with one object\n * for \"multipart/form-data\" request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n *\n * request.post('/upload')\n *   .field({ foo: 'bar', baz: 'qux' })\n *   .end(callback);\n * ```\n *\n * @param {String|Object} name\n * @param {String|Blob|File|Buffer|fs.ReadStream} val\n * @return {Request} for chaining\n * @api public\n */\nRequestBase.prototype.field = function(name, val) {\n\n  // name should be either a string or an object.\n  if (null === name ||  undefined === name) {\n    throw new Error('.field(name, val) name can not be empty');\n  }\n\n  if (isObject(name)) {\n    for (var key in name) {\n      this.field(key, name[key]);\n    }\n    return this;\n  }\n\n  if (Array.isArray(val)) {\n    for (var i in val) {\n      this.field(name, val[i]);\n    }\n    return this;\n  }\n\n  // val should be defined now\n  if (null === val || undefined === val) {\n    throw new Error('.field(name, val) val can not be empty');\n  }\n  if ('boolean' === typeof val) {\n    val = '' + val;\n  }\n  this._getFormData().append(name, val);\n  return this;\n};\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request}\n * @api public\n */\nRequestBase.prototype.abort = function(){\n  if (this._aborted) {\n    return this;\n  }\n  this._aborted = true;\n  this.xhr && this.xhr.abort(); // browser\n  this.req && this.req.abort(); // node\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n *\n * @api public\n */\n\nRequestBase.prototype.withCredentials = function(){\n  // This is browser-only functionality. Node side is no-op.\n  this._withCredentials = true;\n  return this;\n};\n\n/**\n * Set the max redirects to `n`. Does noting in browser XHR implementation.\n *\n * @param {Number} n\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.redirects = function(n){\n  this._maxRedirects = n;\n  return this;\n};\n\n/**\n * Convert to a plain javascript object (not JSON string) of scalar properties.\n * Note as this method is designed to return a useful non-this value,\n * it cannot be chained.\n *\n * @return {Object} describing method, url, and data of this request\n * @api public\n */\n\nRequestBase.prototype.toJSON = function(){\n  return {\n    method: this.method,\n    url: this.url,\n    data: this._data,\n    headers: this._header\n  };\n};\n\n\n/**\n * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"}')\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n *      request.post('/user')\n *        .send('name=tobi')\n *        .send('species=ferret')\n *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.send = function(data){\n  var isObj = isObject(data);\n  var type = this._header['content-type'];\n\n  if (isObj && !this._data) {\n    if (Array.isArray(data)) {\n      this._data = [];\n    } else if (!this._isHost(data)) {\n      this._data = {};\n    }\n  } else if (data && this._data && this._isHost(this._data)) {\n    throw Error(\"Can't merge these send calls\");\n  }\n\n  // merge\n  if (isObj && isObject(this._data)) {\n    for (var key in data) {\n      this._data[key] = data[key];\n    }\n  } else if ('string' == typeof data) {\n    // default to x-www-form-urlencoded\n    if (!type) this.type('form');\n    type = this._header['content-type'];\n    if ('application/x-www-form-urlencoded' == type) {\n      this._data = this._data\n        ? this._data + '&' + data\n        : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!isObj || this._isHost(data)) {\n    return this;\n  }\n\n  // default to json\n  if (!type) this.type('json');\n  return this;\n};\n\n\n/**\n * Sort `querystring` by the sort function\n *\n *\n * Examples:\n *\n *       // default order\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery()\n *         .end(callback)\n *\n *       // customized sort function\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery(function(a, b){\n *           return a.length - b.length;\n *         })\n *         .end(callback)\n *\n *\n * @param {Function} sort\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.sortQuery = function(sort) {\n  // _sort default to true but otherwise can be a function or boolean\n  this._sort = typeof sort === 'undefined' ? true : sort;\n  return this;\n};\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequestBase.prototype._timeoutError = function(reason, timeout){\n  if (this._aborted) {\n    return;\n  }\n  var err = new Error(reason + timeout + 'ms exceeded');\n  err.timeout = timeout;\n  err.code = 'ECONNABORTED';\n  this.timedout = true;\n  this.abort();\n  this.callback(err);\n};\n\nRequestBase.prototype._setTimeouts = function() {\n  var self = this;\n\n  // deadline\n  if (this._timeout && !this._timer) {\n    this._timer = setTimeout(function(){\n      self._timeoutError('Timeout of ', self._timeout);\n    }, this._timeout);\n  }\n  // response timeout\n  if (this._responseTimeout && !this._responseTimeoutTimer) {\n    this._responseTimeoutTimer = setTimeout(function(){\n      self._timeoutError('Response timeout of ', self._responseTimeout);\n    }, this._responseTimeout);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/superagent/lib/request-base.js\n// module id = 17\n// module chunks = 0","\n/**\n * Module dependencies.\n */\n\nvar utils = require('./utils');\n\n/**\n * Expose `ResponseBase`.\n */\n\nmodule.exports = ResponseBase;\n\n/**\n * Initialize a new `ResponseBase`.\n *\n * @api public\n */\n\nfunction ResponseBase(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the prototype properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in ResponseBase.prototype) {\n    obj[key] = ResponseBase.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponseBase.prototype.get = function(field){\n    return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponseBase.prototype._setHeaderProperties = function(header){\n    // TODO: moar!\n    // TODO: make this a util\n\n    // content-type\n    var ct = header['content-type'] || '';\n    this.type = utils.type(ct);\n\n    // params\n    var params = utils.params(ct);\n    for (var key in params) this[key] = params[key];\n\n    this.links = {};\n\n    // links\n    try {\n        if (header.link) {\n            this.links = utils.parseLinks(header.link);\n        }\n    } catch (err) {\n        // ignore\n    }\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponseBase.prototype._setStatusProperties = function(status){\n    var type = status / 100 | 0;\n\n    // status / class\n    this.status = this.statusCode = status;\n    this.statusType = type;\n\n    // basics\n    this.info = 1 == type;\n    this.ok = 2 == type;\n    this.redirect = 3 == type;\n    this.clientError = 4 == type;\n    this.serverError = 5 == type;\n    this.error = (4 == type || 5 == type)\n        ? this.toError()\n        : false;\n\n    // sugar\n    this.accepted = 202 == status;\n    this.noContent = 204 == status;\n    this.badRequest = 400 == status;\n    this.unauthorized = 401 == status;\n    this.notAcceptable = 406 == status;\n    this.forbidden = 403 == status;\n    this.notFound = 404 == status;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/superagent/lib/response-base.js\n// module id = 18\n// module chunks = 0","\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nexports.type = function(str){\n  return str.split(/ *; */).shift();\n};\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.params = function(str){\n  return str.split(/ *; */).reduce(function(obj, str){\n    var parts = str.split(/ *= */);\n    var key = parts.shift();\n    var val = parts.shift();\n\n    if (key && val) obj[key] = val;\n    return obj;\n  }, {});\n};\n\n/**\n * Parse Link header fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.parseLinks = function(str){\n  return str.split(/ *, */).reduce(function(obj, str){\n    var parts = str.split(/ *; */);\n    var url = parts[0].slice(1, -1);\n    var rel = parts[1].split(/ *= */)[1].slice(1, -1);\n    obj[rel] = url;\n    return obj;\n  }, {});\n};\n\n/**\n * Strip content related fields from `header`.\n *\n * @param {Object} header\n * @return {Object} header\n * @api private\n */\n\nexports.cleanHeader = function(header, shouldStripCookie){\n  delete header['content-type'];\n  delete header['content-length'];\n  delete header['transfer-encoding'];\n  delete header['host'];\n  if (shouldStripCookie) {\n    delete header['cookie'];\n  }\n  return header;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/superagent/lib/utils.js\n// module id = 19\n// module chunks = 0","import Wargamer from './Wargamer';\nimport WorldOfTanks from './clients/WorldOfTanks';\nimport WorldOfTanksBlitz from './clients/WorldOfTanksBlitz';\nimport WorldOfTanksConsole from './clients/WorldOfTanksConsole';\nimport WorldOfWarships from './clients/WorldOfWarships';\nimport WorldOfWarplanes from './clients/WorldOfWarplanes';\nimport Wargaming from './clients/Wargaming';\n\nexport {\n  WorldOfTanks,\n  WorldOfTanksBlitz,\n  WorldOfTanksConsole,\n  WorldOfWarships,\n  WorldOfWarplanes,\n  Wargaming,\n};\n\nexport default Wargamer;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}