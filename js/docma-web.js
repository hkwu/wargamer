/*! dustjs-linkedin - v2.7.2
* http://dustjs.com/
* Copyright (c) 2015 Aleksander Williams; Released under the MIT License */
!function(a,b){"function"==typeof define&&define.amd&&define.amd.dust===!0?define("dust.core",[],b):"object"==typeof exports?module.exports=b():a.dust=b()}(this,function(){function getTemplate(a,b){return a?"function"==typeof a&&a.template?a.template:dust.isTemplateFn(a)?a:b!==!1?dust.cache[a]:void 0:void 0}function load(a,b,c){if(!a)return b.setError(new Error("No template or template name provided to render"));var d=getTemplate(a,dust.config.cache);return d?d(b,Context.wrap(c,d.templateName)):dust.onLoad?b.map(function(b){function d(a,d){var f;if(a)return b.setError(a);if(f=getTemplate(d,!1)||getTemplate(e,dust.config.cache),!f){if(!dust.compile)return b.setError(new Error("Dust compiler not available"));f=dust.loadSource(dust.compile(d,e))}f(b,Context.wrap(c,f.templateName)).end()}var e=a;3===dust.onLoad.length?dust.onLoad(e,c.options,d):dust.onLoad(e,d)}):b.setError(new Error("Template Not Found: "+a))}function Context(a,b,c,d,e){void 0===a||a instanceof Stack||(a=new Stack(a)),this.stack=a,this.global=b,this.options=c,this.blocks=d,this.templateName=e}function getWithResolvedData(a,b,c){return function(d){return a.push(d)._get(b,c)}}function Stack(a,b,c,d){this.tail=b,this.isObject=a&&"object"==typeof a,this.head=a,this.index=c,this.of=d}function Stub(a){this.head=new Chunk(this),this.callback=a,this.out=""}function Stream(){this.head=new Chunk(this)}function Chunk(a,b,c){this.root=a,this.next=b,this.data=[],this.flushable=!1,this.taps=c}function Tap(a,b){this.head=a,this.tail=b}var dust={version:"2.7.2"},NONE="NONE",ERROR="ERROR",WARN="WARN",INFO="INFO",DEBUG="DEBUG",EMPTY_FUNC=function(){};dust.config={whitespace:!1,amd:!1,cjs:!1,cache:!0},dust._aliases={write:"w",end:"e",map:"m",render:"r",reference:"f",section:"s",exists:"x",notexists:"nx",block:"b",partial:"p",helper:"h"},function(){var a,b,c={DEBUG:0,INFO:1,WARN:2,ERROR:3,NONE:4};"undefined"!=typeof console&&console.log?(a=console.log,b="function"==typeof a?function(){a.apply(console,arguments)}:function(){a(Array.prototype.slice.apply(arguments).join(" "))}):b=EMPTY_FUNC,dust.log=function(a,d){d=d||INFO,c[d]>=c[dust.debugLevel]&&b("[DUST:"+d+"]",a)},dust.debugLevel=NONE,"undefined"!=typeof process&&process.env&&/\bdust\b/.test(process.env.DEBUG)&&(dust.debugLevel=DEBUG)}(),dust.helpers={},dust.cache={},dust.register=function(a,b){a&&(b.templateName=a,dust.config.cache!==!1&&(dust.cache[a]=b))},dust.render=function(a,b,c){var d=new Stub(c).head;try{load(a,d,b).end()}catch(e){d.setError(e)}},dust.stream=function(a,b){var c=new Stream,d=c.head;return dust.nextTick(function(){try{load(a,d,b).end()}catch(c){d.setError(c)}}),c},dust.loadSource=function(source){return eval(source)},dust.isArray=Array.isArray?Array.isArray:function(a){return"[object Array]"===Object.prototype.toString.call(a)},dust.nextTick=function(){return function(a){setTimeout(a,0)}}(),dust.isEmpty=function(a){return 0===a?!1:dust.isArray(a)&&!a.length?!0:!a},dust.isEmptyObject=function(a){var b;if(null===a)return!1;if(void 0===a)return!1;if(a.length>0)return!1;for(b in a)if(Object.prototype.hasOwnProperty.call(a,b))return!1;return!0},dust.isTemplateFn=function(a){return"function"==typeof a&&a.__dustBody},dust.isThenable=function(a){return a&&"object"==typeof a&&"function"==typeof a.then},dust.isStreamable=function(a){return a&&"function"==typeof a.on&&"function"==typeof a.pipe},dust.filter=function(a,b,c,d){var e,f,g,h;if(c)for(e=0,f=c.length;f>e;e++)g=c[e],g.length&&(h=dust.filters[g],"s"===g?b=null:"function"==typeof h?a=h(a,d):dust.log("Invalid filter `"+g+"`",WARN));return b&&(a=dust.filters[b](a,d)),a},dust.filters={h:function(a){return dust.escapeHtml(a)},j:function(a){return dust.escapeJs(a)},u:encodeURI,uc:encodeURIComponent,js:function(a){return dust.escapeJSON(a)},jp:function(a){return JSON?JSON.parse(a):(dust.log("JSON is undefined; could not parse `"+a+"`",WARN),a)}},dust.makeBase=dust.context=function(a,b){return new Context(void 0,a,b)},Context.wrap=function(a,b){return a instanceof Context?a:new Context(a,{},{},null,b)},Context.prototype.get=function(a,b){return"string"==typeof a&&("."===a[0]&&(b=!0,a=a.substr(1)),a=a.split(".")),this._get(b,a)},Context.prototype._get=function(a,b){var c,d,e,f,g,h=this.stack||{},i=1;if(d=b[0],e=b.length,a&&0===e)f=h,h=h.head;else{if(a)h&&(h=h.head?h.head[d]:void 0);else{for(;h&&(!h.isObject||(f=h.head,c=h.head[d],void 0===c));)h=h.tail;h=void 0!==c?c:this.global&&this.global[d]}for(;h&&e>i;){if(dust.isThenable(h))return h.then(getWithResolvedData(this,a,b.slice(i)));f=h,h=h[b[i]],i++}}return"function"==typeof h?(g=function(){try{return h.apply(f,arguments)}catch(a){throw dust.log(a,ERROR),a}},g.__dustBody=!!h.__dustBody,g):(void 0===h&&dust.log("Cannot find reference `{"+b.join(".")+"}` in template `"+this.getTemplateName()+"`",INFO),h)},Context.prototype.getPath=function(a,b){return this._get(a,b)},Context.prototype.push=function(a,b,c){return void 0===a?(dust.log("Not pushing an undefined variable onto the context",INFO),this):this.rebase(new Stack(a,this.stack,b,c))},Context.prototype.pop=function(){var a=this.current();return this.stack=this.stack&&this.stack.tail,a},Context.prototype.rebase=function(a){return new Context(a,this.global,this.options,this.blocks,this.getTemplateName())},Context.prototype.clone=function(){var a=this.rebase();return a.stack=this.stack,a},Context.prototype.current=function(){return this.stack&&this.stack.head},Context.prototype.getBlock=function(a){var b,c,d;if("function"==typeof a&&(a=a(new Chunk,this).data.join("")),b=this.blocks,!b)return dust.log("No blocks for context `"+a+"` in template `"+this.getTemplateName()+"`",DEBUG),!1;for(c=b.length;c--;)if(d=b[c][a])return d;return dust.log("Malformed template `"+this.getTemplateName()+"` was missing one or more blocks."),!1},Context.prototype.shiftBlocks=function(a){var b,c=this.blocks;return a?(b=c?c.concat([a]):[a],new Context(this.stack,this.global,this.options,b,this.getTemplateName())):this},Context.prototype.resolve=function(a){var b;return"function"!=typeof a?a:(b=(new Chunk).render(a,this),b instanceof Chunk?b.data.join(""):b)},Context.prototype.getTemplateName=function(){return this.templateName},Stub.prototype.flush=function(){for(var a=this.head;a;){if(!a.flushable)return a.error?(this.callback(a.error),dust.log("Rendering failed with error `"+a.error+"`",ERROR),void(this.flush=EMPTY_FUNC)):void 0;this.out+=a.data.join(""),a=a.next,this.head=a}this.callback(null,this.out)},Stream.prototype.flush=function(){for(var a=this.head;a;){if(!a.flushable)return a.error?(this.emit("error",a.error),this.emit("end"),dust.log("Streaming failed with error `"+a.error+"`",ERROR),void(this.flush=EMPTY_FUNC)):void 0;this.emit("data",a.data.join("")),a=a.next,this.head=a}this.emit("end")},Stream.prototype.emit=function(a,b){var c,d,e=this.events||{},f=e[a]||[];if(!f.length)return dust.log("Stream broadcasting, but no listeners for `"+a+"`",DEBUG),!1;for(f=f.slice(0),c=0,d=f.length;d>c;c++)f[c](b);return!0},Stream.prototype.on=function(a,b){var c=this.events=this.events||{},d=c[a]=c[a]||[];return"function"!=typeof b?dust.log("No callback function provided for `"+a+"` event listener",WARN):d.push(b),this},Stream.prototype.pipe=function(a){if("function"!=typeof a.write||"function"!=typeof a.end)return dust.log("Incompatible stream passed to `pipe`",WARN),this;var b=!1;return"function"==typeof a.emit&&a.emit("pipe",this),"function"==typeof a.on&&a.on("error",function(){b=!0}),this.on("data",function(c){if(!b)try{a.write(c,"utf8")}catch(d){dust.log(d,ERROR)}}).on("end",function(){if(!b)try{a.end(),b=!0}catch(c){dust.log(c,ERROR)}})},Chunk.prototype.write=function(a){var b=this.taps;return b&&(a=b.go(a)),this.data.push(a),this},Chunk.prototype.end=function(a){return a&&this.write(a),this.flushable=!0,this.root.flush(),this},Chunk.prototype.map=function(a){var b=new Chunk(this.root,this.next,this.taps),c=new Chunk(this.root,b,this.taps);this.next=c,this.flushable=!0;try{a(c)}catch(d){dust.log(d,ERROR),c.setError(d)}return b},Chunk.prototype.tap=function(a){var b=this.taps;return this.taps=b?b.push(a):new Tap(a),this},Chunk.prototype.untap=function(){return this.taps=this.taps.tail,this},Chunk.prototype.render=function(a,b){return a(this,b)},Chunk.prototype.reference=function(a,b,c,d){return"function"==typeof a?(a=a.apply(b.current(),[this,b,null,{auto:c,filters:d}]),a instanceof Chunk?a:this.reference(a,b,c,d)):dust.isThenable(a)?this.await(a,b,null,c,d):dust.isStreamable(a)?this.stream(a,b,null,c,d):dust.isEmpty(a)?this:this.write(dust.filter(a,c,d,b))},Chunk.prototype.section=function(a,b,c,d){var e,f,g,h=c.block,i=c["else"],j=this;if("function"==typeof a&&!dust.isTemplateFn(a)){try{a=a.apply(b.current(),[this,b,c,d])}catch(k){return dust.log(k,ERROR),this.setError(k)}if(a instanceof Chunk)return a}if(dust.isEmptyObject(c))return j;if(dust.isEmptyObject(d)||(b=b.push(d)),dust.isArray(a)){if(h){if(f=a.length,f>0){for(g=b.stack&&b.stack.head||{},g.$len=f,e=0;f>e;e++)g.$idx=e,j=h(j,b.push(a[e],e,f));return g.$idx=void 0,g.$len=void 0,j}if(i)return i(this,b)}}else{if(dust.isThenable(a))return this.await(a,b,c);if(dust.isStreamable(a))return this.stream(a,b,c);if(a===!0){if(h)return h(this,b)}else if(a||0===a){if(h)return h(this,b.push(a))}else if(i)return i(this,b)}return dust.log("Section without corresponding key in template `"+b.getTemplateName()+"`",DEBUG),this},Chunk.prototype.exists=function(a,b,c){var d=c.block,e=c["else"];if(dust.isEmpty(a)){if(e)return e(this,b)}else{if(d)return d(this,b);dust.log("No block for exists check in template `"+b.getTemplateName()+"`",DEBUG)}return this},Chunk.prototype.notexists=function(a,b,c){var d=c.block,e=c["else"];if(dust.isEmpty(a)){if(d)return d(this,b);dust.log("No block for not-exists check in template `"+b.getTemplateName()+"`",DEBUG)}else if(e)return e(this,b);return this},Chunk.prototype.block=function(a,b,c){var d=a||c.block;return d?d(this,b):this},Chunk.prototype.partial=function(a,b,c,d){var e;return void 0===d&&(d=c,c=b),dust.isEmptyObject(d)||(c=c.clone(),e=c.pop(),c=c.push(d).push(e)),dust.isTemplateFn(a)?this.capture(a,b,function(a,b){c.templateName=a,load(a,b,c).end()}):(c.templateName=a,load(a,this,c))},Chunk.prototype.helper=function(a,b,c,d,e){var f,g=this,h=d.filters;if(void 0===e&&(e="h"),!dust.helpers[a])return dust.log("Helper `"+a+"` does not exist",WARN),g;try{return f=dust.helpers[a](g,b,c,d),f instanceof Chunk?f:("string"==typeof h&&(h=h.split("|")),dust.isEmptyObject(c)?g.reference(f,b,e,h):g.section(f,b,c,d))}catch(i){return dust.log("Error in helper `"+a+"`: "+i.message,ERROR),g.setError(i)}},Chunk.prototype.await=function(a,b,c,d,e){return this.map(function(f){a.then(function(a){f=c?f.section(a,b,c):f.reference(a,b,d,e),f.end()},function(a){var d=c&&c.error;d?f.render(d,b.push(a)).end():(dust.log("Unhandled promise rejection in `"+b.getTemplateName()+"`",INFO),f.end())})})},Chunk.prototype.stream=function(a,b,c,d,e){var f=c&&c.block,g=c&&c.error;return this.map(function(h){var i=!1;a.on("data",function(a){i||(f?h=h.map(function(c){c.render(f,b.push(a)).end()}):c||(h=h.reference(a,b,d,e)))}).on("error",function(a){i||(g?h.render(g,b.push(a)):dust.log("Unhandled stream error in `"+b.getTemplateName()+"`",INFO),i||(i=!0,h.end()))}).on("end",function(){i||(i=!0,h.end())})})},Chunk.prototype.capture=function(a,b,c){return this.map(function(d){var e=new Stub(function(a,b){a?d.setError(a):c(b,d)});a(e.head,b).end()})},Chunk.prototype.setError=function(a){return this.error=a,this.root.flush(),this};for(var f in Chunk.prototype)dust._aliases[f]&&(Chunk.prototype[dust._aliases[f]]=Chunk.prototype[f]);Tap.prototype.push=function(a){return new Tap(a,this)},Tap.prototype.go=function(a){for(var b=this;b;)a=b.head(a),b=b.tail;return a};var HCHARS=/[&<>"']/,AMP=/&/g,LT=/</g,GT=/>/g,QUOT=/\"/g,SQUOT=/\'/g;dust.escapeHtml=function(a){return"string"==typeof a||a&&"function"==typeof a.toString?("string"!=typeof a&&(a=a.toString()),HCHARS.test(a)?a.replace(AMP,"&amp;").replace(LT,"&lt;").replace(GT,"&gt;").replace(QUOT,"&quot;").replace(SQUOT,"&#39;"):a):a};var BS=/\\/g,FS=/\//g,CR=/\r/g,LS=/\u2028/g,PS=/\u2029/g,NL=/\n/g,LF=/\f/g,SQ=/'/g,DQ=/"/g,TB=/\t/g;return dust.escapeJs=function(a){return"string"==typeof a?a.replace(BS,"\\\\").replace(FS,"\\/").replace(DQ,'\\"').replace(SQ,"\\'").replace(CR,"\\r").replace(LS,"\\u2028").replace(PS,"\\u2029").replace(NL,"\\n").replace(LF,"\\f").replace(TB,"\\t"):a},dust.escapeJSON=function(a){return JSON?JSON.stringify(a).replace(LS,"\\u2028").replace(PS,"\\u2029").replace(LT,"\\u003c"):(dust.log("JSON is undefined; could not escape `"+a+"`",WARN),a)},dust}),"function"==typeof define&&define.amd&&define.amd.dust===!0&&define(["require","dust.core"],function(require,dust){return dust.onLoad=function(a,b){require([a],function(){b()})},dust});
/*! dustjs-helpers - v1.7.3
* http://dustjs.com/
* Copyright (c) 2015 Aleksander Williams; Released under the MIT License */
!function(a,b){"function"==typeof define&&define.amd&&define.amd.dust===!0?define(["dust.core"],b):"object"==typeof exports?module.exports=b(require("dustjs-linkedin")):b(a.dust)}(this,function(dust){function a(a,b,c){c=c||"INFO",a=a?"{@"+a+"}: ":"",dust.log(a+b,c)}function b(b){k[b]||(a(b,"Deprecation warning: "+b+" is deprecated and will be removed in a future version of dustjs-helpers","WARN"),a(null,"For help and a deprecation timeline, see https://github.com/linkedin/dustjs-helpers/wiki/Deprecated-Features#"+b.replace(/\W+/g,""),"WARN"),k[b]=!0)}function c(a){return a.stack.tail&&a.stack.tail.head&&"undefined"!=typeof a.stack.tail.head.__select__}function d(a){return c(a)&&a.get("__select__")}function e(a,b){var c,d=a.stack.head,e=a.rebase();a.stack&&a.stack.tail&&(e.stack=a.stack.tail);var f={isPending:!1,isResolved:!1,isDeferredComplete:!1,deferreds:[]};for(c in b)f[c]=b[c];return e.push({__select__:f}).push(d,a.stack.index,a.stack.of)}function f(a){var b,c;if(a.isDeferredPending=!0,a.deferreds.length)for(a.isDeferredComplete=!0,b=0,c=a.deferreds.length;c>b;b++)a.deferreds[b]();a.isDeferredPending=!1}function g(a,b){return"function"==typeof b?b.toString().replace(/(^\s+|\s+$)/gm,"").replace(/\n/gm,"").replace(/,\s*/gm,", ").replace(/\)\{/gm,") {"):b}function h(a,b){return function(c,d,e,f){return i(c,d,e,f,a,b)}}function i(b,c,e,f,g,h){var i,k,l,m,n=e.block,o=e["else"],p=d(c)||{};if(p.isResolved&&!p.isDeferredPending)return b;if(f.hasOwnProperty("key"))k=f.key;else{if(!p.hasOwnProperty("key"))return a(g,"No key specified","WARN"),b;k=p.key}return m=f.type||p.type,k=j(c.resolve(k),m),l=j(c.resolve(f.value),m),h(k,l)?(p.isPending||(i=!0,p.isPending=!0),n&&(b=b.render(n,c)),i&&(p.isResolved=!0)):o&&(b=b.render(o,c)),b}function j(a,b){switch(b&&(b=b.toLowerCase()),b){case"number":return+a;case"string":return String(a);case"boolean":return a="false"===a?!1:a,Boolean(a);case"date":return new Date(a)}return a}var k={},l={tap:function(a,c,d){return b("tap"),d.resolve(a)},sep:function(a,b,c){var d=c.block;return b.stack.index===b.stack.of-1?a:d?d(a,b):a},first:function(a,b,c){return 0===b.stack.index?c.block(a,b):a},last:function(a,b,c){return b.stack.index===b.stack.of-1?c.block(a,b):a},contextDump:function(b,c,d,e){var f,h,i=c.resolve(e.to),j=c.resolve(e.key);switch(j){case"full":f=c.stack;break;default:f=c.stack.head}switch(h=JSON.stringify(f,g,2),i){case"console":a("contextDump",h);break;default:h=h.replace(/</g,"\\u003c"),b=b.write(h)}return b},math:function(b,c,g,h){var i,j=h.key,k=h.method,l=h.operand,m=h.round;if(!h.hasOwnProperty("key")||!h.method)return a("math","`key` or `method` was not provided","ERROR"),b;switch(j=parseFloat(c.resolve(j)),l=parseFloat(c.resolve(l)),k){case"mod":0===l&&a("math","Division by 0","ERROR"),i=j%l;break;case"add":i=j+l;break;case"subtract":i=j-l;break;case"multiply":i=j*l;break;case"divide":0===l&&a("math","Division by 0","ERROR"),i=j/l;break;case"ceil":case"floor":case"round":case"abs":i=Math[k](j);break;case"toint":i=parseInt(j,10);break;default:a("math","Method `"+k+"` is not supported","ERROR")}return"undefined"!=typeof i&&(m&&(i=Math.round(i)),g&&g.block?(c=e(c,{key:i}),b=b.render(g.block,c),f(d(c))):b=b.write(i)),b},select:function(b,c,g,h){var i=g.block,j={};return h.hasOwnProperty("key")&&(j.key=c.resolve(h.key)),h.hasOwnProperty("type")&&(j.type=h.type),i?(c=e(c,j),b=b.render(i,c),f(d(c))):a("select","Missing body block","WARN"),b},eq:h("eq",function(a,b){return a===b}),ne:h("ne",function(a,b){return a!==b}),lt:h("lt",function(a,b){return b>a}),lte:h("lte",function(a,b){return b>=a}),gt:h("gt",function(a,b){return a>b}),gte:h("gte",function(a,b){return a>=b}),any:function(b,c,e,f){var g=d(c);return g?g.isDeferredComplete?a("any","Must not be nested inside {@any} or {@none} block","ERROR"):b=b.map(function(a){g.deferreds.push(function(){g.isResolved&&(a=a.render(e.block,c)),a.end()})}):a("any","Must be used inside a {@select} block","ERROR"),b},none:function(b,c,e,f){var g=d(c);return g?g.isDeferredComplete?a("none","Must not be nested inside {@any} or {@none} block","ERROR"):b=b.map(function(a){g.deferreds.push(function(){g.isResolved||(a=a.render(e.block,c)),a.end()})}):a("none","Must be used inside a {@select} block","ERROR"),b},size:function(a,b,c,d){var e,f,g=d.key;if(g=b.resolve(d.key),g&&g!==!0)if(dust.isArray(g))e=g.length;else if(!isNaN(parseFloat(g))&&isFinite(g))e=g;else if("object"==typeof g){e=0;for(f in g)g.hasOwnProperty(f)&&e++}else e=(g+"").length;else e=0;return a.write(e)}};for(var m in l)dust.helpers[m]=l[m];return dust});
!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var t;"undefined"!=typeof window?t=window:"undefined"!=typeof global?t=global:"undefined"!=typeof self&&(t=self),t.page=e()}}(function(){return function e(t,n,r){function i(a,s){if(!n[a]){if(!t[a]){var u="function"==typeof require&&require;if(!s&&u)return u(a,!0);if(o)return o(a,!0);var c=new Error("Cannot find module '"+a+"'");throw c.code="MODULE_NOT_FOUND",c}var p=n[a]={exports:{}};t[a][0].call(p.exports,function(e){var n=t[a][1][e];return i(n?n:e)},p,p.exports,e,t,n,r)}return n[a].exports}for(var o="function"==typeof require&&require,a=0;a<r.length;a++)i(r[a]);return i}({1:[function(e,t,n){(function(n){"use strict";function r(e,t){if("function"==typeof e)return r("*",e);if("function"==typeof t)for(var n=new s(e),i=1;i<arguments.length;++i)r.callbacks.push(n.middleware(arguments[i]));else"string"==typeof e?r["string"==typeof t?"redirect":"show"](e,t):r.start(e)}function i(e){if(!e.handled){var t;t=y?g+v.hash.replace("#!",""):v.pathname+v.search,t!==e.canonicalPath&&(r.stop(),e.handled=!1,v.href=e.canonicalPath)}}function o(e){return"string"!=typeof e?e:m?decodeURIComponent(e.replace(/\+/g," ")):e}function a(e,t){"/"===e[0]&&0!==e.indexOf(g)&&(e=g+(y?"#!":"")+e);var n=e.indexOf("?");if(this.canonicalPath=e,this.path=e.replace(g,"")||"/",y&&(this.path=this.path.replace("#!","")||"/"),this.title=document.title,this.state=t||{},this.state.path=e,this.querystring=~n?o(e.slice(n+1)):"",this.pathname=o(~n?e.slice(0,n):e),this.params={},this.hash="",!y){if(!~this.path.indexOf("#"))return;var r=this.path.split("#");this.path=r[0],this.hash=o(r[1])||"",this.querystring=this.querystring.split("#")[0]}}function s(e,t){t=t||{},this.path="*"===e?"(.*)":e,this.method="GET",this.regexp=f(this.path,this.keys=[],t)}function u(e){if(1===c(e)&&!(e.metaKey||e.ctrlKey||e.shiftKey||e.defaultPrevented)){for(var t=e.path?e.path[0]:e.target;t&&"A"!==t.nodeName;)t=t.parentNode;if(t&&"A"===t.nodeName&&!t.hasAttribute("download")&&"external"!==t.getAttribute("rel")){var i=t.getAttribute("href");if((y||t.pathname!==v.pathname||!t.hash&&"#"!==i)&&!(i&&i.indexOf("mailto:")>-1)&&!t.target&&p(t.href)){var o=t.pathname+t.search+(t.hash||"");"undefined"!=typeof n&&o.match(/^\/[a-zA-Z]:\//)&&(o=o.replace(/^\/[a-zA-Z]:\//,"/"));var a=o;0===o.indexOf(g)&&(o=o.substr(g.length)),y&&(o=o.replace("#!","")),g&&a===o||(e.preventDefault(),r.show(a))}}}}function c(e){return e=e||window.event,null===e.which?e.button:e.which}function p(e){var t=v.protocol+"//"+v.hostname;return v.port&&(t+=":"+v.port),e&&0===e.indexOf(t)}var f=e("path-to-regexp");t.exports=r;var h,d,l="undefined"!=typeof document&&document.ontouchstart?"touchstart":"click",v="undefined"!=typeof window&&(window.history.location||window.location),w=!0,m=!0,g="",y=!1;r.callbacks=[],r.exits=[],r.current="",r.len=0,r.base=function(e){return 0===arguments.length?g:void(g=e)},r.start=function(e){if(e=e||{},!h&&(h=!0,!1===e.dispatch&&(w=!1),!1===e.decodeURLComponents&&(m=!1),!1!==e.popstate&&window.addEventListener("popstate",x,!1),!1!==e.click&&document.addEventListener(l,u,!1),!0===e.hashbang&&(y=!0),w)){var t=y&&~v.hash.indexOf("#!")?v.hash.substr(2)+v.search:v.pathname+v.search+v.hash;r.replace(t,null,!0,w)}},r.stop=function(){h&&(r.current="",r.len=0,h=!1,document.removeEventListener(l,u,!1),window.removeEventListener("popstate",x,!1))},r.show=function(e,t,n,i){var o=new a(e,t);return r.current=o.path,!1!==n&&r.dispatch(o),!1!==o.handled&&!1!==i&&o.pushState(),o},r.back=function(e,t){r.len>0?(history.back(),r.len--):e?setTimeout(function(){r.show(e,t)}):setTimeout(function(){r.show(g,t)})},r.redirect=function(e,t){"string"==typeof e&&"string"==typeof t&&r(e,function(e){setTimeout(function(){r.replace(t)},0)}),"string"==typeof e&&"undefined"==typeof t&&setTimeout(function(){r.replace(e)},0)},r.replace=function(e,t,n,i){var o=new a(e,t);return r.current=o.path,o.init=n,o.save(),!1!==i&&r.dispatch(o),o},r.dispatch=function(e){function t(){var e=r.exits[s++];return e?void e(o,t):n()}function n(){var t=r.callbacks[a++];return e.path!==r.current?void(e.handled=!1):t?void t(e,n):i(e)}var o=d,a=0,s=0;d=e,o?t():n()},r.exit=function(e,t){if("function"==typeof e)return r.exit("*",e);for(var n=new s(e),i=1;i<arguments.length;++i)r.exits.push(n.middleware(arguments[i]))},r.Context=a,a.prototype.pushState=function(){r.len++,history.pushState(this.state,this.title,y&&"/"!==this.path?"#!"+this.path:this.canonicalPath)},a.prototype.save=function(){history.replaceState(this.state,this.title,y&&"/"!==this.path?"#!"+this.path:this.canonicalPath)},r.Route=s,s.prototype.middleware=function(e){var t=this;return function(n,r){return t.match(n.path,n.params)?e(n,r):void r()}},s.prototype.match=function(e,t){var n=this.keys,r=e.indexOf("?"),i=~r?e.slice(0,r):e,a=this.regexp.exec(decodeURIComponent(i));if(!a)return!1;for(var s=1,u=a.length;s<u;++s){var c=n[s-1],p=o(a[s]);void 0===p&&hasOwnProperty.call(t,c.name)||(t[c.name]=p)}return!0};var x=function(){var e=!1;if("undefined"!=typeof window)return"complete"===document.readyState?e=!0:window.addEventListener("load",function(){setTimeout(function(){e=!0},0)}),function(t){if(e)if(t.state){var n=t.state.path;r.replace(n,t.state)}else r.show(v.pathname+v.hash,void 0,void 0,!1)}}();r.sameOrigin=p}).call(this,e("_process"))},{_process:2,"path-to-regexp":3}],2:[function(e,t,n){function r(){}var i=t.exports={};i.nextTick=function(){var e="undefined"!=typeof window&&window.setImmediate,t="undefined"!=typeof window&&window.MutationObserver,n="undefined"!=typeof window&&window.postMessage&&window.addEventListener;if(e)return function(e){return window.setImmediate(e)};var r=[];if(t){var i=document.createElement("div"),o=new MutationObserver(function(){var e=r.slice();r.length=0,e.forEach(function(e){e()})});return o.observe(i,{attributes:!0}),function(e){r.length||i.setAttribute("yes","no"),r.push(e)}}return n?(window.addEventListener("message",function(e){var t=e.source;if((t===window||null===t)&&"process-tick"===e.data&&(e.stopPropagation(),r.length>0)){var n=r.shift();n()}},!0),function(e){r.push(e),window.postMessage("process-tick","*")}):function(e){setTimeout(e,0)}}(),i.title="browser",i.browser=!0,i.env={},i.argv=[],i.on=r,i.addListener=r,i.once=r,i.off=r,i.removeListener=r,i.removeAllListeners=r,i.emit=r,i.binding=function(e){throw new Error("process.binding is not supported")},i.cwd=function(){return"/"},i.chdir=function(e){throw new Error("process.chdir is not supported")}},{}],3:[function(e,t,n){function r(e){for(var t,n=[],r=0,i=0,o="";null!=(t=w.exec(e));){var a=t[0],u=t[1],c=t.index;if(o+=e.slice(i,c),i=c+a.length,u)o+=u[1];else{o&&(n.push(o),o="");var p=t[2],f=t[3],h=t[4],d=t[5],l=t[6],v=t[7],m="+"===l||"*"===l,g="?"===l||"*"===l,y=p||"/",x=h||d||(v?".*":"[^"+y+"]+?");n.push({name:f||r++,prefix:p||"",delimiter:y,optional:g,repeat:m,pattern:s(x)})}}return i<e.length&&(o+=e.substr(i)),o&&n.push(o),n}function i(e){return o(r(e))}function o(e){for(var t=new Array(e.length),n=0;n<e.length;n++)"object"==typeof e[n]&&(t[n]=new RegExp("^"+e[n].pattern+"$"));return function(n){for(var r="",i=n||{},o=0;o<e.length;o++){var a=e[o];if("string"!=typeof a){var s,u=i[a.name];if(null==u){if(a.optional)continue;throw new TypeError('Expected "'+a.name+'" to be defined')}if(v(u)){if(!a.repeat)throw new TypeError('Expected "'+a.name+'" to not repeat, but received "'+u+'"');if(0===u.length){if(a.optional)continue;throw new TypeError('Expected "'+a.name+'" to not be empty')}for(var c=0;c<u.length;c++){if(s=encodeURIComponent(u[c]),!t[o].test(s))throw new TypeError('Expected all "'+a.name+'" to match "'+a.pattern+'", but received "'+s+'"');r+=(0===c?a.prefix:a.delimiter)+s}}else{if(s=encodeURIComponent(u),!t[o].test(s))throw new TypeError('Expected "'+a.name+'" to match "'+a.pattern+'", but received "'+s+'"');r+=a.prefix+s}}else r+=a}return r}}function a(e){return e.replace(/([.+*?=^!:${}()[\]|\/])/g,"\\$1")}function s(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function u(e,t){return e.keys=t,e}function c(e){return e.sensitive?"":"i"}function p(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,pattern:null});return u(e,t)}function f(e,t,n){for(var r=[],i=0;i<e.length;i++)r.push(l(e[i],t,n).source);var o=new RegExp("(?:"+r.join("|")+")",c(n));return u(o,t)}function h(e,t,n){for(var i=r(e),o=d(i,n),a=0;a<i.length;a++)"string"!=typeof i[a]&&t.push(i[a]);return u(o,t)}function d(e,t){t=t||{};for(var n=t.strict,r=t.end!==!1,i="",o=e[e.length-1],s="string"==typeof o&&/\/$/.test(o),u=0;u<e.length;u++){var p=e[u];if("string"==typeof p)i+=a(p);else{var f=a(p.prefix),h=p.pattern;p.repeat&&(h+="(?:"+f+h+")*"),h=p.optional?f?"(?:"+f+"("+h+"))?":"("+h+")?":f+"("+h+")",i+=h}}return n||(i=(s?i.slice(0,-2):i)+"(?:\\/(?=$))?"),i+=r?"$":n&&s?"":"(?=\\/|$)",new RegExp("^"+i,c(t))}function l(e,t,n){return t=t||[],v(t)?n||(n={}):(n=t,t=[]),e instanceof RegExp?p(e,t,n):v(e)?f(e,t,n):h(e,t,n)}var v=e("isarray");t.exports=l,t.exports.parse=r,t.exports.compile=i,t.exports.tokensToFunction=o,t.exports.tokensToRegExp=d;var w=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^()])+)\\))?|\\(((?:\\\\.|[^()])+)\\))([+*?])?|(\\*))"].join("|"),"g")},{isarray:4}],4:[function(e,t,n){t.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},{}]},{},[1])(1)});
(function(){"use strict";function e(){}function t(e,t){for(var n=e.length;n--;)if(e[n].listener===t)return n;return-1}function n(e){return function(){return this[e].apply(this,arguments)}}var r=e.prototype,i=this,s=i.EventEmitter;r.getListeners=function(e){var t,n,r=this._getEvents();if(e instanceof RegExp){t={};for(n in r)r.hasOwnProperty(n)&&e.test(n)&&(t[n]=r[n])}else t=r[e]||(r[e]=[]);return t},r.flattenListeners=function(e){var t,n=[];for(t=0;t<e.length;t+=1)n.push(e[t].listener);return n},r.getListenersAsObject=function(e){var t,n=this.getListeners(e);return n instanceof Array&&(t={},t[e]=n),t||n},r.addListener=function(e,n){var r,i=this.getListenersAsObject(e),s="object"==typeof n;for(r in i)i.hasOwnProperty(r)&&t(i[r],n)===-1&&i[r].push(s?n:{listener:n,once:!1});return this},r.on=n("addListener"),r.addOnceListener=function(e,t){return this.addListener(e,{listener:t,once:!0})},r.once=n("addOnceListener"),r.defineEvent=function(e){return this.getListeners(e),this},r.defineEvents=function(e){for(var t=0;t<e.length;t+=1)this.defineEvent(e[t]);return this},r.removeListener=function(e,n){var r,i,s=this.getListenersAsObject(e);for(i in s)s.hasOwnProperty(i)&&(r=t(s[i],n),r!==-1&&s[i].splice(r,1));return this},r.off=n("removeListener"),r.addListeners=function(e,t){return this.manipulateListeners(!1,e,t)},r.removeListeners=function(e,t){return this.manipulateListeners(!0,e,t)},r.manipulateListeners=function(e,t,n){var r,i,s=e?this.removeListener:this.addListener,o=e?this.removeListeners:this.addListeners;if("object"!=typeof t||t instanceof RegExp)for(r=n.length;r--;)s.call(this,t,n[r]);else for(r in t)t.hasOwnProperty(r)&&(i=t[r])&&("function"==typeof i?s.call(this,r,i):o.call(this,r,i));return this},r.removeEvent=function(e){var t,n=typeof e,r=this._getEvents();if("string"===n)delete r[e];else if(e instanceof RegExp)for(t in r)r.hasOwnProperty(t)&&e.test(t)&&delete r[t];else delete this._events;return this},r.removeAllListeners=n("removeEvent"),r.emitEvent=function(e,t){var n,r,i,s,o,u=this.getListenersAsObject(e);for(s in u)if(u.hasOwnProperty(s))for(n=u[s].slice(0),i=0;i<n.length;i++)r=n[i],r.once===!0&&this.removeListener(e,r.listener),o=r.listener.apply(this,t||[]),o===this._getOnceReturnValue()&&this.removeListener(e,r.listener);return this},r.trigger=n("emitEvent"),r.emit=function(e){var t=Array.prototype.slice.call(arguments,1);return this.emitEvent(e,t)},r.setOnceReturnValue=function(e){return this._onceReturnValue=e,this},r._getOnceReturnValue=function(){return!this.hasOwnProperty("_onceReturnValue")||this._onceReturnValue},r._getEvents=function(){return this._events||(this._events={})},e.noConflict=function(){return i.EventEmitter=s,e},"function"==typeof define&&define.amd?define(function(){return e}):"object"==typeof module&&module.exports?module.exports=e:i.EventEmitter=e}).call(this);
/* docma (dust) compiled templates */
(function(dust){dust.register("docma-404",body_0);function body_0(chk,ctx){return chk.p("navbar",ctx,ctx,{"boxed":"true"}).w("<div id=\"page-content-wrapper\"><div class=\"container container-boxed\"><div class=\"row\"><div class=\"col-md-12\"><br /><br /><h1>404</h1><hr /><h3>Page Not Found</h3><br />The file or page you have requested is not found. &nbsp;&nbsp;<br />Please make sure page address is entered correctly.</div></div><br /><br /><br /></div></div>");}body_0.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("docma-api",body_0);function body_0(chk,ctx){return chk.p("navbar",ctx,ctx,{}).x(ctx.getPath(false, ["template","options","sidebar"]),ctx,{"block":body_1},{}).w("<div id=\"wrapper\">").x(ctx.getPath(false, ["template","options","sidebar"]),ctx,{"block":body_2},{}).w("<div id=\"page-content-wrapper\"><div class=\"container-fluid\"><div class=\"row\"><div class=\"col-lg-12\">").s(ctx.get(["documentation"], false),ctx,{"block":body_3},{}).w("</div></div><br /><span class=\"docma-info\">Documentation built with <b><a target=\"_blank\" href=\"https://github.com/onury/docma\">Docma</a></b>.</span></div></div></div>");}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<div class=\"sidebar-toggle\"><span class=\"glyphicon glyphicon-menu-hamburger\"></span></div>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<div id=\"sidebar-wrapper\">").p("sidebar",ctx,ctx,{}).w("</div>");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.p("symbol",ctx,ctx,{});}body_3.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("docma-content",body_0);function body_0(chk,ctx){return chk.p("navbar",ctx,ctx,{"boxed":"true"}).w("<div id=\"page-content-wrapper\"><div class=\"container container-boxed\"><div class=\"row\"><div class=\"col-md-12\"><div id=\"docma-content\"></div></div></div><br /><hr /><span class=\"docma-info\">Documentation built with <b><a target=\"_blank\" href=\"https://github.com/onury/docma\">Docma</a></b>.</span></div></div>");}body_0.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("enums",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["$members"], false),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<table class=\"table table-striped table-bordered\"><thead><tr><th>Enumeration</th><th>Type</th><th>Value</th><th>Description</th></tr></thead><tbody>").s(ctx.get(["$members"], false),ctx,{"block":body_2},{}).w("</tbody></table>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<tr><td><code>").f(ctx.getPath(true, []),ctx,"h",["$longname","s","$dot_prop"]).w("</code></td><td><code>").f(ctx.getPath(true, []),ctx,"h",["$type"]).w("</code></td><td><code>").f(ctx.getPath(true, []),ctx,"h",["$val"]).w("</code></td><td>").f(ctx.getPath(true, []),ctx,"h",["s","$desc"]).w("</td></tr>");}body_2.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("navbar",body_0);function body_0(chk,ctx){return chk.x(ctx.getPath(false, ["template","options","navbar"]),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<nav class=\"navbar navbar-default navbar-fixed-top\"><div class=\"").x(ctx.get(["boxed"], false),ctx,{"else":body_2,"block":body_3},{}).w("\"><div class=\"nav navbar-left nav-left\"><div class=\"navbar-brand\"><b>").f(ctx.getPath(false, ["template","options","title"]),ctx,"h").w("</b></div></div>").h("gt",ctx,{"block":body_4},{"key":ctx.getPath(false, ["template","options","navItems","length"]),"value":0},"h").w("</div></nav>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("container-fluid");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("container container-boxed");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<ul class=\"nav navbar-nav\">").s(ctx.getPath(false, ["template","options","navItems"]),ctx,{"block":body_5},{}).w("</ul>");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.x(ctx.get(["items"], false),ctx,{"else":body_6,"block":body_7},{});}body_5.__dustBody=!0;function body_6(chk,ctx){return chk.p("navitem",ctx,ctx.rebase(ctx.getPath(true, [])),{});}body_6.__dustBody=!0;function body_7(chk,ctx){return chk.w("<li class=\"dropdown\"><a href=\"").x(ctx.get(["href"], false),ctx,{"else":body_8,"block":body_9},{}).w("\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\"><i class=\"ico ").f(ctx.get(["iconClass"], false),ctx,"h").w("\" aria-hidden=\"true\"></i>&nbsp;&nbsp;").f(ctx.get(["label"], false),ctx,"h").w("&nbsp;<span class=\"caret\"></span></a><ul class=\"dropdown-menu\">").s(ctx.get(["items"], false),ctx,{"block":body_10},{}).w("</ul></li>");}body_7.__dustBody=!0;function body_8(chk,ctx){return chk.w("#");}body_8.__dustBody=!0;function body_9(chk,ctx){return chk.f(ctx.get(["href"], false),ctx,"h");}body_9.__dustBody=!0;function body_10(chk,ctx){return chk.p("navitem",ctx,ctx.rebase(ctx.getPath(true, [])),{});}body_10.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("navitem",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["separator"], false),ctx,{"else":body_1,"block":body_5},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<li><a href=\"").x(ctx.get(["href"], false),ctx,{"else":body_2,"block":body_3},{}).w("\" target=\"").f(ctx.get(["target"], false),ctx,"h").w("\">").x(ctx.get(["iconClass"], false),ctx,{"block":body_4},{}).f(ctx.get(["label"], false),ctx,"h",["s"]).w("</a></li>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("#");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.f(ctx.get(["href"], false),ctx,"h");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<i class=\"ico ").f(ctx.get(["iconClass"], false),ctx,"h").w("\" aria-hidden=\"true\"></i>&nbsp;&nbsp;");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<li role=\"separator\" class=\"divider\"></li>");}body_5.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("params",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["params"], false),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<table class=\"table table-striped table-bordered\"><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody>").s(ctx.get(["params"], false),ctx,{"block":body_2},{}).w("</tbody></table>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<tr><td><code>").f(ctx.get(["name"], false),ctx,"h",["s","$dot_prop"]).w("</code></td><td><code>").f(ctx.getPath(true, []),ctx,"h",["$type"]).w("</code></td><td>").x(ctx.get(["optional"], false),ctx,{"block":body_3},{}).w("</td><td>").f(ctx.getPath(true, []),ctx,"h",["s","$param_desc"]).w("</td></tr>");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("<code>").f(ctx.getPath(true, []),ctx,"h",["$def"]).w("</code>");}body_3.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("properties",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["properties"], false),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<table class=\"table table-striped table-bordered\"><thead><tr><th>Property</th><th>Type</th><th>Description</th></tr></thead><tbody>").s(ctx.get(["properties"], false),ctx,{"block":body_2},{}).w("</tbody></table>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<tr><td><code>").f(ctx.get(["name"], false),ctx,"h",["s","$dot_prop"]).w("</code></td><td><code>").f(ctx.getPath(true, []),ctx,"h",["$type"]).w("</code></td><td>").f(ctx.get(["description"], false),ctx,"h",["s","$p"]).w("</td></tr>");}body_2.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("sidebar",body_0);function body_0(chk,ctx){return chk.w("<div class=\"sidebar-header\"><div class=\"sidebar-title\"><span><b>").f(ctx.getPath(false, ["template","options","title"]),ctx,"h").w("</b></span></div>").x(ctx.getPath(false, ["template","options","search"]),ctx,{"block":body_1},{}).w("</div><div class=\"sidebar-nav-container\"><ul class=\"sidebar-nav\">").s(ctx.get(["symbols"], false),ctx,{"block":body_2},{}).w("</ul></div>");}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<div class=\"sidebar-search\"><input id=\"txt-search\" type=\"search\" class=\"form-control\" placeholder=\"Search...\" /><div class=\"sidebar-search-clean\"><span class=\"glyphicon glyphicon-remove-circle\"></span></div></div>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<li>").f(ctx.getPath(true, []),ctx,"h",["s","$menuitem"]).w("</li>");}body_2.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("symbol",body_0);function body_0(chk,ctx){return chk.w("<div id=\"").f(ctx.getPath(true, []),ctx,"h",["$id"]).w("\" class=\"symbol-container\"><div class=\"symbol-heading\"><div class=\"symbol\"><a href=\"#").f(ctx.getPath(true, []),ctx,"h",["$id"]).w("\"><span class=\"glyphicon glyphicon-link color-gray-light\" aria-hidden=\"true\"></span><code class=\"symbol-name\">").f(ctx.getPath(true, []),ctx,"h",["s","$longname_params"]).w("</code><span class=\"symbol-sep\">").f(ctx.getPath(true, []),ctx,"h",["$type_sep"]).w("</span><code class=\"symbol-type\">").f(ctx.getPath(true, []),ctx,"h",["$type"]).w("</code></a>").f(ctx.getPath(true, []),ctx,"h",["s","$tags"]).w("</div>").x(ctx.get(["augments"], false),ctx,{"block":body_1},{}).x(ctx.get(["alias"], false),ctx,{"block":body_2},{}).w("</div><div class=\"symbol-definition\">").f(ctx.getPath(true, []),ctx,"h",["s","$desc"]).x(ctx.get(["classdesc"], false),ctx,{"block":body_3},{}).x(ctx.get(["see"], false),ctx,{"block":body_8},{}).h("eq",ctx,{"else":body_13,"block":body_16},{"key":ctx.getPath(false, ["meta","code","type"]),"value":"ClassDeclaration"},"h").x(ctx.get(["returns"], false),ctx,{"block":body_17},{}).x(ctx.get(["exceptions"], false),ctx,{"block":body_20},{}).x(ctx.get(["isEnum"], false),ctx,{"block":body_23},{}).x(ctx.get(["examples"], false),ctx,{"block":body_24},{}).w("</div></div><hr />").h("eq",ctx,{"block":body_26},{"key":ctx.getPath(false, ["meta","code","type"]),"value":"ClassDeclaration"},"h").x(ctx.get(["isEnum"], false),ctx,{"else":body_28,"block":body_30},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<p class=\"space-left-sm\"><b>Extends:</b> ").f(ctx.getPath(true, []),ctx,"h",["s","$extends"]).w("</p>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<p class=\"space-left-sm\"><b>Alias:</b> <code>").f(ctx.get(["alias"], false),ctx,"h",["s","$dot_prop"]).w("</code></p>");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("<table>").x(ctx.get(["version"], false),ctx,{"block":body_4},{}).x(ctx.get(["copyright"], false),ctx,{"block":body_5},{}).x(ctx.get(["author"], false),ctx,{"block":body_6},{}).x(ctx.get(["license"], false),ctx,{"block":body_7},{}).w("</table>");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<tr><td><b>Version:</b>&nbsp;&nbsp;&nbsp;</td><td>").f(ctx.get(["version"], false),ctx,"h",["s"]).w("</td></tr>");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<tr><td><b>Copyright:</b>&nbsp;&nbsp;&nbsp;</td><td>").f(ctx.get(["copyright"], false),ctx,"h",["s"]).w("</td></tr>");}body_5.__dustBody=!0;function body_6(chk,ctx){return chk.w("<tr><td><b>Author:</b>&nbsp;&nbsp;&nbsp;</td><td>").f(ctx.get(["author"], false),ctx,"h",["s","$author"]).w("</td></tr>");}body_6.__dustBody=!0;function body_7(chk,ctx){return chk.w("<tr><td><b>License:</b>&nbsp;&nbsp;&nbsp;</td><td>").f(ctx.get(["license"], false),ctx,"h",["s"]).w("</td></tr>");}body_7.__dustBody=!0;function body_8(chk,ctx){return chk.w("<p><b>See</b>").h("gt",ctx,{"else":body_9,"block":body_11},{"key":ctx.getPath(false, ["see","length"]),"value":1},"h").w("</p><br />");}body_8.__dustBody=!0;function body_9(chk,ctx){return chk.s(ctx.get(["see"], false),ctx,{"block":body_10},{});}body_9.__dustBody=!0;function body_10(chk,ctx){return chk.w("&nbsp;").f(ctx.getPath(true, []),ctx,"h",["s","$pl"]);}body_10.__dustBody=!0;function body_11(chk,ctx){return chk.w("<ul>").s(ctx.get(["see"], false),ctx,{"block":body_12},{}).w("</ul>");}body_11.__dustBody=!0;function body_12(chk,ctx){return chk.w("<li>").f(ctx.getPath(true, []),ctx,"h",["s","$pl"]).w("</li>");}body_12.__dustBody=!0;function body_13(chk,ctx){return chk.p("params",ctx,ctx.rebase(ctx.getPath(true, [])),{}).x(ctx.get(["isEnum"], false),ctx,{"else":body_14,"block":body_15},{});}body_13.__dustBody=!0;function body_14(chk,ctx){return chk.p("properties",ctx,ctx.rebase(ctx.getPath(true, [])),{});}body_14.__dustBody=!0;function body_15(chk,ctx){return chk;}body_15.__dustBody=!0;function body_16(chk,ctx){return chk;}body_16.__dustBody=!0;function body_17(chk,ctx){return chk.h("gt",ctx,{"else":body_18,"block":body_19},{"key":ctx.getPath(false, ["returns","length"]),"value":"1","type":"number"},"h");}body_17.__dustBody=!0;function body_18(chk,ctx){return chk.w("<p><b>Returns:</b>&nbsp;&nbsp;").f(ctx.getPath(true, []),ctx,"h",["s","$returns"]).w("</p>");}body_18.__dustBody=!0;function body_19(chk,ctx){return chk.w("<b>Returns:</b><p class=\"pad-left\">").f(ctx.getPath(true, []),ctx,"h",["s","$returns"]).w("</p>");}body_19.__dustBody=!0;function body_20(chk,ctx){return chk.h("gt",ctx,{"else":body_21,"block":body_22},{"key":ctx.getPath(false, ["exceptions","length"]),"value":"1","type":"number"},"h");}body_20.__dustBody=!0;function body_21(chk,ctx){return chk.w("<p><b>Throws:</b>&nbsp;&nbsp;").f(ctx.getPath(true, []),ctx,"h",["s","$exceptions"]).w("</p>");}body_21.__dustBody=!0;function body_22(chk,ctx){return chk.w("<b>Throws:</b><p class=\"pad-left\">").f(ctx.getPath(true, []),ctx,"h",["s","$exceptions"]).w("</p>");}body_22.__dustBody=!0;function body_23(chk,ctx){return chk.p("enums",ctx,ctx.rebase(ctx.getPath(true, [])),{});}body_23.__dustBody=!0;function body_24(chk,ctx){return chk.w("<p><b>Example</b></p>").s(ctx.get(["examples"], false),ctx,{"block":body_25},{});}body_24.__dustBody=!0;function body_25(chk,ctx){return chk.w("<pre><code>").f(ctx.getPath(true, []),ctx,"h",["$nt"]).w("</code></pre>");}body_25.__dustBody=!0;function body_26(chk,ctx){return chk.x(ctx.get(["$constructor"], false),ctx,{"block":body_27},{});}body_26.__dustBody=!0;function body_27(chk,ctx){return chk.p("symbol",ctx,ctx.rebase(ctx.get(["$constructor"], false)),{});}body_27.__dustBody=!0;function body_28(chk,ctx){return chk.s(ctx.get(["$members"], false),ctx,{"block":body_29},{});}body_28.__dustBody=!0;function body_29(chk,ctx){return chk.p("symbol",ctx,ctx.rebase(ctx.getPath(true, [])),{});}body_29.__dustBody=!0;function body_30(chk,ctx){return chk;}body_30.__dustBody=!0;return body_0}(dust));
/*!
 * Docma (Web) Core
 * https://github.com/onury/docma
 * @license MIT
 */
var docma = {"routes":[{"id":"api:","type":"api","name":"_def_","path":"/?api","contentPath":null},{"id":"api:modules-common","type":"api","name":"modules-common","path":"/?api=modules-common","contentPath":null},{"id":"api:modules-wot","type":"api","name":"modules-wot","path":"/?api=modules-wot","contentPath":null},{"id":"api:modules-wotb","type":"api","name":"modules-wotb","path":"/?api=modules-wotb","contentPath":null},{"id":"api:modules-wotc","type":"api","name":"modules-wotc","path":"/?api=modules-wotc","contentPath":null},{"id":"api:modules-wowp","type":"api","name":"modules-wowp","path":"/?api=modules-wowp","contentPath":null},{"id":"api:modules-wows","type":"api","name":"modules-wows","path":"/?api=modules-wows","contentPath":null},{"id":"content:readme","type":"content","name":"readme","path":"/?content=readme","contentPath":"content/readme.html"},{"id":"content:introduction","type":"content","name":"introduction","path":"/?content=introduction","contentPath":"content/introduction.html"},{"id":"content:modules","type":"content","name":"modules","path":"/?content=modules","contentPath":"content/modules.html"}],"apis":{"_def_":{"documentation":[{"comment":"/**\n * @classdesc Error received from Wargaming's API.\n * @extends RequestError\n */","meta":{"range":[492,2069],"filename":"APIError.js","lineno":17,"path":"/home/kelvin/work/wargamer/src/errors","code":{"id":"astnode100001032","name":"APIError","type":"ClassDeclaration","paramnames":[""]}},"classdesc":"Error received from Wargaming's API.","augments":["RequestError"],"name":"APIError","longname":"APIError","kind":"class","scope":"global","description":"Constructor.","params":[{"type":{"names":["Object"]},"description":"The constructor options.","name":"options"},{"type":{"names":["BaseClient"]},"description":"The API client that the error originated\n  from.","name":"options.client"},{"type":{"names":["number"]},"description":"The HTTP status code of the request.","name":"options.statusCode"},{"type":{"names":["string"]},"description":"The URL that the request was for.","name":"options.url"},{"type":{"names":["string"]},"description":"The realm of the API that this error\n  originated from.","name":"options.requestRealm"},{"type":{"names":["string"]},"description":"The API method that the request was for.","name":"options.method"},{"type":{"names":["WargamingAPIError"]},"description":"The error object returned from\n  the API.","name":"options.error"}],"$longname":"APIError","$members":[{"comment":"/**\n     * The message corresponding to the error code.\n     * @type {string}\n     */","meta":{"range":[1805,1830],"filename":"APIError.js","lineno":61,"path":"/home/kelvin/work/wargamer/src/errors","code":{"id":"astnode100001097","name":"this.apiMessage","type":"Identifier","value":"message","paramnames":[]}},"description":"The message corresponding to the error code.","type":{"names":["string"]},"name":"apiMessage","longname":"APIError#apiMessage","kind":"member","memberof":"APIError","scope":"instance","$longname":"APIError#apiMessage"},{"comment":"/**\n     * The API client that the error originated from.\n     * @type {BaseClient}\n     */","meta":{"range":[680,700],"filename":"RequestError.js","lineno":23,"path":"/home/kelvin/work/wargamer/src/errors","code":{"id":"astnode100001141","name":"this.client","type":"Identifier","value":"client","paramnames":[]}},"description":"The API client that the error originated from.","type":{"names":["BaseClient"]},"name":"client","longname":"APIError#client","kind":"member","memberof":"APIError","scope":"instance","inherits":"RequestError#client","inherited":true,"$longname":"APIError#client"},{"comment":"/**\n     * The Wargaming API error code.\n     * @type {number}\n     */","meta":{"range":[1692,1708],"filename":"APIError.js","lineno":55,"path":"/home/kelvin/work/wargamer/src/errors","code":{"id":"astnode100001091","name":"this.code","type":"Identifier","value":"code","paramnames":[]}},"description":"The Wargaming API error code.","type":{"names":["number"]},"name":"code","longname":"APIError#code","kind":"member","memberof":"APIError","scope":"instance","$longname":"APIError#code"},{"comment":"/**\n     * The field which was flagged in the error.\n     * @type {string}\n     */","meta":{"range":[1924,1942],"filename":"APIError.js","lineno":67,"path":"/home/kelvin/work/wargamer/src/errors","code":{"id":"astnode100001103","name":"this.field","type":"Identifier","value":"field","paramnames":[]}},"description":"The field which was flagged in the error.","type":{"names":["string"]},"name":"field","longname":"APIError#field","kind":"member","memberof":"APIError","scope":"instance","$longname":"APIError#field"},{"comment":"/**\n     * The API method that the request was for.\n     * @type {string}\n     */","meta":{"range":[1590,1610],"filename":"APIError.js","lineno":49,"path":"/home/kelvin/work/wargamer/src/errors","code":{"id":"astnode100001085","name":"this.method","type":"Identifier","value":"method","paramnames":[]}},"description":"The API method that the request was for.","type":{"names":["string"]},"name":"method","longname":"APIError#method","kind":"member","memberof":"APIError","scope":"instance","$longname":"APIError#method"},{"comment":"/**\n     * The realm of the API that this response originated from.\n     * @type {string}\n     */","meta":{"range":[1465,1497],"filename":"APIError.js","lineno":43,"path":"/home/kelvin/work/wargamer/src/errors","code":{"id":"astnode100001079","name":"this.requestRealm","type":"Identifier","value":"requestRealm","paramnames":[]}},"description":"The realm of the API that this response originated from.","type":{"names":["string"]},"name":"requestRealm","longname":"APIError#requestRealm","kind":"member","memberof":"APIError","scope":"instance","$longname":"APIError#requestRealm"},{"comment":"/**\n     * The HTTP status code of the request.\n     * @type {number}\n     */","meta":{"range":[789,817],"filename":"RequestError.js","lineno":29,"path":"/home/kelvin/work/wargamer/src/errors","code":{"id":"astnode100001147","name":"this.statusCode","type":"Identifier","value":"statusCode","paramnames":[]}},"description":"The HTTP status code of the request.","type":{"names":["number"]},"name":"statusCode","longname":"APIError#statusCode","kind":"member","memberof":"APIError","scope":"instance","inherits":"RequestError#statusCode","inherited":true,"$longname":"APIError#statusCode"},{"comment":"/**\n     * The value of the field which was flagged in the error.\n     * @type {*}\n     */","meta":{"range":[2044,2062],"filename":"APIError.js","lineno":73,"path":"/home/kelvin/work/wargamer/src/errors","code":{"id":"astnode100001109","name":"this.value","type":"Identifier","value":"value","paramnames":[]}},"description":"The value of the field which was flagged in the error.","type":{"names":["*"]},"name":"value","longname":"APIError#value","kind":"member","memberof":"APIError","scope":"instance","$longname":"APIError#value"}],"$constructor":{"comment":"/**\n   * Constructor.\n   * @param {Object} options - The constructor options.\n   * @param {BaseClient} options.client - The API client that the error originated\n   *   from.\n   * @param {number} options.statusCode - The HTTP status code of the request.\n   * @param {string} options.url - The URL that the request was for.\n   * @param {string} options.requestRealm - The realm of the API that this error\n   *   originated from.\n   * @param {string} options.method - The API method that the request was for.\n   * @param {WargamingAPIError} options.error - The error object returned from\n   *   the API.\n   */","meta":{"range":[1141,2067],"filename":"APIError.js","lineno":31,"path":"/home/kelvin/work/wargamer/src/errors","code":{"id":"astnode100001036","name":"APIError","type":"MethodDefinition","paramnames":[""]},"vars":{"":null}},"description":"Constructor.","params":[{"type":{"names":["Object"]},"description":"The constructor options.","name":"options"},{"type":{"names":["BaseClient"]},"description":"The API client that the error originated\n  from.","name":"options.client"},{"type":{"names":["number"]},"description":"The HTTP status code of the request.","name":"options.statusCode"},{"type":{"names":["string"]},"description":"The URL that the request was for.","name":"options.url"},{"type":{"names":["string"]},"description":"The realm of the API that this error\n  originated from.","name":"options.requestRealm"},{"type":{"names":["string"]},"description":"The API method that the request was for.","name":"options.method"},{"type":{"names":["WargamingAPIError"]},"description":"The error object returned from\n  the API.","name":"options.error"}],"name":"APIError","longname":"APIError","kind":"class","scope":"global","undocumented":true,"$longname":"APIError"}},{"comment":"/**\n * @classdesc Wraps a response from the Wargaming API.\n */","meta":{"range":[63,1365],"filename":"APIResponse.js","lineno":4,"path":"/home/kelvin/work/wargamer/src/responses","code":{"id":"astnode100001155","name":"APIResponse","type":"ClassDeclaration","paramnames":[""]}},"classdesc":"Wraps a response from the Wargaming API.","name":"APIResponse","longname":"APIResponse","kind":"class","scope":"global","description":"Constructor.","params":[{"type":{"names":["Object"]},"description":"The response data.","name":"data"},{"type":{"names":["BaseClient"]},"description":"The API client that the response originated\n  from.","name":"data.client"},{"type":{"names":["string"]},"description":"The realm of the API that this response\n  originated from.","name":"data.requestRealm"},{"type":{"names":["string"]},"description":"The name of the method that was used to get\n  this response data.","name":"data.method"},{"type":{"names":["Object"]},"description":"The parsed JSON data from the API.","name":"data.body"}],"$longname":"APIResponse","$members":[{"comment":"/**\n     * The response's parsed JSON data.\n     * @type {Object}\n     */","meta":{"range":[1064,1080],"filename":"APIResponse.js","lineno":39,"path":"/home/kelvin/work/wargamer/src/responses","code":{"id":"astnode100001190","name":"this.body","type":"Identifier","value":"body","paramnames":[]}},"description":"The response's parsed JSON data.","type":{"names":["Object"]},"name":"body","longname":"APIResponse#body","kind":"member","memberof":"APIResponse","scope":"instance","$longname":"APIResponse#body"},{"comment":"/**\n     * The API client that the response originated from.\n     * @type {BaseClient}\n     */","meta":{"range":[694,714],"filename":"APIResponse.js","lineno":21,"path":"/home/kelvin/work/wargamer/src/responses","code":{"id":"astnode100001172","name":"this.client","type":"Identifier","value":"client","paramnames":[]}},"description":"The API client that the response originated from.","type":{"names":["BaseClient"]},"name":"client","longname":"APIResponse#client","kind":"member","memberof":"APIResponse","scope":"instance","$longname":"APIResponse#client"},{"comment":"/**\n   * The value of the data object returned in the response.\n   * @type {Object}\n   */","meta":{"range":[1320,1363],"filename":"APIResponse.js","lineno":54,"path":"/home/kelvin/work/wargamer/src/responses","code":{"id":"astnode100001205","name":"APIResponse#data","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"The value of the data object returned in the response.","type":{"names":["Object"]},"name":"data","longname":"APIResponse#data","kind":"member","memberof":"APIResponse","scope":"instance","params":[],"$longname":"APIResponse#data"},{"comment":"/**\n   * The value of the meta object returned in the response.\n   * @type {Object}\n   */","meta":{"range":[1181,1224],"filename":"APIResponse.js","lineno":46,"path":"/home/kelvin/work/wargamer/src/responses","code":{"id":"astnode100001195","name":"APIResponse#meta","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"The value of the meta object returned in the response.","type":{"names":["Object"]},"name":"meta","longname":"APIResponse#meta","kind":"member","memberof":"APIResponse","scope":"instance","params":[],"$longname":"APIResponse#meta"},{"comment":"/**\n     * The name of the API method that gave this response.\n     * @type {string}\n     */","meta":{"range":[959,979],"filename":"APIResponse.js","lineno":33,"path":"/home/kelvin/work/wargamer/src/responses","code":{"id":"astnode100001184","name":"this.method","type":"Identifier","value":"method","paramnames":[]}},"description":"The name of the API method that gave this response.","type":{"names":["string"]},"name":"method","longname":"APIResponse#method","kind":"member","memberof":"APIResponse","scope":"instance","$longname":"APIResponse#method"},{"comment":"/**\n     * The realm of the API that this response originated from.\n     * @type {string}\n     */","meta":{"range":[823,855],"filename":"APIResponse.js","lineno":27,"path":"/home/kelvin/work/wargamer/src/responses","code":{"id":"astnode100001178","name":"this.requestRealm","type":"Identifier","value":"requestRealm","paramnames":[]}},"description":"The realm of the API that this response originated from.","type":{"names":["string"]},"name":"requestRealm","longname":"APIResponse#requestRealm","kind":"member","memberof":"APIResponse","scope":"instance","$longname":"APIResponse#requestRealm"}],"$constructor":{"comment":"/**\n   * Constructor.\n   * @param {Object} data - The response data.\n   * @param {BaseClient} data.client - The API client that the response originated\n   *   from.\n   * @param {string} data.requestRealm - The realm of the API that this response\n   *   originated from.\n   * @param {string} data.method - The name of the method that was used to get\n   *   this response data.\n   * @param {Object} data.body - The parsed JSON data from the API.\n   */","meta":{"range":[537,1085],"filename":"APIResponse.js","lineno":16,"path":"/home/kelvin/work/wargamer/src/responses","code":{"id":"astnode100001158","name":"APIResponse","type":"MethodDefinition","paramnames":[""]},"vars":{"":null}},"description":"Constructor.","params":[{"type":{"names":["Object"]},"description":"The response data.","name":"data"},{"type":{"names":["BaseClient"]},"description":"The API client that the response originated\n  from.","name":"data.client"},{"type":{"names":["string"]},"description":"The realm of the API that this response\n  originated from.","name":"data.requestRealm"},{"type":{"names":["string"]},"description":"The name of the method that was used to get\n  this response data.","name":"data.method"},{"type":{"names":["Object"]},"description":"The parsed JSON data from the API.","name":"data.body"}],"name":"APIResponse","longname":"APIResponse","kind":"class","scope":"global","undocumented":true,"$longname":"APIResponse"}},{"comment":"/**\n * @classdesc The base API client.\n */","meta":{"range":[2808,11058],"filename":"BaseClient.js","lineno":85,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000141","name":"BaseClient","type":"ClassDeclaration","paramnames":["options"]}},"classdesc":"The base API client.","name":"BaseClient","longname":"BaseClient","kind":"class","scope":"global","description":"Constructor.","params":[{"type":{"names":["Object"]},"description":"The client options.","name":"options"},{"type":{"names":["string"]},"description":"The type of API this client is for.","name":"options.type"},{"type":{"names":["string"]},"description":"The realm/region this client is for.","name":"options.realm"},{"type":{"names":["string"]},"description":"The application ID of this client.","name":"options.applicationId"},{"type":{"names":["string"]},"optional":true,"defaultvalue":null,"description":"The access token for this\n  client, if it will be using one.","name":"options.accessToken"},{"type":{"names":["string"]},"optional":true,"defaultvalue":null,"description":"The default localization language\n  to use for API responses.","name":"options.language"},{"type":{"names":["number"]},"optional":true,"nullable":true,"defaultvalue":600,"description":"The time to live in seconds\n  for the client's data cache entries. `null` if no there is no TTL.","name":"options.cacheTimeToLive"},{"type":{"names":["number"]},"optional":true,"nullable":true,"defaultvalue":250,"description":"The max number of entries in\n  the client's data cache.","name":"options.cacheMaxSize"}],"$longname":"BaseClient","$members":[{"comment":"/**\n     * The access token for this client.\n     * @type {?string}\n     */","meta":{"range":[5086,5116],"filename":"BaseClient.js","lineno":161,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000253","name":"this.accessToken","type":"Identifier","value":"accessToken","paramnames":[]}},"description":"The access token for this client.","type":{"names":["string"]},"nullable":true,"name":"accessToken","longname":"BaseClient#accessToken","kind":"member","memberof":"BaseClient","scope":"instance","$longname":"BaseClient#accessToken"},{"comment":"/**\n     * The application ID for this client.\n     * @type {string}\n     */","meta":{"range":[4965,4999],"filename":"BaseClient.js","lineno":155,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000247","name":"this.applicationId","type":"Identifier","value":"applicationId","paramnames":[]}},"description":"The application ID for this client.","type":{"names":["string"]},"name":"applicationId","longname":"BaseClient#applicationId","kind":"member","memberof":"BaseClient","scope":"instance","$longname":"BaseClient#applicationId"},{"comment":"/**\n     * The client's Authentication module.\n     * @type {Authentication}\n     */","meta":{"range":[5340,5386],"filename":"BaseClient.js","lineno":173,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000265","name":"this.authentication","type":"NewExpression","value":"","paramnames":[]}},"description":"The client's Authentication module.","type":{"names":["Authentication"]},"name":"authentication","longname":"BaseClient#authentication","kind":"member","memberof":"BaseClient","scope":"instance","$longname":"BaseClient#authentication"},{"comment":"/**\n   * Sends a GET request to the API.\n   * @param {string} method - The method to request.\n   * @param {Object} [params={}] - The parameters to include in the request.\n   * @param {RequestOptions} [options={}] - Options used to override client defaults.\n   * @returns {Promise.<APIResponse, Error>} Returns a promise resolving to the\n   *   returned API data, or rejecting with an error.\n   */","meta":{"range":[6596,6712],"filename":"BaseClient.js","lineno":219,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000325","name":"BaseClient#get","type":"MethodDefinition","paramnames":["method","params","options"]},"vars":{"":null}},"description":"Sends a GET request to the API.","params":[{"type":{"names":["string"]},"description":"The method to request.","name":"method"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","description":"The parameters to include in the request.","name":"params"},{"type":{"names":["RequestOptions"]},"optional":true,"defaultvalue":"{}","description":"Options used to override client defaults.","name":"options"}],"returns":[{"type":{"names":["Promise.<APIResponse, Error>"]},"description":"Returns a promise resolving to the\n  returned API data, or rejecting with an error."}],"name":"get","longname":"BaseClient#get","kind":"function","memberof":"BaseClient","scope":"instance","$longname":"BaseClient#get"},{"comment":"/**\n     * The default localization language for this client.\n     * @type {?string}\n     */","meta":{"range":[5220,5244],"filename":"BaseClient.js","lineno":167,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000259","name":"this.language","type":"Identifier","value":"language","paramnames":[]}},"description":"The default localization language for this client.","type":{"names":["string"]},"nullable":true,"name":"language","longname":"BaseClient#language","kind":"member","memberof":"BaseClient","scope":"instance","$longname":"BaseClient#language"},{"comment":"/**\n   * Sends a POST request to the API.\n   * @param {string} method - The method to request.\n   * @param {Object} [params={}] - The parameters to include in the request.\n   * @param {RequestOptions} [options={}] - Options used to override client defaults.\n   * @returns {Promise.<APIResponse, Error>} Returns a promise resolving to the\n   *   returned API data, or rejecting with an error.\n   */","meta":{"range":[7116,7234],"filename":"BaseClient.js","lineno":231,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000348","name":"BaseClient#post","type":"MethodDefinition","paramnames":["method","params","options"]},"vars":{"":null}},"description":"Sends a POST request to the API.","params":[{"type":{"names":["string"]},"description":"The method to request.","name":"method"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","description":"The parameters to include in the request.","name":"params"},{"type":{"names":["RequestOptions"]},"optional":true,"defaultvalue":"{}","description":"Options used to override client defaults.","name":"options"}],"returns":[{"type":{"names":["Promise.<APIResponse, Error>"]},"description":"Returns a promise resolving to the\n  returned API data, or rejecting with an error."}],"name":"post","longname":"BaseClient#post","kind":"function","memberof":"BaseClient","scope":"instance","$longname":"BaseClient#post"},{"comment":"/**\n     * The realm, i.e. region of this client.\n     * @type {string}\n     */","meta":{"range":[4849,4877],"filename":"BaseClient.js","lineno":149,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000241","name":"this.realm","type":"Identifier","value":"normalizedRealm","paramnames":[]}},"description":"The realm, i.e. region of this client.","type":{"names":["string"]},"name":"realm","longname":"BaseClient#realm","kind":"member","memberof":"BaseClient","scope":"instance","$longname":"BaseClient#realm"},{"comment":"/**\n     * The type of API this client is for.\n     * @type {string}\n     */","meta":{"range":[4742,4758],"filename":"BaseClient.js","lineno":143,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000235","name":"this.type","type":"Identifier","value":"type","paramnames":[]}},"description":"The type of API this client is for.","type":{"names":["string"]},"name":"type","longname":"BaseClient#type","kind":"member","memberof":"BaseClient","scope":"instance","$longname":"BaseClient#type"}],"$constructor":{"comment":"/**\n   * Constructor.\n   * @param {Object} options - The client options.\n   * @param {string} options.type - The type of API this client is for.\n   * @param {string} options.realm - The realm/region this client is for.\n   * @param {string} options.applicationId - The application ID of this client.\n   * @param {string} [options.accessToken=null] - The access token for this\n   *   client, if it will be using one.\n   * @param {string} [options.language=null] - The default localization language\n   *   to use for API responses.\n   * @param {?number} [options.cacheTimeToLive=600] - The time to live in seconds\n   *   for the client's data cache entries. `null` if no there is no TTL.\n   * @param {?number} [options.cacheMaxSize=250] - The max number of entries in\n   *   the client's data cache.\n   * @throws {TypeError} Thrown if options are not well-formed.\n   */","meta":{"range":[3698,5756],"filename":"BaseClient.js","lineno":102,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000144","name":"BaseClient","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"description":"Constructor.","params":[{"type":{"names":["Object"]},"description":"The client options.","name":"options"},{"type":{"names":["string"]},"description":"The type of API this client is for.","name":"options.type"},{"type":{"names":["string"]},"description":"The realm/region this client is for.","name":"options.realm"},{"type":{"names":["string"]},"description":"The application ID of this client.","name":"options.applicationId"},{"type":{"names":["string"]},"optional":true,"defaultvalue":null,"description":"The access token for this\n  client, if it will be using one.","name":"options.accessToken"},{"type":{"names":["string"]},"optional":true,"defaultvalue":null,"description":"The default localization language\n  to use for API responses.","name":"options.language"},{"type":{"names":["number"]},"optional":true,"nullable":true,"defaultvalue":600,"description":"The time to live in seconds\n  for the client's data cache entries. `null` if no there is no TTL.","name":"options.cacheTimeToLive"},{"type":{"names":["number"]},"optional":true,"nullable":true,"defaultvalue":250,"description":"The max number of entries in\n  the client's data cache.","name":"options.cacheMaxSize"}],"exceptions":[{"type":{"names":["TypeError"]},"description":"Thrown if options are not well-formed."}],"name":"BaseClient","longname":"BaseClient","kind":"class","scope":"global","undocumented":true,"$longname":"BaseClient"}},{"comment":"/**\n * The options available to use on a client constructor.\n * @typedef {Object} ClientOptions\n * @property {string} realm - The realm/region this client is for.\n * @property {string} applicationId - The application ID of this client.\n * @property {string} [accessToken=null] - The access token for this client,\n *   if it will be using one.\n * @param {string} [language=null] - The default localization language\n *   to use for API responses.\n * @param {?number} [options.cacheTimeToLive=600] - The time to live in seconds\n *   for the client's data cache entries. `null` if no there is no TTL.\n * @param {?number} [options.cacheMaxSize=250] - The max number of entries in\n *   the client's data cache.\n */","meta":{"range":[423,1131],"filename":"BaseClient.js","lineno":11,"path":"/home/kelvin/work/wargamer/src/clients","code":{}},"description":"The options available to use on a client constructor.","kind":"typedef","name":"ClientOptions","type":{"names":["Object"]},"properties":[{"type":{"names":["string"]},"description":"The realm/region this client is for.","name":"realm"},{"type":{"names":["string"]},"description":"The application ID of this client.","name":"applicationId"},{"type":{"names":["string"]},"optional":true,"defaultvalue":null,"description":"The access token for this client,\n  if it will be using one.","name":"accessToken"}],"params":[{"type":{"names":["string"]},"optional":true,"defaultvalue":null,"description":"The default localization language\n  to use for API responses.","name":"language"},{"type":{"names":["number"]},"optional":true,"nullable":true,"defaultvalue":600,"description":"The time to live in seconds\n  for the client's data cache entries. `null` if no there is no TTL.","name":"options.cacheTimeToLive"},{"type":{"names":["number"]},"optional":true,"nullable":true,"defaultvalue":250,"description":"The max number of entries in\n  the client's data cache.","name":"options.cacheMaxSize"}],"longname":"ClientOptions","scope":"global","$longname":"ClientOptions"},{"comment":"/**\n * @classdesc Generic API client error encountered during requests.\n * @extends ExtendableError\n */","meta":{"range":[146,824],"filename":"RequestError.js","lineno":7,"path":"/home/kelvin/work/wargamer/src/errors","code":{"id":"astnode100001121","name":"RequestError","type":"ClassDeclaration","paramnames":[""]}},"classdesc":"Generic API client error encountered during requests.","augments":["ExtendableError"],"name":"RequestError","longname":"RequestError","kind":"class","scope":"global","description":"Constructor.","params":[{"type":{"names":["Object"]},"description":"The constructor options.","name":"options"},{"type":{"names":["string"]},"description":"The error message.","name":"options.message"},{"type":{"names":["BaseClient"]},"description":"The API client that the error originated\n  from.","name":"options.client"},{"type":{"names":["number"]},"description":"The HTTP status code of the request.","name":"options.statusCode"}],"$longname":"RequestError","$members":[{"comment":"/**\n     * The API client that the error originated from.\n     * @type {BaseClient}\n     */","meta":{"range":[680,700],"filename":"RequestError.js","lineno":23,"path":"/home/kelvin/work/wargamer/src/errors","code":{"id":"astnode100001141","name":"this.client","type":"Identifier","value":"client","paramnames":[]}},"description":"The API client that the error originated from.","type":{"names":["BaseClient"]},"name":"client","longname":"RequestError#client","kind":"member","memberof":"RequestError","scope":"instance","$longname":"RequestError#client"},{"comment":"/**\n     * The HTTP status code of the request.\n     * @type {number}\n     */","meta":{"range":[789,817],"filename":"RequestError.js","lineno":29,"path":"/home/kelvin/work/wargamer/src/errors","code":{"id":"astnode100001147","name":"this.statusCode","type":"Identifier","value":"statusCode","paramnames":[]}},"description":"The HTTP status code of the request.","type":{"names":["number"]},"name":"statusCode","longname":"RequestError#statusCode","kind":"member","memberof":"RequestError","scope":"instance","$longname":"RequestError#statusCode"}],"$constructor":{"comment":"/**\n   * Constructor.\n   * @param {Object} options - The constructor options.\n   * @param {string} options.message - The error message.\n   * @param {BaseClient} options.client - The API client that the error originated\n   *   from.\n   * @param {number} options.statusCode - The HTTP status code of the request.\n   */","meta":{"range":[512,822],"filename":"RequestError.js","lineno":16,"path":"/home/kelvin/work/wargamer/src/errors","code":{"id":"astnode100001125","name":"RequestError","type":"MethodDefinition","paramnames":[""]},"vars":{"":null}},"description":"Constructor.","params":[{"type":{"names":["Object"]},"description":"The constructor options.","name":"options"},{"type":{"names":["string"]},"description":"The error message.","name":"options.message"},{"type":{"names":["BaseClient"]},"description":"The API client that the error originated\n  from.","name":"options.client"},{"type":{"names":["number"]},"description":"The HTTP status code of the request.","name":"options.statusCode"}],"name":"RequestError","longname":"RequestError","kind":"class","scope":"global","undocumented":true,"$longname":"RequestError"}},{"comment":"/**\n * The options available to use when making a single request.\n * @typedef {Object} RequestOptions\n * @property {string} [type] - The API to send this request to. One of: `wot`,\n *   `wotb`, `wotx`, `wows`, `wowp`, `wgn`.\n * @property {string} [realm] - The realm/region to use for the request.\n *   One of: `ru`, `eu`, `na`, `kr`, `asia`, `xbox`, `ps4`.\n */","meta":{"range":[1133,1494],"filename":"BaseClient.js","lineno":26,"path":"/home/kelvin/work/wargamer/src/clients","code":{}},"description":"The options available to use when making a single request.","kind":"typedef","name":"RequestOptions","type":{"names":["Object"]},"properties":[{"type":{"names":["string"]},"optional":true,"description":"The API to send this request to. One of: `wot`,\n  `wotb`, `wotx`, `wows`, `wowp`, `wgn`.","name":"type"},{"type":{"names":["string"]},"optional":true,"description":"The realm/region to use for the request.\n  One of: `ru`, `eu`, `na`, `kr`, `asia`, `xbox`, `ps4`.","name":"realm"}],"longname":"RequestOptions","scope":"global","$longname":"RequestOptions"},{"comment":"/**\n * @classdesc The Wargaming.net API client.\n * @extends BaseClient\n */","meta":{"range":[166,479],"filename":"Wargaming.js","lineno":8,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000760","name":"Wargaming","type":"ClassDeclaration","paramnames":["options"]}},"classdesc":"The Wargaming.net API client.","augments":["BaseClient"],"name":"Wargaming","longname":"Wargaming","kind":"class","scope":"global","description":"Constructor.","params":[{"type":{"names":["ClientOptions"]},"description":"The client options.","name":"options"}],"$longname":"Wargaming","$members":[{"comment":"/**\n     * The access token for this client.\n     * @type {?string}\n     */","meta":{"range":[5086,5116],"filename":"BaseClient.js","lineno":161,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000253","name":"this.accessToken","type":"Identifier","value":"accessToken","paramnames":[]}},"description":"The access token for this client.","type":{"names":["string"]},"nullable":true,"name":"accessToken","longname":"Wargaming#accessToken","kind":"member","memberof":"Wargaming","scope":"instance","inherits":"BaseClient#accessToken","inherited":true,"$longname":"Wargaming#accessToken"},{"comment":"/**\n     * The client's Accounts module.\n     * @type {Accounts}\n     */","meta":{"range":[438,472],"filename":"Wargaming.js","lineno":20,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000778","name":"this.accounts","type":"NewExpression","value":"","paramnames":[]}},"description":"The client's Accounts module.","type":{"names":["Accounts"]},"name":"accounts","longname":"Wargaming#accounts","kind":"member","memberof":"Wargaming","scope":"instance","$longname":"Wargaming#accounts"},{"comment":"/**\n     * The application ID for this client.\n     * @type {string}\n     */","meta":{"range":[4965,4999],"filename":"BaseClient.js","lineno":155,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000247","name":"this.applicationId","type":"Identifier","value":"applicationId","paramnames":[]}},"description":"The application ID for this client.","type":{"names":["string"]},"name":"applicationId","longname":"Wargaming#applicationId","kind":"member","memberof":"Wargaming","scope":"instance","inherits":"BaseClient#applicationId","inherited":true,"$longname":"Wargaming#applicationId"},{"comment":"/**\n     * The client's Authentication module.\n     * @type {Authentication}\n     */","meta":{"range":[5340,5386],"filename":"BaseClient.js","lineno":173,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000265","name":"this.authentication","type":"NewExpression","value":"","paramnames":[]}},"description":"The client's Authentication module.","type":{"names":["Authentication"]},"name":"authentication","longname":"Wargaming#authentication","kind":"member","memberof":"Wargaming","scope":"instance","inherits":"BaseClient#authentication","inherited":true,"$longname":"Wargaming#authentication"},{"comment":"/**\n   * Sends a GET request to the API.\n   * @param {string} method - The method to request.\n   * @param {Object} [params={}] - The parameters to include in the request.\n   * @param {RequestOptions} [options={}] - Options used to override client defaults.\n   * @returns {Promise.<APIResponse, Error>} Returns a promise resolving to the\n   *   returned API data, or rejecting with an error.\n   */","meta":{"range":[6596,6712],"filename":"BaseClient.js","lineno":219,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000325","name":"BaseClient#get","type":"MethodDefinition","paramnames":["method","params","options"]},"vars":{"":null}},"description":"Sends a GET request to the API.","params":[{"type":{"names":["string"]},"description":"The method to request.","name":"method"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","description":"The parameters to include in the request.","name":"params"},{"type":{"names":["RequestOptions"]},"optional":true,"defaultvalue":"{}","description":"Options used to override client defaults.","name":"options"}],"returns":[{"type":{"names":["Promise.<APIResponse, Error>"]},"description":"Returns a promise resolving to the\n  returned API data, or rejecting with an error."}],"name":"get","longname":"Wargaming#get","kind":"function","memberof":"Wargaming","scope":"instance","inherits":"BaseClient#get","inherited":true,"$longname":"Wargaming#get"},{"comment":"/**\n     * The default localization language for this client.\n     * @type {?string}\n     */","meta":{"range":[5220,5244],"filename":"BaseClient.js","lineno":167,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000259","name":"this.language","type":"Identifier","value":"language","paramnames":[]}},"description":"The default localization language for this client.","type":{"names":["string"]},"nullable":true,"name":"language","longname":"Wargaming#language","kind":"member","memberof":"Wargaming","scope":"instance","inherits":"BaseClient#language","inherited":true,"$longname":"Wargaming#language"},{"comment":"/**\n   * Sends a POST request to the API.\n   * @param {string} method - The method to request.\n   * @param {Object} [params={}] - The parameters to include in the request.\n   * @param {RequestOptions} [options={}] - Options used to override client defaults.\n   * @returns {Promise.<APIResponse, Error>} Returns a promise resolving to the\n   *   returned API data, or rejecting with an error.\n   */","meta":{"range":[7116,7234],"filename":"BaseClient.js","lineno":231,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000348","name":"BaseClient#post","type":"MethodDefinition","paramnames":["method","params","options"]},"vars":{"":null}},"description":"Sends a POST request to the API.","params":[{"type":{"names":["string"]},"description":"The method to request.","name":"method"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","description":"The parameters to include in the request.","name":"params"},{"type":{"names":["RequestOptions"]},"optional":true,"defaultvalue":"{}","description":"Options used to override client defaults.","name":"options"}],"returns":[{"type":{"names":["Promise.<APIResponse, Error>"]},"description":"Returns a promise resolving to the\n  returned API data, or rejecting with an error."}],"name":"post","longname":"Wargaming#post","kind":"function","memberof":"Wargaming","scope":"instance","inherits":"BaseClient#post","inherited":true,"$longname":"Wargaming#post"},{"comment":"/**\n     * The realm, i.e. region of this client.\n     * @type {string}\n     */","meta":{"range":[4849,4877],"filename":"BaseClient.js","lineno":149,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000241","name":"this.realm","type":"Identifier","value":"normalizedRealm","paramnames":[]}},"description":"The realm, i.e. region of this client.","type":{"names":["string"]},"name":"realm","longname":"Wargaming#realm","kind":"member","memberof":"Wargaming","scope":"instance","inherits":"BaseClient#realm","inherited":true,"$longname":"Wargaming#realm"},{"comment":"/**\n     * The type of API this client is for.\n     * @type {string}\n     */","meta":{"range":[4742,4758],"filename":"BaseClient.js","lineno":143,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000235","name":"this.type","type":"Identifier","value":"type","paramnames":[]}},"description":"The type of API this client is for.","type":{"names":["string"]},"name":"type","longname":"Wargaming#type","kind":"member","memberof":"Wargaming","scope":"instance","inherits":"BaseClient#type","inherited":true,"$longname":"Wargaming#type"}],"$constructor":{"comment":"/**\n   * Constructor.\n   * @param {ClientOptions} options - The client options.\n   */","meta":{"range":[293,477],"filename":"Wargaming.js","lineno":13,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000764","name":"Wargaming","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"description":"Constructor.","params":[{"type":{"names":["ClientOptions"]},"description":"The client options.","name":"options"}],"name":"Wargaming","longname":"Wargaming","kind":"class","scope":"global","undocumented":true,"$longname":"Wargaming"}},{"comment":"/**\n * @classdesc The World of Tanks API client.\n * @extends BaseClient\n */","meta":{"range":[228,670],"filename":"WorldOfTanks.js","lineno":9,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000800","name":"WorldOfTanks","type":"ClassDeclaration","paramnames":["options"]}},"classdesc":"The World of Tanks API client.","augments":["BaseClient"],"name":"WorldOfTanks","longname":"WorldOfTanks","kind":"class","scope":"global","description":"Constructor.","params":[{"type":{"names":["ClientOptions"]},"description":"The client options.","name":"options"}],"$longname":"WorldOfTanks","$members":[{"comment":"/**\n     * The access token for this client.\n     * @type {?string}\n     */","meta":{"range":[5086,5116],"filename":"BaseClient.js","lineno":161,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000253","name":"this.accessToken","type":"Identifier","value":"accessToken","paramnames":[]}},"description":"The access token for this client.","type":{"names":["string"]},"nullable":true,"name":"accessToken","longname":"WorldOfTanks#accessToken","kind":"member","memberof":"WorldOfTanks","scope":"instance","inherits":"BaseClient#accessToken","inherited":true,"$longname":"WorldOfTanks#accessToken"},{"comment":"/**\n     * The client's Accounts module.\n     * @type {Accounts}\n     */","meta":{"range":[503,537],"filename":"WorldOfTanks.js","lineno":21,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000818","name":"this.accounts","type":"NewExpression","value":"","paramnames":[]}},"description":"The client's Accounts module.","type":{"names":["Accounts"]},"name":"accounts","longname":"WorldOfTanks#accounts","kind":"member","memberof":"WorldOfTanks","scope":"instance","$longname":"WorldOfTanks#accounts"},{"comment":"/**\n     * The application ID for this client.\n     * @type {string}\n     */","meta":{"range":[4965,4999],"filename":"BaseClient.js","lineno":155,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000247","name":"this.applicationId","type":"Identifier","value":"applicationId","paramnames":[]}},"description":"The application ID for this client.","type":{"names":["string"]},"name":"applicationId","longname":"WorldOfTanks#applicationId","kind":"member","memberof":"WorldOfTanks","scope":"instance","inherits":"BaseClient#applicationId","inherited":true,"$longname":"WorldOfTanks#applicationId"},{"comment":"/**\n     * The client's Authentication module.\n     * @type {Authentication}\n     */","meta":{"range":[5340,5386],"filename":"BaseClient.js","lineno":173,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000265","name":"this.authentication","type":"NewExpression","value":"","paramnames":[]}},"description":"The client's Authentication module.","type":{"names":["Authentication"]},"name":"authentication","longname":"WorldOfTanks#authentication","kind":"member","memberof":"WorldOfTanks","scope":"instance","inherits":"BaseClient#authentication","inherited":true,"$longname":"WorldOfTanks#authentication"},{"comment":"/**\n   * Sends a GET request to the API.\n   * @param {string} method - The method to request.\n   * @param {Object} [params={}] - The parameters to include in the request.\n   * @param {RequestOptions} [options={}] - Options used to override client defaults.\n   * @returns {Promise.<APIResponse, Error>} Returns a promise resolving to the\n   *   returned API data, or rejecting with an error.\n   */","meta":{"range":[6596,6712],"filename":"BaseClient.js","lineno":219,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000325","name":"BaseClient#get","type":"MethodDefinition","paramnames":["method","params","options"]},"vars":{"":null}},"description":"Sends a GET request to the API.","params":[{"type":{"names":["string"]},"description":"The method to request.","name":"method"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","description":"The parameters to include in the request.","name":"params"},{"type":{"names":["RequestOptions"]},"optional":true,"defaultvalue":"{}","description":"Options used to override client defaults.","name":"options"}],"returns":[{"type":{"names":["Promise.<APIResponse, Error>"]},"description":"Returns a promise resolving to the\n  returned API data, or rejecting with an error."}],"name":"get","longname":"WorldOfTanks#get","kind":"function","memberof":"WorldOfTanks","scope":"instance","inherits":"BaseClient#get","inherited":true,"$longname":"WorldOfTanks#get"},{"comment":"/**\n     * The default localization language for this client.\n     * @type {?string}\n     */","meta":{"range":[5220,5244],"filename":"BaseClient.js","lineno":167,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000259","name":"this.language","type":"Identifier","value":"language","paramnames":[]}},"description":"The default localization language for this client.","type":{"names":["string"]},"nullable":true,"name":"language","longname":"WorldOfTanks#language","kind":"member","memberof":"WorldOfTanks","scope":"instance","inherits":"BaseClient#language","inherited":true,"$longname":"WorldOfTanks#language"},{"comment":"/**\n   * Sends a POST request to the API.\n   * @param {string} method - The method to request.\n   * @param {Object} [params={}] - The parameters to include in the request.\n   * @param {RequestOptions} [options={}] - Options used to override client defaults.\n   * @returns {Promise.<APIResponse, Error>} Returns a promise resolving to the\n   *   returned API data, or rejecting with an error.\n   */","meta":{"range":[7116,7234],"filename":"BaseClient.js","lineno":231,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000348","name":"BaseClient#post","type":"MethodDefinition","paramnames":["method","params","options"]},"vars":{"":null}},"description":"Sends a POST request to the API.","params":[{"type":{"names":["string"]},"description":"The method to request.","name":"method"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","description":"The parameters to include in the request.","name":"params"},{"type":{"names":["RequestOptions"]},"optional":true,"defaultvalue":"{}","description":"Options used to override client defaults.","name":"options"}],"returns":[{"type":{"names":["Promise.<APIResponse, Error>"]},"description":"Returns a promise resolving to the\n  returned API data, or rejecting with an error."}],"name":"post","longname":"WorldOfTanks#post","kind":"function","memberof":"WorldOfTanks","scope":"instance","inherits":"BaseClient#post","inherited":true,"$longname":"WorldOfTanks#post"},{"comment":"/**\n     * The realm, i.e. region of this client.\n     * @type {string}\n     */","meta":{"range":[4849,4877],"filename":"BaseClient.js","lineno":149,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000241","name":"this.realm","type":"Identifier","value":"normalizedRealm","paramnames":[]}},"description":"The realm, i.e. region of this client.","type":{"names":["string"]},"name":"realm","longname":"WorldOfTanks#realm","kind":"member","memberof":"WorldOfTanks","scope":"instance","inherits":"BaseClient#realm","inherited":true,"$longname":"WorldOfTanks#realm"},{"comment":"/**\n     * The client's Tankopedia module.\n     * @type {Tankopedia}\n     */","meta":{"range":[625,663],"filename":"WorldOfTanks.js","lineno":27,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000826","name":"this.tankopedia","type":"NewExpression","value":"","paramnames":[]}},"description":"The client's Tankopedia module.","type":{"names":["Tankopedia"]},"name":"tankopedia","longname":"WorldOfTanks#tankopedia","kind":"member","memberof":"WorldOfTanks","scope":"instance","$longname":"WorldOfTanks#tankopedia"},{"comment":"/**\n     * The type of API this client is for.\n     * @type {string}\n     */","meta":{"range":[4742,4758],"filename":"BaseClient.js","lineno":143,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000235","name":"this.type","type":"Identifier","value":"type","paramnames":[]}},"description":"The type of API this client is for.","type":{"names":["string"]},"name":"type","longname":"WorldOfTanks#type","kind":"member","memberof":"WorldOfTanks","scope":"instance","inherits":"BaseClient#type","inherited":true,"$longname":"WorldOfTanks#type"}],"$constructor":{"comment":"/**\n   * Constructor.\n   * @param {ClientOptions} options - The client options.\n   */","meta":{"range":[358,668],"filename":"WorldOfTanks.js","lineno":14,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000804","name":"WorldOfTanks","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"description":"Constructor.","params":[{"type":{"names":["ClientOptions"]},"description":"The client options.","name":"options"}],"name":"WorldOfTanks","longname":"WorldOfTanks","kind":"class","scope":"global","undocumented":true,"$longname":"WorldOfTanks"}},{"comment":"/**\n * @classdesc The World of Tanks Blitz API client.\n * @extends BaseClient\n */","meta":{"range":[239,687],"filename":"WorldOfTanksBlitz.js","lineno":9,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000848","name":"WorldOfTanksBlitz","type":"ClassDeclaration","paramnames":["options"]}},"classdesc":"The World of Tanks Blitz API client.","augments":["BaseClient"],"name":"WorldOfTanksBlitz","longname":"WorldOfTanksBlitz","kind":"class","scope":"global","description":"Constructor.","params":[{"type":{"names":["ClientOptions"]},"description":"The client options.","name":"options"}],"$longname":"WorldOfTanksBlitz","$members":[{"comment":"/**\n     * The access token for this client.\n     * @type {?string}\n     */","meta":{"range":[5086,5116],"filename":"BaseClient.js","lineno":161,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000253","name":"this.accessToken","type":"Identifier","value":"accessToken","paramnames":[]}},"description":"The access token for this client.","type":{"names":["string"]},"nullable":true,"name":"accessToken","longname":"WorldOfTanksBlitz#accessToken","kind":"member","memberof":"WorldOfTanksBlitz","scope":"instance","inherits":"BaseClient#accessToken","inherited":true,"$longname":"WorldOfTanksBlitz#accessToken"},{"comment":"/**\n     * The client's Accounts module.\n     * @type {Accounts}\n     */","meta":{"range":[520,554],"filename":"WorldOfTanksBlitz.js","lineno":21,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000866","name":"this.accounts","type":"NewExpression","value":"","paramnames":[]}},"description":"The client's Accounts module.","type":{"names":["Accounts"]},"name":"accounts","longname":"WorldOfTanksBlitz#accounts","kind":"member","memberof":"WorldOfTanksBlitz","scope":"instance","$longname":"WorldOfTanksBlitz#accounts"},{"comment":"/**\n     * The application ID for this client.\n     * @type {string}\n     */","meta":{"range":[4965,4999],"filename":"BaseClient.js","lineno":155,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000247","name":"this.applicationId","type":"Identifier","value":"applicationId","paramnames":[]}},"description":"The application ID for this client.","type":{"names":["string"]},"name":"applicationId","longname":"WorldOfTanksBlitz#applicationId","kind":"member","memberof":"WorldOfTanksBlitz","scope":"instance","inherits":"BaseClient#applicationId","inherited":true,"$longname":"WorldOfTanksBlitz#applicationId"},{"comment":"/**\n     * The client's Authentication module.\n     * @type {Authentication}\n     */","meta":{"range":[5340,5386],"filename":"BaseClient.js","lineno":173,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000265","name":"this.authentication","type":"NewExpression","value":"","paramnames":[]}},"description":"The client's Authentication module.","type":{"names":["Authentication"]},"name":"authentication","longname":"WorldOfTanksBlitz#authentication","kind":"member","memberof":"WorldOfTanksBlitz","scope":"instance","inherits":"BaseClient#authentication","inherited":true,"$longname":"WorldOfTanksBlitz#authentication"},{"comment":"/**\n   * Sends a GET request to the API.\n   * @param {string} method - The method to request.\n   * @param {Object} [params={}] - The parameters to include in the request.\n   * @param {RequestOptions} [options={}] - Options used to override client defaults.\n   * @returns {Promise.<APIResponse, Error>} Returns a promise resolving to the\n   *   returned API data, or rejecting with an error.\n   */","meta":{"range":[6596,6712],"filename":"BaseClient.js","lineno":219,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000325","name":"BaseClient#get","type":"MethodDefinition","paramnames":["method","params","options"]},"vars":{"":null}},"description":"Sends a GET request to the API.","params":[{"type":{"names":["string"]},"description":"The method to request.","name":"method"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","description":"The parameters to include in the request.","name":"params"},{"type":{"names":["RequestOptions"]},"optional":true,"defaultvalue":"{}","description":"Options used to override client defaults.","name":"options"}],"returns":[{"type":{"names":["Promise.<APIResponse, Error>"]},"description":"Returns a promise resolving to the\n  returned API data, or rejecting with an error."}],"name":"get","longname":"WorldOfTanksBlitz#get","kind":"function","memberof":"WorldOfTanksBlitz","scope":"instance","inherits":"BaseClient#get","inherited":true,"$longname":"WorldOfTanksBlitz#get"},{"comment":"/**\n     * The default localization language for this client.\n     * @type {?string}\n     */","meta":{"range":[5220,5244],"filename":"BaseClient.js","lineno":167,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000259","name":"this.language","type":"Identifier","value":"language","paramnames":[]}},"description":"The default localization language for this client.","type":{"names":["string"]},"nullable":true,"name":"language","longname":"WorldOfTanksBlitz#language","kind":"member","memberof":"WorldOfTanksBlitz","scope":"instance","inherits":"BaseClient#language","inherited":true,"$longname":"WorldOfTanksBlitz#language"},{"comment":"/**\n   * Sends a POST request to the API.\n   * @param {string} method - The method to request.\n   * @param {Object} [params={}] - The parameters to include in the request.\n   * @param {RequestOptions} [options={}] - Options used to override client defaults.\n   * @returns {Promise.<APIResponse, Error>} Returns a promise resolving to the\n   *   returned API data, or rejecting with an error.\n   */","meta":{"range":[7116,7234],"filename":"BaseClient.js","lineno":231,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000348","name":"BaseClient#post","type":"MethodDefinition","paramnames":["method","params","options"]},"vars":{"":null}},"description":"Sends a POST request to the API.","params":[{"type":{"names":["string"]},"description":"The method to request.","name":"method"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","description":"The parameters to include in the request.","name":"params"},{"type":{"names":["RequestOptions"]},"optional":true,"defaultvalue":"{}","description":"Options used to override client defaults.","name":"options"}],"returns":[{"type":{"names":["Promise.<APIResponse, Error>"]},"description":"Returns a promise resolving to the\n  returned API data, or rejecting with an error."}],"name":"post","longname":"WorldOfTanksBlitz#post","kind":"function","memberof":"WorldOfTanksBlitz","scope":"instance","inherits":"BaseClient#post","inherited":true,"$longname":"WorldOfTanksBlitz#post"},{"comment":"/**\n     * The realm, i.e. region of this client.\n     * @type {string}\n     */","meta":{"range":[4849,4877],"filename":"BaseClient.js","lineno":149,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000241","name":"this.realm","type":"Identifier","value":"normalizedRealm","paramnames":[]}},"description":"The realm, i.e. region of this client.","type":{"names":["string"]},"name":"realm","longname":"WorldOfTanksBlitz#realm","kind":"member","memberof":"WorldOfTanksBlitz","scope":"instance","inherits":"BaseClient#realm","inherited":true,"$longname":"WorldOfTanksBlitz#realm"},{"comment":"/**\n     * The client's Tankopedia module.\n     * @type {Tankopedia}\n     */","meta":{"range":[642,680],"filename":"WorldOfTanksBlitz.js","lineno":27,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000874","name":"this.tankopedia","type":"NewExpression","value":"","paramnames":[]}},"description":"The client's Tankopedia module.","type":{"names":["Tankopedia"]},"name":"tankopedia","longname":"WorldOfTanksBlitz#tankopedia","kind":"member","memberof":"WorldOfTanksBlitz","scope":"instance","$longname":"WorldOfTanksBlitz#tankopedia"},{"comment":"/**\n     * The type of API this client is for.\n     * @type {string}\n     */","meta":{"range":[4742,4758],"filename":"BaseClient.js","lineno":143,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000235","name":"this.type","type":"Identifier","value":"type","paramnames":[]}},"description":"The type of API this client is for.","type":{"names":["string"]},"name":"type","longname":"WorldOfTanksBlitz#type","kind":"member","memberof":"WorldOfTanksBlitz","scope":"instance","inherits":"BaseClient#type","inherited":true,"$longname":"WorldOfTanksBlitz#type"}],"$constructor":{"comment":"/**\n   * Constructor.\n   * @param {ClientOptions} options - The client options.\n   */","meta":{"range":[374,685],"filename":"WorldOfTanksBlitz.js","lineno":14,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000852","name":"WorldOfTanksBlitz","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"description":"Constructor.","params":[{"type":{"names":["ClientOptions"]},"description":"The client options.","name":"options"}],"name":"WorldOfTanksBlitz","longname":"WorldOfTanksBlitz","kind":"class","scope":"global","undocumented":true,"$longname":"WorldOfTanksBlitz"}},{"comment":"/**\n * @classdesc The World of Tanks Console API client.\n * @extends BaseClient\n */","meta":{"range":[243,693],"filename":"WorldOfTanksConsole.js","lineno":9,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000896","name":"WorldOfTanksConsole","type":"ClassDeclaration","paramnames":["options"]}},"classdesc":"The World of Tanks Console API client.","augments":["BaseClient"],"name":"WorldOfTanksConsole","longname":"WorldOfTanksConsole","kind":"class","scope":"global","description":"Constructor.","params":[{"type":{"names":["ClientOptions"]},"description":"The client options.","name":"options"}],"$longname":"WorldOfTanksConsole","$members":[{"comment":"/**\n     * The access token for this client.\n     * @type {?string}\n     */","meta":{"range":[5086,5116],"filename":"BaseClient.js","lineno":161,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000253","name":"this.accessToken","type":"Identifier","value":"accessToken","paramnames":[]}},"description":"The access token for this client.","type":{"names":["string"]},"nullable":true,"name":"accessToken","longname":"WorldOfTanksConsole#accessToken","kind":"member","memberof":"WorldOfTanksConsole","scope":"instance","inherits":"BaseClient#accessToken","inherited":true,"$longname":"WorldOfTanksConsole#accessToken"},{"comment":"/**\n     * The client's Accounts module.\n     * @type {Accounts}\n     */","meta":{"range":[526,560],"filename":"WorldOfTanksConsole.js","lineno":21,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000914","name":"this.accounts","type":"NewExpression","value":"","paramnames":[]}},"description":"The client's Accounts module.","type":{"names":["Accounts"]},"name":"accounts","longname":"WorldOfTanksConsole#accounts","kind":"member","memberof":"WorldOfTanksConsole","scope":"instance","$longname":"WorldOfTanksConsole#accounts"},{"comment":"/**\n     * The application ID for this client.\n     * @type {string}\n     */","meta":{"range":[4965,4999],"filename":"BaseClient.js","lineno":155,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000247","name":"this.applicationId","type":"Identifier","value":"applicationId","paramnames":[]}},"description":"The application ID for this client.","type":{"names":["string"]},"name":"applicationId","longname":"WorldOfTanksConsole#applicationId","kind":"member","memberof":"WorldOfTanksConsole","scope":"instance","inherits":"BaseClient#applicationId","inherited":true,"$longname":"WorldOfTanksConsole#applicationId"},{"comment":"/**\n     * The client's Authentication module.\n     * @type {Authentication}\n     */","meta":{"range":[5340,5386],"filename":"BaseClient.js","lineno":173,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000265","name":"this.authentication","type":"NewExpression","value":"","paramnames":[]}},"description":"The client's Authentication module.","type":{"names":["Authentication"]},"name":"authentication","longname":"WorldOfTanksConsole#authentication","kind":"member","memberof":"WorldOfTanksConsole","scope":"instance","inherits":"BaseClient#authentication","inherited":true,"$longname":"WorldOfTanksConsole#authentication"},{"comment":"/**\n   * Sends a GET request to the API.\n   * @param {string} method - The method to request.\n   * @param {Object} [params={}] - The parameters to include in the request.\n   * @param {RequestOptions} [options={}] - Options used to override client defaults.\n   * @returns {Promise.<APIResponse, Error>} Returns a promise resolving to the\n   *   returned API data, or rejecting with an error.\n   */","meta":{"range":[6596,6712],"filename":"BaseClient.js","lineno":219,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000325","name":"BaseClient#get","type":"MethodDefinition","paramnames":["method","params","options"]},"vars":{"":null}},"description":"Sends a GET request to the API.","params":[{"type":{"names":["string"]},"description":"The method to request.","name":"method"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","description":"The parameters to include in the request.","name":"params"},{"type":{"names":["RequestOptions"]},"optional":true,"defaultvalue":"{}","description":"Options used to override client defaults.","name":"options"}],"returns":[{"type":{"names":["Promise.<APIResponse, Error>"]},"description":"Returns a promise resolving to the\n  returned API data, or rejecting with an error."}],"name":"get","longname":"WorldOfTanksConsole#get","kind":"function","memberof":"WorldOfTanksConsole","scope":"instance","inherits":"BaseClient#get","inherited":true,"$longname":"WorldOfTanksConsole#get"},{"comment":"/**\n     * The default localization language for this client.\n     * @type {?string}\n     */","meta":{"range":[5220,5244],"filename":"BaseClient.js","lineno":167,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000259","name":"this.language","type":"Identifier","value":"language","paramnames":[]}},"description":"The default localization language for this client.","type":{"names":["string"]},"nullable":true,"name":"language","longname":"WorldOfTanksConsole#language","kind":"member","memberof":"WorldOfTanksConsole","scope":"instance","inherits":"BaseClient#language","inherited":true,"$longname":"WorldOfTanksConsole#language"},{"comment":"/**\n   * Sends a POST request to the API.\n   * @param {string} method - The method to request.\n   * @param {Object} [params={}] - The parameters to include in the request.\n   * @param {RequestOptions} [options={}] - Options used to override client defaults.\n   * @returns {Promise.<APIResponse, Error>} Returns a promise resolving to the\n   *   returned API data, or rejecting with an error.\n   */","meta":{"range":[7116,7234],"filename":"BaseClient.js","lineno":231,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000348","name":"BaseClient#post","type":"MethodDefinition","paramnames":["method","params","options"]},"vars":{"":null}},"description":"Sends a POST request to the API.","params":[{"type":{"names":["string"]},"description":"The method to request.","name":"method"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","description":"The parameters to include in the request.","name":"params"},{"type":{"names":["RequestOptions"]},"optional":true,"defaultvalue":"{}","description":"Options used to override client defaults.","name":"options"}],"returns":[{"type":{"names":["Promise.<APIResponse, Error>"]},"description":"Returns a promise resolving to the\n  returned API data, or rejecting with an error."}],"name":"post","longname":"WorldOfTanksConsole#post","kind":"function","memberof":"WorldOfTanksConsole","scope":"instance","inherits":"BaseClient#post","inherited":true,"$longname":"WorldOfTanksConsole#post"},{"comment":"/**\n     * The realm, i.e. region of this client.\n     * @type {string}\n     */","meta":{"range":[4849,4877],"filename":"BaseClient.js","lineno":149,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000241","name":"this.realm","type":"Identifier","value":"normalizedRealm","paramnames":[]}},"description":"The realm, i.e. region of this client.","type":{"names":["string"]},"name":"realm","longname":"WorldOfTanksConsole#realm","kind":"member","memberof":"WorldOfTanksConsole","scope":"instance","inherits":"BaseClient#realm","inherited":true,"$longname":"WorldOfTanksConsole#realm"},{"comment":"/**\n     * The client's Tankopedia module.\n     * @type {Tankopedia}\n     */","meta":{"range":[648,686],"filename":"WorldOfTanksConsole.js","lineno":27,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000922","name":"this.tankopedia","type":"NewExpression","value":"","paramnames":[]}},"description":"The client's Tankopedia module.","type":{"names":["Tankopedia"]},"name":"tankopedia","longname":"WorldOfTanksConsole#tankopedia","kind":"member","memberof":"WorldOfTanksConsole","scope":"instance","$longname":"WorldOfTanksConsole#tankopedia"},{"comment":"/**\n     * The type of API this client is for.\n     * @type {string}\n     */","meta":{"range":[4742,4758],"filename":"BaseClient.js","lineno":143,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000235","name":"this.type","type":"Identifier","value":"type","paramnames":[]}},"description":"The type of API this client is for.","type":{"names":["string"]},"name":"type","longname":"WorldOfTanksConsole#type","kind":"member","memberof":"WorldOfTanksConsole","scope":"instance","inherits":"BaseClient#type","inherited":true,"$longname":"WorldOfTanksConsole#type"}],"$constructor":{"comment":"/**\n   * Constructor.\n   * @param {ClientOptions} options - The client options.\n   */","meta":{"range":[380,691],"filename":"WorldOfTanksConsole.js","lineno":14,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000900","name":"WorldOfTanksConsole","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"description":"Constructor.","params":[{"type":{"names":["ClientOptions"]},"description":"The client options.","name":"options"}],"name":"WorldOfTanksConsole","longname":"WorldOfTanksConsole","kind":"class","scope":"global","undocumented":true,"$longname":"WorldOfTanksConsole"}},{"comment":"/**\n * @classdesc The World of Warplanes API client.\n * @extends BaseClient\n */","meta":{"range":[240,695],"filename":"WorldOfWarplanes.js","lineno":9,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000944","name":"WorldOfWarplanes","type":"ClassDeclaration","paramnames":["options"]}},"classdesc":"The World of Warplanes API client.","augments":["BaseClient"],"name":"WorldOfWarplanes","longname":"WorldOfWarplanes","kind":"class","scope":"global","description":"Constructor.","params":[{"type":{"names":["ClientOptions"]},"description":"The client options.","name":"options"}],"$longname":"WorldOfWarplanes","$members":[{"comment":"/**\n     * The access token for this client.\n     * @type {?string}\n     */","meta":{"range":[5086,5116],"filename":"BaseClient.js","lineno":161,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000253","name":"this.accessToken","type":"Identifier","value":"accessToken","paramnames":[]}},"description":"The access token for this client.","type":{"names":["string"]},"nullable":true,"name":"accessToken","longname":"WorldOfWarplanes#accessToken","kind":"member","memberof":"WorldOfWarplanes","scope":"instance","inherits":"BaseClient#accessToken","inherited":true,"$longname":"WorldOfWarplanes#accessToken"},{"comment":"/**\n     * The client's Accounts module.\n     * @type {Accounts}\n     */","meta":{"range":[520,554],"filename":"WorldOfWarplanes.js","lineno":21,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000962","name":"this.accounts","type":"NewExpression","value":"","paramnames":[]}},"description":"The client's Accounts module.","type":{"names":["Accounts"]},"name":"accounts","longname":"WorldOfWarplanes#accounts","kind":"member","memberof":"WorldOfWarplanes","scope":"instance","$longname":"WorldOfWarplanes#accounts"},{"comment":"/**\n     * The application ID for this client.\n     * @type {string}\n     */","meta":{"range":[4965,4999],"filename":"BaseClient.js","lineno":155,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000247","name":"this.applicationId","type":"Identifier","value":"applicationId","paramnames":[]}},"description":"The application ID for this client.","type":{"names":["string"]},"name":"applicationId","longname":"WorldOfWarplanes#applicationId","kind":"member","memberof":"WorldOfWarplanes","scope":"instance","inherits":"BaseClient#applicationId","inherited":true,"$longname":"WorldOfWarplanes#applicationId"},{"comment":"/**\n     * The client's Authentication module.\n     * @type {Authentication}\n     */","meta":{"range":[5340,5386],"filename":"BaseClient.js","lineno":173,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000265","name":"this.authentication","type":"NewExpression","value":"","paramnames":[]}},"description":"The client's Authentication module.","type":{"names":["Authentication"]},"name":"authentication","longname":"WorldOfWarplanes#authentication","kind":"member","memberof":"WorldOfWarplanes","scope":"instance","inherits":"BaseClient#authentication","inherited":true,"$longname":"WorldOfWarplanes#authentication"},{"comment":"/**\n     * The client's Encyclopedia module.\n     * @type {Encyclopedia}\n     */","meta":{"range":[646,688],"filename":"WorldOfWarplanes.js","lineno":27,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000970","name":"this.encyclopedia","type":"NewExpression","value":"","paramnames":[]}},"description":"The client's Encyclopedia module.","type":{"names":["Encyclopedia"]},"name":"encyclopedia","longname":"WorldOfWarplanes#encyclopedia","kind":"member","memberof":"WorldOfWarplanes","scope":"instance","$longname":"WorldOfWarplanes#encyclopedia"},{"comment":"/**\n   * Sends a GET request to the API.\n   * @param {string} method - The method to request.\n   * @param {Object} [params={}] - The parameters to include in the request.\n   * @param {RequestOptions} [options={}] - Options used to override client defaults.\n   * @returns {Promise.<APIResponse, Error>} Returns a promise resolving to the\n   *   returned API data, or rejecting with an error.\n   */","meta":{"range":[6596,6712],"filename":"BaseClient.js","lineno":219,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000325","name":"BaseClient#get","type":"MethodDefinition","paramnames":["method","params","options"]},"vars":{"":null}},"description":"Sends a GET request to the API.","params":[{"type":{"names":["string"]},"description":"The method to request.","name":"method"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","description":"The parameters to include in the request.","name":"params"},{"type":{"names":["RequestOptions"]},"optional":true,"defaultvalue":"{}","description":"Options used to override client defaults.","name":"options"}],"returns":[{"type":{"names":["Promise.<APIResponse, Error>"]},"description":"Returns a promise resolving to the\n  returned API data, or rejecting with an error."}],"name":"get","longname":"WorldOfWarplanes#get","kind":"function","memberof":"WorldOfWarplanes","scope":"instance","inherits":"BaseClient#get","inherited":true,"$longname":"WorldOfWarplanes#get"},{"comment":"/**\n     * The default localization language for this client.\n     * @type {?string}\n     */","meta":{"range":[5220,5244],"filename":"BaseClient.js","lineno":167,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000259","name":"this.language","type":"Identifier","value":"language","paramnames":[]}},"description":"The default localization language for this client.","type":{"names":["string"]},"nullable":true,"name":"language","longname":"WorldOfWarplanes#language","kind":"member","memberof":"WorldOfWarplanes","scope":"instance","inherits":"BaseClient#language","inherited":true,"$longname":"WorldOfWarplanes#language"},{"comment":"/**\n   * Sends a POST request to the API.\n   * @param {string} method - The method to request.\n   * @param {Object} [params={}] - The parameters to include in the request.\n   * @param {RequestOptions} [options={}] - Options used to override client defaults.\n   * @returns {Promise.<APIResponse, Error>} Returns a promise resolving to the\n   *   returned API data, or rejecting with an error.\n   */","meta":{"range":[7116,7234],"filename":"BaseClient.js","lineno":231,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000348","name":"BaseClient#post","type":"MethodDefinition","paramnames":["method","params","options"]},"vars":{"":null}},"description":"Sends a POST request to the API.","params":[{"type":{"names":["string"]},"description":"The method to request.","name":"method"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","description":"The parameters to include in the request.","name":"params"},{"type":{"names":["RequestOptions"]},"optional":true,"defaultvalue":"{}","description":"Options used to override client defaults.","name":"options"}],"returns":[{"type":{"names":["Promise.<APIResponse, Error>"]},"description":"Returns a promise resolving to the\n  returned API data, or rejecting with an error."}],"name":"post","longname":"WorldOfWarplanes#post","kind":"function","memberof":"WorldOfWarplanes","scope":"instance","inherits":"BaseClient#post","inherited":true,"$longname":"WorldOfWarplanes#post"},{"comment":"/**\n     * The realm, i.e. region of this client.\n     * @type {string}\n     */","meta":{"range":[4849,4877],"filename":"BaseClient.js","lineno":149,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000241","name":"this.realm","type":"Identifier","value":"normalizedRealm","paramnames":[]}},"description":"The realm, i.e. region of this client.","type":{"names":["string"]},"name":"realm","longname":"WorldOfWarplanes#realm","kind":"member","memberof":"WorldOfWarplanes","scope":"instance","inherits":"BaseClient#realm","inherited":true,"$longname":"WorldOfWarplanes#realm"},{"comment":"/**\n     * The type of API this client is for.\n     * @type {string}\n     */","meta":{"range":[4742,4758],"filename":"BaseClient.js","lineno":143,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000235","name":"this.type","type":"Identifier","value":"type","paramnames":[]}},"description":"The type of API this client is for.","type":{"names":["string"]},"name":"type","longname":"WorldOfWarplanes#type","kind":"member","memberof":"WorldOfWarplanes","scope":"instance","inherits":"BaseClient#type","inherited":true,"$longname":"WorldOfWarplanes#type"}],"$constructor":{"comment":"/**\n   * Constructor.\n   * @param {ClientOptions} options - The client options.\n   */","meta":{"range":[374,693],"filename":"WorldOfWarplanes.js","lineno":14,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000948","name":"WorldOfWarplanes","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"description":"Constructor.","params":[{"type":{"names":["ClientOptions"]},"description":"The client options.","name":"options"}],"name":"WorldOfWarplanes","longname":"WorldOfWarplanes","kind":"class","scope":"global","undocumented":true,"$longname":"WorldOfWarplanes"}},{"comment":"/**\n * @classdesc The World of Warships API client.\n * @extends BaseClient\n */","meta":{"range":[238,692],"filename":"WorldOfWarships.js","lineno":9,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000992","name":"WorldOfWarships","type":"ClassDeclaration","paramnames":["options"]}},"classdesc":"The World of Warships API client.","augments":["BaseClient"],"name":"WorldOfWarships","longname":"WorldOfWarships","kind":"class","scope":"global","description":"Constructor.","params":[{"type":{"names":["ClientOptions"]},"description":"The client options.","name":"options"}],"$longname":"WorldOfWarships","$members":[{"comment":"/**\n     * The access token for this client.\n     * @type {?string}\n     */","meta":{"range":[5086,5116],"filename":"BaseClient.js","lineno":161,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000253","name":"this.accessToken","type":"Identifier","value":"accessToken","paramnames":[]}},"description":"The access token for this client.","type":{"names":["string"]},"nullable":true,"name":"accessToken","longname":"WorldOfWarships#accessToken","kind":"member","memberof":"WorldOfWarships","scope":"instance","inherits":"BaseClient#accessToken","inherited":true,"$longname":"WorldOfWarships#accessToken"},{"comment":"/**\n     * The client's Accounts module.\n     * @type {Accounts}\n     */","meta":{"range":[517,551],"filename":"WorldOfWarships.js","lineno":21,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100001010","name":"this.accounts","type":"NewExpression","value":"","paramnames":[]}},"description":"The client's Accounts module.","type":{"names":["Accounts"]},"name":"accounts","longname":"WorldOfWarships#accounts","kind":"member","memberof":"WorldOfWarships","scope":"instance","$longname":"WorldOfWarships#accounts"},{"comment":"/**\n     * The application ID for this client.\n     * @type {string}\n     */","meta":{"range":[4965,4999],"filename":"BaseClient.js","lineno":155,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000247","name":"this.applicationId","type":"Identifier","value":"applicationId","paramnames":[]}},"description":"The application ID for this client.","type":{"names":["string"]},"name":"applicationId","longname":"WorldOfWarships#applicationId","kind":"member","memberof":"WorldOfWarships","scope":"instance","inherits":"BaseClient#applicationId","inherited":true,"$longname":"WorldOfWarships#applicationId"},{"comment":"/**\n     * The client's Authentication module.\n     * @type {Authentication}\n     */","meta":{"range":[5340,5386],"filename":"BaseClient.js","lineno":173,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000265","name":"this.authentication","type":"NewExpression","value":"","paramnames":[]}},"description":"The client's Authentication module.","type":{"names":["Authentication"]},"name":"authentication","longname":"WorldOfWarships#authentication","kind":"member","memberof":"WorldOfWarships","scope":"instance","inherits":"BaseClient#authentication","inherited":true,"$longname":"WorldOfWarships#authentication"},{"comment":"/**\n     * The client's Encyclopedia module.\n     * @type {Encyclopedia}\n     */","meta":{"range":[643,685],"filename":"WorldOfWarships.js","lineno":27,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100001018","name":"this.encyclopedia","type":"NewExpression","value":"","paramnames":[]}},"description":"The client's Encyclopedia module.","type":{"names":["Encyclopedia"]},"name":"encyclopedia","longname":"WorldOfWarships#encyclopedia","kind":"member","memberof":"WorldOfWarships","scope":"instance","$longname":"WorldOfWarships#encyclopedia"},{"comment":"/**\n   * Sends a GET request to the API.\n   * @param {string} method - The method to request.\n   * @param {Object} [params={}] - The parameters to include in the request.\n   * @param {RequestOptions} [options={}] - Options used to override client defaults.\n   * @returns {Promise.<APIResponse, Error>} Returns a promise resolving to the\n   *   returned API data, or rejecting with an error.\n   */","meta":{"range":[6596,6712],"filename":"BaseClient.js","lineno":219,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000325","name":"BaseClient#get","type":"MethodDefinition","paramnames":["method","params","options"]},"vars":{"":null}},"description":"Sends a GET request to the API.","params":[{"type":{"names":["string"]},"description":"The method to request.","name":"method"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","description":"The parameters to include in the request.","name":"params"},{"type":{"names":["RequestOptions"]},"optional":true,"defaultvalue":"{}","description":"Options used to override client defaults.","name":"options"}],"returns":[{"type":{"names":["Promise.<APIResponse, Error>"]},"description":"Returns a promise resolving to the\n  returned API data, or rejecting with an error."}],"name":"get","longname":"WorldOfWarships#get","kind":"function","memberof":"WorldOfWarships","scope":"instance","inherits":"BaseClient#get","inherited":true,"$longname":"WorldOfWarships#get"},{"comment":"/**\n     * The default localization language for this client.\n     * @type {?string}\n     */","meta":{"range":[5220,5244],"filename":"BaseClient.js","lineno":167,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000259","name":"this.language","type":"Identifier","value":"language","paramnames":[]}},"description":"The default localization language for this client.","type":{"names":["string"]},"nullable":true,"name":"language","longname":"WorldOfWarships#language","kind":"member","memberof":"WorldOfWarships","scope":"instance","inherits":"BaseClient#language","inherited":true,"$longname":"WorldOfWarships#language"},{"comment":"/**\n   * Sends a POST request to the API.\n   * @param {string} method - The method to request.\n   * @param {Object} [params={}] - The parameters to include in the request.\n   * @param {RequestOptions} [options={}] - Options used to override client defaults.\n   * @returns {Promise.<APIResponse, Error>} Returns a promise resolving to the\n   *   returned API data, or rejecting with an error.\n   */","meta":{"range":[7116,7234],"filename":"BaseClient.js","lineno":231,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000348","name":"BaseClient#post","type":"MethodDefinition","paramnames":["method","params","options"]},"vars":{"":null}},"description":"Sends a POST request to the API.","params":[{"type":{"names":["string"]},"description":"The method to request.","name":"method"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","description":"The parameters to include in the request.","name":"params"},{"type":{"names":["RequestOptions"]},"optional":true,"defaultvalue":"{}","description":"Options used to override client defaults.","name":"options"}],"returns":[{"type":{"names":["Promise.<APIResponse, Error>"]},"description":"Returns a promise resolving to the\n  returned API data, or rejecting with an error."}],"name":"post","longname":"WorldOfWarships#post","kind":"function","memberof":"WorldOfWarships","scope":"instance","inherits":"BaseClient#post","inherited":true,"$longname":"WorldOfWarships#post"},{"comment":"/**\n     * The realm, i.e. region of this client.\n     * @type {string}\n     */","meta":{"range":[4849,4877],"filename":"BaseClient.js","lineno":149,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000241","name":"this.realm","type":"Identifier","value":"normalizedRealm","paramnames":[]}},"description":"The realm, i.e. region of this client.","type":{"names":["string"]},"name":"realm","longname":"WorldOfWarships#realm","kind":"member","memberof":"WorldOfWarships","scope":"instance","inherits":"BaseClient#realm","inherited":true,"$longname":"WorldOfWarships#realm"},{"comment":"/**\n     * The type of API this client is for.\n     * @type {string}\n     */","meta":{"range":[4742,4758],"filename":"BaseClient.js","lineno":143,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000235","name":"this.type","type":"Identifier","value":"type","paramnames":[]}},"description":"The type of API this client is for.","type":{"names":["string"]},"name":"type","longname":"WorldOfWarships#type","kind":"member","memberof":"WorldOfWarships","scope":"instance","inherits":"BaseClient#type","inherited":true,"$longname":"WorldOfWarships#type"}],"$constructor":{"comment":"/**\n   * Constructor.\n   * @param {ClientOptions} options - The client options.\n   */","meta":{"range":[371,690],"filename":"WorldOfWarships.js","lineno":14,"path":"/home/kelvin/work/wargamer/src/clients","code":{"id":"astnode100000996","name":"WorldOfWarships","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"description":"Constructor.","params":[{"type":{"names":["ClientOptions"]},"description":"The client options.","name":"options"}],"name":"WorldOfWarships","longname":"WorldOfWarships","kind":"class","scope":"global","undocumented":true,"$longname":"WorldOfWarships"}}],"symbols":["APIError","APIError#apiMessage","APIError#client","APIError#code","APIError#field","APIError#method","APIError#requestRealm","APIError#statusCode","APIError#value","APIResponse","APIResponse#body","APIResponse#client","APIResponse#data","APIResponse#meta","APIResponse#method","APIResponse#requestRealm","BaseClient","BaseClient#accessToken","BaseClient#applicationId","BaseClient#authentication","BaseClient#get","BaseClient#language","BaseClient#post","BaseClient#realm","BaseClient#type","ClientOptions","RequestError","RequestError#client","RequestError#statusCode","RequestOptions","Wargaming","Wargaming#accessToken","Wargaming#accounts","Wargaming#applicationId","Wargaming#authentication","Wargaming#get","Wargaming#language","Wargaming#post","Wargaming#realm","Wargaming#type","WorldOfTanks","WorldOfTanks#accessToken","WorldOfTanks#accounts","WorldOfTanks#applicationId","WorldOfTanks#authentication","WorldOfTanks#get","WorldOfTanks#language","WorldOfTanks#post","WorldOfTanks#realm","WorldOfTanks#tankopedia","WorldOfTanks#type","WorldOfTanksBlitz","WorldOfTanksBlitz#accessToken","WorldOfTanksBlitz#accounts","WorldOfTanksBlitz#applicationId","WorldOfTanksBlitz#authentication","WorldOfTanksBlitz#get","WorldOfTanksBlitz#language","WorldOfTanksBlitz#post","WorldOfTanksBlitz#realm","WorldOfTanksBlitz#tankopedia","WorldOfTanksBlitz#type","WorldOfTanksConsole","WorldOfTanksConsole#accessToken","WorldOfTanksConsole#accounts","WorldOfTanksConsole#applicationId","WorldOfTanksConsole#authentication","WorldOfTanksConsole#get","WorldOfTanksConsole#language","WorldOfTanksConsole#post","WorldOfTanksConsole#realm","WorldOfTanksConsole#tankopedia","WorldOfTanksConsole#type","WorldOfWarplanes","WorldOfWarplanes#accessToken","WorldOfWarplanes#accounts","WorldOfWarplanes#applicationId","WorldOfWarplanes#authentication","WorldOfWarplanes#encyclopedia","WorldOfWarplanes#get","WorldOfWarplanes#language","WorldOfWarplanes#post","WorldOfWarplanes#realm","WorldOfWarplanes#type","WorldOfWarships","WorldOfWarships#accessToken","WorldOfWarships#accounts","WorldOfWarships#applicationId","WorldOfWarships#authentication","WorldOfWarships#encyclopedia","WorldOfWarships#get","WorldOfWarships#language","WorldOfWarships#post","WorldOfWarships#realm","WorldOfWarships#type"]},"modules-common":{"documentation":[{"comment":"/**\n * @classdesc Module for Accounts endpoints.\n * @extends ClientModule\n */","meta":{"range":[123,1459],"filename":"Accounts.js","lineno":7,"path":"/home/kelvin/work/wargamer/src/modules/common","code":{"id":"astnode100000005","name":"Accounts","type":"ClassDeclaration","paramnames":["client"]}},"classdesc":"Module for Accounts endpoints.","augments":["ClientModule"],"name":"Accounts","longname":"Accounts","kind":"class","scope":"global","description":"Constructor.","params":[{"type":{"names":["BaseClient"]},"description":"The API client this module belongs to.","name":"client"}],"$longname":"Accounts","$members":[{"comment":"/**\n   * Searches for player IDs given a nickname. Supports the search types available\n   *   on the `account/list` endpoint.\n   * @param {string} name - The player's nickname.\n   * @param {string} [searchType='exact'] - The search type to use.\n   * @returns {Promise.<(Array.<Object>|number|null), Error>} A promise resolving\n   *   to the returned search results.\n   * If `searchType` is `'startswith'`, the resolved value matches the data returned\n   *   by the `account/list` endpoint.\n   * If `searchType` is `'exact'`, the resolved value is the matching player's ID,\n   *   or `null` if no match was found.\n   */","meta":{"range":[947,1457],"filename":"Accounts.js","lineno":28,"path":"/home/kelvin/work/wargamer/src/modules/common","code":{"id":"astnode100000019","name":"Accounts#findPlayerId","type":"MethodDefinition","paramnames":["name","searchType"]},"vars":{"":null}},"description":"Searches for player IDs given a nickname. Supports the search types available\n  on the `account/list` endpoint.","params":[{"type":{"names":["string"]},"description":"The player's nickname.","name":"name"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'exact'","description":"The search type to use.","name":"searchType"}],"returns":[{"type":{"names":["Promise.<(Array.<Object>|number|null), Error>"]},"description":"A promise resolving\n  to the returned search results.\nIf `searchType` is `'startswith'`, the resolved value matches the data returned\n  by the `account/list` endpoint.\nIf `searchType` is `'exact'`, the resolved value is the matching player's ID,\n  or `null` if no match was found."}],"name":"findPlayerId","longname":"Accounts#findPlayerId","kind":"function","memberof":"Accounts","scope":"instance","$longname":"Accounts#findPlayerId"}],"$constructor":{"comment":"/**\n   * Constructor.\n   * @param {BaseClient} client - The API client this module belongs to.\n   */","meta":{"range":[266,322],"filename":"Accounts.js","lineno":12,"path":"/home/kelvin/work/wargamer/src/modules/common","code":{"id":"astnode100000009","name":"Accounts","type":"MethodDefinition","paramnames":["client"]},"vars":{"":null}},"description":"Constructor.","params":[{"type":{"names":["BaseClient"]},"description":"The API client this module belongs to.","name":"client"}],"name":"Accounts","longname":"Accounts","kind":"class","scope":"global","undocumented":true,"$longname":"Accounts"}},{"comment":"/**\n * @classdesc Module for Authentication endpoints.\n * @extends ClientModule\n */","meta":{"range":[129,1853],"filename":"Authentication.js","lineno":7,"path":"/home/kelvin/work/wargamer/src/modules/common","code":{"id":"astnode100000101","name":"Authentication","type":"ClassDeclaration","paramnames":["client"]}},"classdesc":"Module for Authentication endpoints.","augments":["ClientModule"],"name":"Authentication","longname":"Authentication","kind":"class","scope":"global","description":"Constructor.","params":[{"type":{"names":["BaseClient"]},"description":"The API client this module belongs to.","name":"client"}],"$longname":"Authentication","$members":[{"comment":"/**\n   * Sends a request to invalidate the client's access token. Upon a successful\n   *   request, the client's current access token will be set to `null`.\n   * @returns {Promise.<APIResponse, Error>} Returns the same value as a normal\n   *   request if the client's access token is defined, else rejects with a\n   *   plain `Error`.\n   */","meta":{"range":[1462,1851],"filename":"Authentication.js","lineno":44,"path":"/home/kelvin/work/wargamer/src/modules/common","code":{"id":"astnode100000176","name":"Authentication#destroyAccessToken","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Sends a request to invalidate the client's access token. Upon a successful\n  request, the client's current access token will be set to `null`.","returns":[{"type":{"names":["Promise.<APIResponse, Error>"]},"description":"Returns the same value as a normal\n  request if the client's access token is defined, else rejects with a\n  plain `Error`."}],"name":"destroyAccessToken","longname":"Authentication#destroyAccessToken","kind":"function","memberof":"Authentication","scope":"instance","params":[],"$longname":"Authentication#destroyAccessToken"},{"comment":"/**\n   * Sends a request to renew the client's access token. Upon a successful\n   *   request, the client's current access token will be updated with the\n   *   returned token.\n   * @returns {Promise.<APIResponse, Error>} Returns the same value as a normal\n   *   request if the client's access token is defined, else rejects with a\n   *   plain `Error`.\n   */","meta":{"range":[707,1115],"filename":"Authentication.js","lineno":24,"path":"/home/kelvin/work/wargamer/src/modules/common","code":{"id":"astnode100000115","name":"Authentication#renewAccessToken","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Sends a request to renew the client's access token. Upon a successful\n  request, the client's current access token will be updated with the\n  returned token.","returns":[{"type":{"names":["Promise.<APIResponse, Error>"]},"description":"Returns the same value as a normal\n  request if the client's access token is defined, else rejects with a\n  plain `Error`."}],"name":"renewAccessToken","longname":"Authentication#renewAccessToken","kind":"function","memberof":"Authentication","scope":"instance","params":[],"$longname":"Authentication#renewAccessToken"}],"$constructor":{"comment":"/**\n   * Constructor.\n   * @param {BaseClient} client - The API client this module belongs to.\n   */","meta":{"range":[278,340],"filename":"Authentication.js","lineno":12,"path":"/home/kelvin/work/wargamer/src/modules/common","code":{"id":"astnode100000105","name":"Authentication","type":"MethodDefinition","paramnames":["client"]},"vars":{"":null}},"description":"Constructor.","params":[{"type":{"names":["BaseClient"]},"description":"The API client this module belongs to.","name":"client"}],"name":"Authentication","longname":"Authentication","kind":"class","scope":"global","undocumented":true,"$longname":"Authentication"}}],"symbols":["Accounts","Accounts#findPlayerId","Authentication","Authentication#destroyAccessToken","Authentication#renewAccessToken"]},"modules-wot":{"documentation":[{"comment":"/**\n * @classdesc Module for the World of Tanks Tankopedia endpoint.\n * @extends ClientModule\n */","meta":{"range":[255,5555],"filename":"Tankopedia.js","lineno":9,"path":"/home/kelvin/work/wargamer/src/modules/WorldOfTanks","code":{"id":"astnode100000017","name":"Tankopedia","type":"ClassDeclaration","paramnames":["client"]}},"classdesc":"Module for the World of Tanks Tankopedia endpoint.","augments":["ClientModule"],"name":"Tankopedia","longname":"Tankopedia","kind":"class","scope":"global","description":"Constructor.","params":[{"type":{"names":["BaseClient"]},"description":"The API client this module belongs to.","name":"client"}],"$longname":"Tankopedia","$members":[{"comment":"/**\n   * Searches for a vehicle by name or ID and returns its entry from the\n   *   `encyclopedia/vehicles` endpoint.\n   * @param {(number|string)} identifier - The vehicle identifier to use for\n   *   lookup.\n   * If a number is supplied, it is treated as the vehicle's ID.\n   * If a string is supplied, the identifier is matched against vehicle names\n   *   with the closest match being selected.\n   * @returns {Promise.<?Object, Error>} A promise resolving to the data for the\n   *   matched vehicle, or `null` if no vehicles were matched.\n   */","meta":{"range":[1561,1868],"filename":"Tankopedia.js","lineno":56,"path":"/home/kelvin/work/wargamer/src/modules/WorldOfTanks","code":{"id":"astnode100000062","name":"Tankopedia#findVehicle","type":"MethodDefinition","paramnames":["identifier"]},"vars":{"":null}},"description":"Searches for a vehicle by name or ID and returns its entry from the\n  `encyclopedia/vehicles` endpoint.","params":[{"type":{"names":["number","string"]},"description":"The vehicle identifier to use for\n  lookup.\nIf a number is supplied, it is treated as the vehicle's ID.\nIf a string is supplied, the identifier is matched against vehicle names\n  with the closest match being selected.","name":"identifier"}],"returns":[{"type":{"names":["Promise.<?Object, Error>"]},"description":"A promise resolving to the data for the\n  matched vehicle, or `null` if no vehicles were matched."}],"name":"findVehicle","longname":"Tankopedia#findVehicle","kind":"function","memberof":"Tankopedia","scope":"instance","$longname":"Tankopedia#findVehicle"},{"comment":"/**\n   * Returns the vehicle profile for a given vehicle.\n   * @param {number} vehicleId - The vehicle ID to use for lookup.\n   * @param {string} [profile='stock'] - The vehicle profile to lookup. Can be\n   *   a profile ID, or one of `'stock'` or `'top'`. The top configuration is\n   *   determined by picking the most expensive modules to research in the\n   *   vehicle's research tree.\n   * @returns {Promise.<?Object, Error>} A promise resolving to the data for the\n   *   matched vehicle profile, or `null` if no vehicle was matched.\n   */","meta":{"range":[2419,3527],"filename":"Tankopedia.js","lineno":80,"path":"/home/kelvin/work/wargamer/src/modules/WorldOfTanks","code":{"id":"astnode100000090","name":"Tankopedia#findVehicleProfile","type":"MethodDefinition","paramnames":["vehicleId","profile"]},"vars":{"":null}},"description":"Returns the vehicle profile for a given vehicle.","params":[{"type":{"names":["number"]},"description":"The vehicle ID to use for lookup.","name":"vehicleId"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'stock'","description":"The vehicle profile to lookup. Can be\n  a profile ID, or one of `'stock'` or `'top'`. The top configuration is\n  determined by picking the most expensive modules to research in the\n  vehicle's research tree.","name":"profile"}],"returns":[{"type":{"names":["Promise.<?Object, Error>"]},"description":"A promise resolving to the data for the\n  matched vehicle profile, or `null` if no vehicle was matched."}],"name":"findVehicleProfile","longname":"Tankopedia#findVehicleProfile","kind":"function","memberof":"Tankopedia","scope":"instance","$longname":"Tankopedia#findVehicleProfile"},{"comment":"/**\n   * Localizes an achievement section slug. The returned value is the section's\n   *   name.\n   * @param {string} slug - The slug.\n   * @returns {Promise.<(string|undefined), Error>} Promise resolving to the\n   *   translated slug, or `undefined` if it couldn't be translated.\n   */","meta":{"range":[4576,4779],"filename":"Tankopedia.js","lineno":145,"path":"/home/kelvin/work/wargamer/src/modules/WorldOfTanks","code":{"id":"astnode100000275","name":"Tankopedia#localizeAchievementSection","type":"MethodDefinition","paramnames":["slug"]},"vars":{"":null}},"description":"Localizes an achievement section slug. The returned value is the section's\n  name.","params":[{"type":{"names":["string"]},"description":"The slug.","name":"slug"}],"returns":[{"type":{"names":["Promise.<(string|undefined), Error>"]},"description":"Promise resolving to the\n  translated slug, or `undefined` if it couldn't be translated."}],"name":"localizeAchievementSection","longname":"Tankopedia#localizeAchievementSection","kind":"function","memberof":"Tankopedia","scope":"instance","$longname":"Tankopedia#localizeAchievementSection"},{"comment":"/**\n   * Localizes a crew role slug.\n   * @param {string} slug - The slug.\n   * @returns {Promise.<(string|undefined), Error>} Promise resolving to the\n   *   translated slug, or `undefined` if it couldn't be translated.\n   */","meta":{"range":[3760,3910],"filename":"Tankopedia.js","lineno":116,"path":"/home/kelvin/work/wargamer/src/modules/WorldOfTanks","code":{"id":"astnode100000239","name":"Tankopedia#localizeCrewRole","type":"MethodDefinition","paramnames":["slug"]},"vars":{"":null}},"description":"Localizes a crew role slug.","params":[{"type":{"names":["string"]},"description":"The slug.","name":"slug"}],"returns":[{"type":{"names":["Promise.<(string|undefined), Error>"]},"description":"Promise resolving to the\n  translated slug, or `undefined` if it couldn't be translated."}],"name":"localizeCrewRole","longname":"Tankopedia#localizeCrewRole","kind":"function","memberof":"Tankopedia","scope":"instance","$longname":"Tankopedia#localizeCrewRole"},{"comment":"/**\n   * Localizes a language slug.\n   * @param {string} slug - The slug.\n   * @returns {Promise.<(string|undefined), Error>} Promise resolving to the\n   *   translated slug, or `undefined` if it couldn't be translated.\n   */","meta":{"range":[4142,4283],"filename":"Tankopedia.js","lineno":130,"path":"/home/kelvin/work/wargamer/src/modules/WorldOfTanks","code":{"id":"astnode100000257","name":"Tankopedia#localizeLanguage","type":"MethodDefinition","paramnames":["slug"]},"vars":{"":null}},"description":"Localizes a language slug.","params":[{"type":{"names":["string"]},"description":"The slug.","name":"slug"}],"returns":[{"type":{"names":["Promise.<(string|undefined), Error>"]},"description":"Promise resolving to the\n  translated slug, or `undefined` if it couldn't be translated."}],"name":"localizeLanguage","longname":"Tankopedia#localizeLanguage","kind":"function","memberof":"Tankopedia","scope":"instance","$longname":"Tankopedia#localizeLanguage"},{"comment":"/**\n   * Localizes a vehicle nation slug.\n   * @param {string} slug - The slug.\n   * @returns {Promise.<(string|undefined), Error>} Promise resolving to the\n   *   translated slug, or `undefined` if it couldn't be translated.\n   */","meta":{"range":[5401,5553],"filename":"Tankopedia.js","lineno":173,"path":"/home/kelvin/work/wargamer/src/modules/WorldOfTanks","code":{"id":"astnode100000321","name":"Tankopedia#localizeVehicleNation","type":"MethodDefinition","paramnames":["slug"]},"vars":{"":null}},"description":"Localizes a vehicle nation slug.","params":[{"type":{"names":["string"]},"description":"The slug.","name":"slug"}],"returns":[{"type":{"names":["Promise.<(string|undefined), Error>"]},"description":"Promise resolving to the\n  translated slug, or `undefined` if it couldn't be translated."}],"name":"localizeVehicleNation","longname":"Tankopedia#localizeVehicleNation","kind":"function","memberof":"Tankopedia","scope":"instance","$longname":"Tankopedia#localizeVehicleNation"},{"comment":"/**\n   * Localizes a vehicle type slug.\n   * @param {string} slug - The slug.\n   * @returns {Promise.<(string|undefined), Error>} Promise resolving to the\n   *   translated slug, or `undefined` if it couldn't be translated.\n   */","meta":{"range":[5015,5163],"filename":"Tankopedia.js","lineno":159,"path":"/home/kelvin/work/wargamer/src/modules/WorldOfTanks","code":{"id":"astnode100000303","name":"Tankopedia#localizeVehicleType","type":"MethodDefinition","paramnames":["slug"]},"vars":{"":null}},"description":"Localizes a vehicle type slug.","params":[{"type":{"names":["string"]},"description":"The slug.","name":"slug"}],"returns":[{"type":{"names":["Promise.<(string|undefined), Error>"]},"description":"Promise resolving to the\n  translated slug, or `undefined` if it couldn't be translated."}],"name":"localizeVehicleType","longname":"Tankopedia#localizeVehicleType","kind":"function","memberof":"Tankopedia","scope":"instance","$longname":"Tankopedia#localizeVehicleType"}],"$constructor":{"comment":"/**\n   * Constructor.\n   * @param {BaseClient} client - The API client this module belongs to.\n   */","meta":{"range":[400,1006],"filename":"Tankopedia.js","lineno":14,"path":"/home/kelvin/work/wargamer/src/modules/WorldOfTanks","code":{"id":"astnode100000021","name":"Tankopedia","type":"MethodDefinition","paramnames":["client"]},"vars":{"":null}},"description":"Constructor.","params":[{"type":{"names":["BaseClient"]},"description":"The API client this module belongs to.","name":"client"}],"name":"Tankopedia","longname":"Tankopedia","kind":"class","scope":"global","undocumented":true,"$longname":"Tankopedia"}}],"symbols":["Tankopedia","Tankopedia#findVehicle","Tankopedia#findVehicleProfile","Tankopedia#localizeAchievementSection","Tankopedia#localizeCrewRole","Tankopedia#localizeLanguage","Tankopedia#localizeVehicleNation","Tankopedia#localizeVehicleType"]},"modules-wotb":{"documentation":[{"comment":"/**\n * @classdesc Module for the World of Tanks Blitz Tankopedia endpoint.\n * @extends ClientModule\n */","meta":{"range":[242,3094],"filename":"Tankopedia.js","lineno":9,"path":"/home/kelvin/work/wargamer/src/modules/WorldOfTanksBlitz","code":{"id":"astnode100000015","name":"Tankopedia","type":"ClassDeclaration","paramnames":["client"]}},"classdesc":"Module for the World of Tanks Blitz Tankopedia endpoint.","augments":["ClientModule"],"name":"Tankopedia","longname":"Tankopedia","kind":"class","scope":"global","description":"Constructor.","params":[{"type":{"names":["BaseClient"]},"description":"The API client this module belongs to.","name":"client"}],"$longname":"Tankopedia","$members":[{"comment":"/**\n   * Searches for a vehicle by name or ID and returns its entry from the\n   *   `encyclopedia/vehicles` endpoint.\n   * @param {(number|string)} identifier - The vehicle identifier to use for\n   *   lookup.\n   * If a number is supplied, it is treated as the vehicle's ID.\n   * If a string is supplied, the identifier is matched against vehicle names\n   *   with the closest match being selected.\n   * @returns {Promise.<?Object, Error>} A promise resolving to the data for the\n   *   matched vehicle, or `null` if no vehicles were matched.\n   */","meta":{"range":[1164,1449],"filename":"Tankopedia.js","lineno":40,"path":"/home/kelvin/work/wargamer/src/modules/WorldOfTanksBlitz","code":{"id":"astnode100000041","name":"Tankopedia#findVehicle","type":"MethodDefinition","paramnames":["identifier"]},"vars":{"":null}},"description":"Searches for a vehicle by name or ID and returns its entry from the\n  `encyclopedia/vehicles` endpoint.","params":[{"type":{"names":["number","string"]},"description":"The vehicle identifier to use for\n  lookup.\nIf a number is supplied, it is treated as the vehicle's ID.\nIf a string is supplied, the identifier is matched against vehicle names\n  with the closest match being selected.","name":"identifier"}],"returns":[{"type":{"names":["Promise.<?Object, Error>"]},"description":"A promise resolving to the data for the\n  matched vehicle, or `null` if no vehicles were matched."}],"name":"findVehicle","longname":"Tankopedia#findVehicle","kind":"function","memberof":"Tankopedia","scope":"instance","$longname":"Tankopedia#findVehicle"},{"comment":"/**\n   * Localizes an achievement section slug. The returned value is the section's\n   *   name.\n   * @param {string} slug - The slug.\n   * @returns {Promise.<(string|undefined), Error>} Promise resolving to the\n   *   translated slug, or `undefined` if it couldn't be translated.\n   */","meta":{"range":[2115,2318],"filename":"Tankopedia.js","lineno":74,"path":"/home/kelvin/work/wargamer/src/modules/WorldOfTanksBlitz","code":{"id":"astnode100000086","name":"Tankopedia#localizeAchievementSection","type":"MethodDefinition","paramnames":["slug"]},"vars":{"":null}},"description":"Localizes an achievement section slug. The returned value is the section's\n  name.","params":[{"type":{"names":["string"]},"description":"The slug.","name":"slug"}],"returns":[{"type":{"names":["Promise.<(string|undefined), Error>"]},"description":"Promise resolving to the\n  translated slug, or `undefined` if it couldn't be translated."}],"name":"localizeAchievementSection","longname":"Tankopedia#localizeAchievementSection","kind":"function","memberof":"Tankopedia","scope":"instance","$longname":"Tankopedia#localizeAchievementSection"},{"comment":"/**\n   * Localizes a language slug.\n   * @param {string} slug - The slug.\n   * @returns {Promise.<(string|undefined), Error>} Promise resolving to the\n   *   translated slug, or `undefined` if it couldn't be translated.\n   */","meta":{"range":[1681,1822],"filename":"Tankopedia.js","lineno":59,"path":"/home/kelvin/work/wargamer/src/modules/WorldOfTanksBlitz","code":{"id":"astnode100000068","name":"Tankopedia#localizeLanguage","type":"MethodDefinition","paramnames":["slug"]},"vars":{"":null}},"description":"Localizes a language slug.","params":[{"type":{"names":["string"]},"description":"The slug.","name":"slug"}],"returns":[{"type":{"names":["Promise.<(string|undefined), Error>"]},"description":"Promise resolving to the\n  translated slug, or `undefined` if it couldn't be translated."}],"name":"localizeLanguage","longname":"Tankopedia#localizeLanguage","kind":"function","memberof":"Tankopedia","scope":"instance","$longname":"Tankopedia#localizeLanguage"},{"comment":"/**\n   * Localizes a vehicle nation slug.\n   * @param {string} slug - The slug.\n   * @returns {Promise.<(string|undefined), Error>} Promise resolving to the\n   *   translated slug, or `undefined` if it couldn't be translated.\n   */","meta":{"range":[2940,3092],"filename":"Tankopedia.js","lineno":102,"path":"/home/kelvin/work/wargamer/src/modules/WorldOfTanksBlitz","code":{"id":"astnode100000132","name":"Tankopedia#localizeVehicleNation","type":"MethodDefinition","paramnames":["slug"]},"vars":{"":null}},"description":"Localizes a vehicle nation slug.","params":[{"type":{"names":["string"]},"description":"The slug.","name":"slug"}],"returns":[{"type":{"names":["Promise.<(string|undefined), Error>"]},"description":"Promise resolving to the\n  translated slug, or `undefined` if it couldn't be translated."}],"name":"localizeVehicleNation","longname":"Tankopedia#localizeVehicleNation","kind":"function","memberof":"Tankopedia","scope":"instance","$longname":"Tankopedia#localizeVehicleNation"},{"comment":"/**\n   * Localizes a vehicle type slug.\n   * @param {string} slug - The slug.\n   * @returns {Promise.<(string|undefined), Error>} Promise resolving to the\n   *   translated slug, or `undefined` if it couldn't be translated.\n   */","meta":{"range":[2554,2702],"filename":"Tankopedia.js","lineno":88,"path":"/home/kelvin/work/wargamer/src/modules/WorldOfTanksBlitz","code":{"id":"astnode100000114","name":"Tankopedia#localizeVehicleType","type":"MethodDefinition","paramnames":["slug"]},"vars":{"":null}},"description":"Localizes a vehicle type slug.","params":[{"type":{"names":["string"]},"description":"The slug.","name":"slug"}],"returns":[{"type":{"names":["Promise.<(string|undefined), Error>"]},"description":"Promise resolving to the\n  translated slug, or `undefined` if it couldn't be translated."}],"name":"localizeVehicleType","longname":"Tankopedia#localizeVehicleType","kind":"function","memberof":"Tankopedia","scope":"instance","$longname":"Tankopedia#localizeVehicleType"}],"$constructor":{"comment":"/**\n   * Constructor.\n   * @param {BaseClient} client - The API client this module belongs to.\n   */","meta":{"range":[387,609],"filename":"Tankopedia.js","lineno":14,"path":"/home/kelvin/work/wargamer/src/modules/WorldOfTanksBlitz","code":{"id":"astnode100000019","name":"Tankopedia","type":"MethodDefinition","paramnames":["client"]},"vars":{"":null}},"description":"Constructor.","params":[{"type":{"names":["BaseClient"]},"description":"The API client this module belongs to.","name":"client"}],"name":"Tankopedia","longname":"Tankopedia","kind":"class","scope":"global","undocumented":true,"$longname":"Tankopedia"}}],"symbols":["Tankopedia","Tankopedia#findVehicle","Tankopedia#localizeAchievementSection","Tankopedia#localizeLanguage","Tankopedia#localizeVehicleNation","Tankopedia#localizeVehicleType"]},"modules-wotc":{"documentation":[{"comment":"/**\n * @classdesc Module for the World of Tanks Console Tankopedia endpoint.\n * @extends ClientModule\n */","meta":{"range":[244,2767],"filename":"Tankopedia.js","lineno":9,"path":"/home/kelvin/work/wargamer/src/modules/WorldOfTanksConsole","code":{"id":"astnode100000015","name":"Tankopedia","type":"ClassDeclaration","paramnames":["client"]}},"classdesc":"Module for the World of Tanks Console Tankopedia endpoint.","augments":["ClientModule"],"name":"Tankopedia","longname":"Tankopedia","kind":"class","scope":"global","description":"Constructor.","params":[{"type":{"names":["BaseClient"]},"description":"The API client this module belongs to.","name":"client"}],"$longname":"Tankopedia","$members":[{"comment":"/**\n   * Searches for a vehicle by name or ID and returns its entry from the\n   *   `encyclopedia/vehicles` endpoint.\n   * @param {(number|string)} identifier - The vehicle identifier to use for\n   *   lookup.\n   * If a number is supplied, it is treated as the vehicle's ID.\n   * If a string is supplied, the identifier is matched against vehicle names\n   *   with the closest match being selected.\n   * @returns {Promise.<?Object, Error>} A promise resolving to the data for the\n   *   matched vehicle, or `null` if no vehicles were matched.\n   */","meta":{"range":[1188,1495],"filename":"Tankopedia.js","lineno":41,"path":"/home/kelvin/work/wargamer/src/modules/WorldOfTanksConsole","code":{"id":"astnode100000042","name":"Tankopedia#findVehicle","type":"MethodDefinition","paramnames":["identifier"]},"vars":{"":null}},"description":"Searches for a vehicle by name or ID and returns its entry from the\n  `encyclopedia/vehicles` endpoint.","params":[{"type":{"names":["number","string"]},"description":"The vehicle identifier to use for\n  lookup.\nIf a number is supplied, it is treated as the vehicle's ID.\nIf a string is supplied, the identifier is matched against vehicle names\n  with the closest match being selected.","name":"identifier"}],"returns":[{"type":{"names":["Promise.<?Object, Error>"]},"description":"A promise resolving to the data for the\n  matched vehicle, or `null` if no vehicles were matched."}],"name":"findVehicle","longname":"Tankopedia#findVehicle","kind":"function","memberof":"Tankopedia","scope":"instance","$longname":"Tankopedia#findVehicle"},{"comment":"/**\n   * Localizes an achievement section slug. The returned value is the section's\n   *   name.\n   * @param {string} slug - The slug.\n   * @returns {Promise.<(string|undefined), Error>} Promise resolving to the\n   *   translated slug, or `undefined` if it couldn't be translated.\n   */","meta":{"range":[1788,1991],"filename":"Tankopedia.js","lineno":62,"path":"/home/kelvin/work/wargamer/src/modules/WorldOfTanksConsole","code":{"id":"astnode100000070","name":"Tankopedia#localizeAchievementSection","type":"MethodDefinition","paramnames":["slug"]},"vars":{"":null}},"description":"Localizes an achievement section slug. The returned value is the section's\n  name.","params":[{"type":{"names":["string"]},"description":"The slug.","name":"slug"}],"returns":[{"type":{"names":["Promise.<(string|undefined), Error>"]},"description":"Promise resolving to the\n  translated slug, or `undefined` if it couldn't be translated."}],"name":"localizeAchievementSection","longname":"Tankopedia#localizeAchievementSection","kind":"function","memberof":"Tankopedia","scope":"instance","$longname":"Tankopedia#localizeAchievementSection"},{"comment":"/**\n   * Localizes a vehicle nation slug.\n   * @param {string} slug - The slug.\n   * @returns {Promise.<(string|undefined), Error>} Promise resolving to the\n   *   translated slug, or `undefined` if it couldn't be translated.\n   */","meta":{"range":[2613,2765],"filename":"Tankopedia.js","lineno":90,"path":"/home/kelvin/work/wargamer/src/modules/WorldOfTanksConsole","code":{"id":"astnode100000116","name":"Tankopedia#localizeVehicleNation","type":"MethodDefinition","paramnames":["slug"]},"vars":{"":null}},"description":"Localizes a vehicle nation slug.","params":[{"type":{"names":["string"]},"description":"The slug.","name":"slug"}],"returns":[{"type":{"names":["Promise.<(string|undefined), Error>"]},"description":"Promise resolving to the\n  translated slug, or `undefined` if it couldn't be translated."}],"name":"localizeVehicleNation","longname":"Tankopedia#localizeVehicleNation","kind":"function","memberof":"Tankopedia","scope":"instance","$longname":"Tankopedia#localizeVehicleNation"},{"comment":"/**\n   * Localizes a vehicle type slug.\n   * @param {string} slug - The slug.\n   * @returns {Promise.<(string|undefined), Error>} Promise resolving to the\n   *   translated slug, or `undefined` if it couldn't be translated.\n   */","meta":{"range":[2227,2375],"filename":"Tankopedia.js","lineno":76,"path":"/home/kelvin/work/wargamer/src/modules/WorldOfTanksConsole","code":{"id":"astnode100000098","name":"Tankopedia#localizeVehicleType","type":"MethodDefinition","paramnames":["slug"]},"vars":{"":null}},"description":"Localizes a vehicle type slug.","params":[{"type":{"names":["string"]},"description":"The slug.","name":"slug"}],"returns":[{"type":{"names":["Promise.<(string|undefined), Error>"]},"description":"Promise resolving to the\n  translated slug, or `undefined` if it couldn't be translated."}],"name":"localizeVehicleType","longname":"Tankopedia#localizeVehicleType","kind":"function","memberof":"Tankopedia","scope":"instance","$longname":"Tankopedia#localizeVehicleType"}],"$constructor":{"comment":"/**\n   * Constructor.\n   * @param {BaseClient} client - The API client this module belongs to.\n   */","meta":{"range":[389,633],"filename":"Tankopedia.js","lineno":14,"path":"/home/kelvin/work/wargamer/src/modules/WorldOfTanksConsole","code":{"id":"astnode100000019","name":"Tankopedia","type":"MethodDefinition","paramnames":["client"]},"vars":{"":null}},"description":"Constructor.","params":[{"type":{"names":["BaseClient"]},"description":"The API client this module belongs to.","name":"client"}],"name":"Tankopedia","longname":"Tankopedia","kind":"class","scope":"global","undocumented":true,"$longname":"Tankopedia"}}],"symbols":["Tankopedia","Tankopedia#findVehicle","Tankopedia#localizeAchievementSection","Tankopedia#localizeVehicleNation","Tankopedia#localizeVehicleType"]},"modules-wowp":{"documentation":[{"comment":"/**\n * @classdesc Module for the World of Warplanes Encyclopedia endpoint.\n * @extends ClientModule\n */","meta":{"range":[232,1432],"filename":"Encyclopedia.js","lineno":9,"path":"/home/kelvin/work/wargamer/src/modules/WorldOfWarplanes","code":{"id":"astnode100000013","name":"Encyclopedia","type":"ClassDeclaration","paramnames":["client"]}},"classdesc":"Module for the World of Warplanes Encyclopedia endpoint.","augments":["ClientModule"],"name":"Encyclopedia","longname":"Encyclopedia","kind":"class","scope":"global","description":"Constructor.","params":[{"type":{"names":["BaseClient"]},"description":"The API client this module belongs to.","name":"client"}],"$longname":"Encyclopedia","$members":[{"comment":"/**\n   * Searches for a plane by name or ID and returns its entry from the\n   *   `encyclopedia/planes` endpoint.\n   * @param {(number|string)} identifier - The plane identifier to use for lookup.\n   * If a number is supplied, it is treated as the plane's ID.\n   * If a string is supplied, the identifier is matched against plane names with\n   *   the closest match being selected.\n   * @returns {Promise.<?Object, Error>} A promise resolving to the data for the\n   *   matched plane, or `null` if no planes were matched.\n   */","meta":{"range":[1142,1430],"filename":"Encyclopedia.js","lineno":39,"path":"/home/kelvin/work/wargamer/src/modules/WorldOfWarplanes","code":{"id":"astnode100000039","name":"Encyclopedia#findPlane","type":"MethodDefinition","paramnames":["identifier"]},"vars":{"":null}},"description":"Searches for a plane by name or ID and returns its entry from the\n  `encyclopedia/planes` endpoint.","params":[{"type":{"names":["number","string"]},"description":"The plane identifier to use for lookup.\nIf a number is supplied, it is treated as the plane's ID.\nIf a string is supplied, the identifier is matched against plane names with\n  the closest match being selected.","name":"identifier"}],"returns":[{"type":{"names":["Promise.<?Object, Error>"]},"description":"A promise resolving to the data for the\n  matched plane, or `null` if no planes were matched."}],"name":"findPlane","longname":"Encyclopedia#findPlane","kind":"function","memberof":"Encyclopedia","scope":"instance","$longname":"Encyclopedia#findPlane"}],"$constructor":{"comment":"/**\n   * Constructor.\n   * @param {BaseClient} client - The API client this module belongs to.\n   */","meta":{"range":[379,608],"filename":"Encyclopedia.js","lineno":14,"path":"/home/kelvin/work/wargamer/src/modules/WorldOfWarplanes","code":{"id":"astnode100000017","name":"Encyclopedia","type":"MethodDefinition","paramnames":["client"]},"vars":{"":null}},"description":"Constructor.","params":[{"type":{"names":["BaseClient"]},"description":"The API client this module belongs to.","name":"client"}],"name":"Encyclopedia","longname":"Encyclopedia","kind":"class","scope":"global","undocumented":true,"$longname":"Encyclopedia"}}],"symbols":["Encyclopedia","Encyclopedia#findPlane"]},"modules-wows":{"documentation":[{"comment":"/**\n * @classdesc Module for the World of Warships Encyclopedia endpoint.\n * @extends ClientModule\n */","meta":{"range":[241,3326],"filename":"Encyclopedia.js","lineno":9,"path":"/home/kelvin/work/wargamer/src/modules/WorldOfWarships","code":{"id":"astnode100000015","name":"Encyclopedia","type":"ClassDeclaration","paramnames":["client"]}},"classdesc":"Module for the World of Warships Encyclopedia endpoint.","augments":["ClientModule"],"name":"Encyclopedia","longname":"Encyclopedia","kind":"class","scope":"global","description":"Constructor.","params":[{"type":{"names":["BaseClient"]},"description":"The API client this module belongs to.","name":"client"}],"$longname":"Encyclopedia","$members":[{"comment":"/**\n   * Searches for a ship by name or ID and returns its entry from the\n   *   `encyclopedia/ships` endpoint.\n   * @param {(number|string)} identifier - The ship identifier to use for lookup.\n   * If a number is supplied, it is treated as the ship's ID.\n   * If a string is supplied, the identifier is matched against ship names with\n   *   the closest match being selected.\n   * @returns {Promise.<?Object, Error>} A promise resolving to the data for the\n   *   matched ship, or `null` if no ships were matched.\n   */","meta":{"range":[1139,1415],"filename":"Encyclopedia.js","lineno":39,"path":"/home/kelvin/work/wargamer/src/modules/WorldOfWarships","code":{"id":"astnode100000041","name":"Encyclopedia#findShip","type":"MethodDefinition","paramnames":["identifier"]},"vars":{"":null}},"description":"Searches for a ship by name or ID and returns its entry from the\n  `encyclopedia/ships` endpoint.","params":[{"type":{"names":["number","string"]},"description":"The ship identifier to use for lookup.\nIf a number is supplied, it is treated as the ship's ID.\nIf a string is supplied, the identifier is matched against ship names with\n  the closest match being selected.","name":"identifier"}],"returns":[{"type":{"names":["Promise.<?Object, Error>"]},"description":"A promise resolving to the data for the\n  matched ship, or `null` if no ships were matched."}],"name":"findShip","longname":"Encyclopedia#findShip","kind":"function","memberof":"Encyclopedia","scope":"instance","$longname":"Encyclopedia#findShip"},{"comment":"/**\n   * Localizes a language slug.\n   * @param {string} slug - The slug.\n   * @returns {Promise.<(string|undefined), Error>} Promise resolving to the\n   *   translated slug, or `undefined` if it couldn't be translated.\n   */","meta":{"range":[2022,2163],"filename":"Encyclopedia.js","lineno":72,"path":"/home/kelvin/work/wargamer/src/modules/WorldOfWarships","code":{"id":"astnode100000086","name":"Encyclopedia#localizeLanguage","type":"MethodDefinition","paramnames":["slug"]},"vars":{"":null}},"description":"Localizes a language slug.","params":[{"type":{"names":["string"]},"description":"The slug.","name":"slug"}],"returns":[{"type":{"names":["Promise.<(string|undefined), Error>"]},"description":"Promise resolving to the\n  translated slug, or `undefined` if it couldn't be translated."}],"name":"localizeLanguage","longname":"Encyclopedia#localizeLanguage","kind":"function","memberof":"Encyclopedia","scope":"instance","$longname":"Encyclopedia#localizeLanguage"},{"comment":"/**\n   * Localizes a ship modification slug.\n   * @param {string} slug - The slug.\n   * @returns {Promise.<(string|undefined), Error>} Promise resolving to the\n   *   translated slug, or `undefined` if it couldn't be translated.\n   */","meta":{"range":[2404,2562],"filename":"Encyclopedia.js","lineno":86,"path":"/home/kelvin/work/wargamer/src/modules/WorldOfWarships","code":{"id":"astnode100000104","name":"Encyclopedia#localizeShipModification","type":"MethodDefinition","paramnames":["slug"]},"vars":{"":null}},"description":"Localizes a ship modification slug.","params":[{"type":{"names":["string"]},"description":"The slug.","name":"slug"}],"returns":[{"type":{"names":["Promise.<(string|undefined), Error>"]},"description":"Promise resolving to the\n  translated slug, or `undefined` if it couldn't be translated."}],"name":"localizeShipModification","longname":"Encyclopedia#localizeShipModification","kind":"function","memberof":"Encyclopedia","scope":"instance","$longname":"Encyclopedia#localizeShipModification"},{"comment":"/**\n   * Localizes a ship module slug.\n   * @param {string} slug - The slug.\n   * @returns {Promise.<(string|undefined), Error>} Promise resolving to the\n   *   translated slug, or `undefined` if it couldn't be translated.\n   */","meta":{"range":[2797,2943],"filename":"Encyclopedia.js","lineno":100,"path":"/home/kelvin/work/wargamer/src/modules/WorldOfWarships","code":{"id":"astnode100000122","name":"Encyclopedia#localizeShipModule","type":"MethodDefinition","paramnames":["slug"]},"vars":{"":null}},"description":"Localizes a ship module slug.","params":[{"type":{"names":["string"]},"description":"The slug.","name":"slug"}],"returns":[{"type":{"names":["Promise.<(string|undefined), Error>"]},"description":"Promise resolving to the\n  translated slug, or `undefined` if it couldn't be translated."}],"name":"localizeShipModule","longname":"Encyclopedia#localizeShipModule","kind":"function","memberof":"Encyclopedia","scope":"instance","$longname":"Encyclopedia#localizeShipModule"},{"comment":"/**\n   * Localizes a ship nation slug.\n   * @param {string} slug - The slug.\n   * @returns {Promise.<(string|undefined), Error>} Promise resolving to the\n   *   translated slug, or `undefined` if it couldn't be translated.\n   */","meta":{"range":[3178,3324],"filename":"Encyclopedia.js","lineno":114,"path":"/home/kelvin/work/wargamer/src/modules/WorldOfWarships","code":{"id":"astnode100000140","name":"Encyclopedia#localizeShipNation","type":"MethodDefinition","paramnames":["slug"]},"vars":{"":null}},"description":"Localizes a ship nation slug.","params":[{"type":{"names":["string"]},"description":"The slug.","name":"slug"}],"returns":[{"type":{"names":["Promise.<(string|undefined), Error>"]},"description":"Promise resolving to the\n  translated slug, or `undefined` if it couldn't be translated."}],"name":"localizeShipNation","longname":"Encyclopedia#localizeShipNation","kind":"function","memberof":"Encyclopedia","scope":"instance","$longname":"Encyclopedia#localizeShipNation"},{"comment":"/**\n   * Localizes a ship type slug.\n   * @param {string} slug - The slug.\n   * @returns {Promise.<(string|undefined), Error>} Promise resolving to the\n   *   translated slug, or `undefined` if it couldn't be translated.\n   */","meta":{"range":[1648,1790],"filename":"Encyclopedia.js","lineno":58,"path":"/home/kelvin/work/wargamer/src/modules/WorldOfWarships","code":{"id":"astnode100000068","name":"Encyclopedia#localizeShipType","type":"MethodDefinition","paramnames":["slug"]},"vars":{"":null}},"description":"Localizes a ship type slug.","params":[{"type":{"names":["string"]},"description":"The slug.","name":"slug"}],"returns":[{"type":{"names":["Promise.<(string|undefined), Error>"]},"description":"Promise resolving to the\n  translated slug, or `undefined` if it couldn't be translated."}],"name":"localizeShipType","longname":"Encyclopedia#localizeShipType","kind":"function","memberof":"Encyclopedia","scope":"instance","$longname":"Encyclopedia#localizeShipType"}],"$constructor":{"comment":"/**\n   * Constructor.\n   * @param {BaseClient} client - The API client this module belongs to.\n   */","meta":{"range":[388,612],"filename":"Encyclopedia.js","lineno":14,"path":"/home/kelvin/work/wargamer/src/modules/WorldOfWarships","code":{"id":"astnode100000019","name":"Encyclopedia","type":"MethodDefinition","paramnames":["client"]},"vars":{"":null}},"description":"Constructor.","params":[{"type":{"names":["BaseClient"]},"description":"The API client this module belongs to.","name":"client"}],"name":"Encyclopedia","longname":"Encyclopedia","kind":"class","scope":"global","undocumented":true,"$longname":"Encyclopedia"}}],"symbols":["Encyclopedia","Encyclopedia#findShip","Encyclopedia#localizeLanguage","Encyclopedia#localizeShipModification","Encyclopedia#localizeShipModule","Encyclopedia#localizeShipNation","Encyclopedia#localizeShipType"]}},"app":{"title":"Wargamer","entrance":"content:readme","server":"github","meta":null,"base":"","routing":{"method":"query","caseSensitive":true}},"template":{"name":"Docma Default Template","version":"1.4.4","author":"Onur Yıldırım (onur@cutepilot.com)","license":"MIT","main":"index.html","options":{"title":"Wargamer","navItems":[{"label":"Home","href":"./"},{"label":"Documentation","href":"?api","iconClass":"ico-md ico-code"},{"label":"Guides","iconClass":"ico-md ico-book","items":[{"label":"Introduction","href":"?content=introduction"},{"label":"Modules","href":"?content=modules"}]},{"label":"GitHub","href":"https://github.com/hkwu/wargamer","target":"_blank","iconClass":"ico-md ico-github"}],"sidebar":true,"collapsed":false,"badges":true,"search":true,"navbar":true}},"_":{"partials":{"api":"docma-api","content":"docma-content","notFound":"docma-404"},"elementID":"docma-main","contentElementID":"docma-content","logsEnabled":false}};
!function(){var e={};e.createChild=function(e,t,n){n=n||{};var o=document.createElement(t||"div");return Object.keys(n).forEach(function(e){o[e]=n[e]}),e.appendChild(o),o},e.getDocmaElem=function(){var t=document.getElementById(docma._.elementID);return t||(t=e.createChild(document.body,"div",{id:docma._.elementID})),t},e.getContentElem=function(){var e=document.getElementById(docma._.contentElementID);if(!e)throw new Error("Partial "+docma._.partials.content+' should have an element with id="'+docma._.contentElementID+'".');return e},e.loadCompiledContent=function(t){var n=e.getDocmaElem();n.innerHTML=t},e.loadContent=function(t){var n=e.getContentElem();n.innerHTML=t,e.scrollTo()},e.getOffset=function(e){var t="object"==typeof e?e:document.getElementById(e);if(t){var n=t.getBoundingClientRect();if(n.width||n.height||t.getClientRects().length){var o=document.documentElement;return{top:n.top+window.pageYOffset-o.clientTop,left:n.left+window.pageXOffset-o.clientLeft}}}},e.scrollTo=function(t){if(t=(t||window.location.hash||"").replace(/^#/,""),!t)return void(document.body.scrollTop=0);var n=document.getElementById(t);n&&(document.body.scrollTop=e.getOffset(n).top)},e.fixAnchors=function(){docma.app.base&&setTimeout(function(){var e,t,n=document.querySelectorAll('a[href^="#"]');for(e=0;e<n.length;e++){t=n[e];var o=t.getAttribute("href");"#"===o.slice(0,1)&&o.length>1&&(o=window.location.pathname+(window.location.search||"")+o,t.setAttribute("href",o))}},50)},docma.dom=Object.freeze(e)}();
!function(){dust.filters=dust.filters||{},dust.filters.$pt=function(t){return docma.utils.parseTicks(t)},dust.filters.$pnl=function(t){return docma.utils.parseNewLines(t,{keepIfSingle:!0})},dust.filters.$pl=function(t){return docma.utils.parseLinks(t)},dust.filters.$tl=function(t){return docma.utils.trimLeft(t)},dust.filters.$p=function(t){return docma.utils.parse(t,{keepIfSingle:!0})},dust.filters.$nt=function(t){return docma.utils.normalizeTabs(t)},dust.filters.$desc=function(t){return docma.utils.parse(t.classdesc||t.description||"")},dust.filters.$def=function(t){return t.optional?String(t.defaultvalue):""},dust.filters.$val=function(t){var e=docma.utils.notate(t,"meta.code.value");return void 0===e?"":e},dust.filters.$id=function(t){var e;if("string"==typeof t)e=t;else{var s=docma.utils.isConstructor(t)?"new-":"";e=s+t.$longname}return e.replace(/ /g,"-")}}();
!function(){function o(o,e,n){return e?(o&&"/"!==e.slice(0,1)&&(e="/"+e),n&&"/"!==e.slice(-1)&&(e+="/"),e):o||n?"/":""}function e(o,e){e=void 0===e?window.location.search||"":e,"?"===e.slice(0,1)&&(e=e.slice(1)),o=o.replace(/[\[\]]/g,"\\$&");var n=new RegExp("&?"+o+"(=([^&#]*)|&|#|$)"),a=n.exec(e);return a&&a[2]?decodeURIComponent(a[2].replace(/\+/g," ")):""}Object.defineProperty(docma,"location",{configurable:!1,get:function(){var n=o(!0,window.location.pathname,!0),a=o(!0,docma.app.base,!0),c=n;return n.slice(0,a.length)===a&&(c=n.slice(a.length-1,n.length)),{host:window.location.host,hostname:window.location.hostname,origin:window.location.origin,port:window.location.port,protocol:(window.location.protocol||"").replace(/:$/,""),entrance:o(!0,docma.app.entrance,!1),base:a,hash:(window.location.hash||"").replace(/^#/,""),query:(window.location.search||"").replace(/^\?/,""),href:window.location.href,fullpath:n,pathname:c,path:c+(window.location.search||""),getQuery:e}}}),docma.location=Object.freeze(docma.location)}();
!function(){function e(e){return e&&""!==e.trim()?e:null}function n(e){return(e||"").replace(/([^>]+>)?~?(.*)/,"$2")}function r(e){return e}var t={};t.notate=function(e,n){if("object"==typeof e){var r,i=Array.isArray(n)?n:n.split("."),a=i[0];if(a)return r=e[a],i.length>1?(i.shift(),t.notate(r,i)):r}},t.getName=function(e){if(e.alias){var r=n(t.notate(e,"meta.code.name")||"");if(r)return r.replace(/.*?[#\.~:](\w+)$/i,"$1")}return e.name},t.getLongName=function(e){var r=n(e.longname);if(e.alias){var i=n(t.notate(e,"meta.code.name")||"");if(!i)return r;var a=n(e.memberof||"");if(!a)return i;var o=new RegExp("^"+a+"[#\\.~:]"),s="instance"===e.scope?"#":".";return o.test(i)?i:a+s+i}return r},t.getFullName=t.getLongName,t.getCodeName=function(e){return n(t.notate(e,"meta.code.name")||"")||t.getLongName(e)},t.getSymbolByName=function(e,n){var r,i;for(r=0;r<e.length;r++){if(i=e[r],i.name===n||i.longname===n||t.getFullName(i)===n)return i;if(i.$members){var a=t.getSymbolByName(i.$members,n);if(a)return a}}return null},t.isGlobal=function(e){return"global"===e.scope},t.isNamespace=function(e){return"namespace"===e.kind},t.isModule=function(e){return"module"===e.kind},t.isClass=function(e){return!t.isConstructor(e)&&("class"===e.kind||"ClassDeclaration"===t.notate(e,"meta.code.type"))},t.isConstructor=function(e){return"class"===e.kind&&"MethodDefinition"===t.notate(e,"meta.code.type")},t.isStaticMember=function(e){return"static"===e.scope},t.isStatic=t.isStaticMember,t.isInner=function(e){return"inner"===e.scope},t.isInstanceMember=function(e){return"instance"===e.scope},t.isMethod=function(e){var n=t.notate(e,"meta.code.type");return"function"===e.kind||"MethodDefinition"===n||"FunctionExpression"===n},t.isFunction=t.isMethod,t.isInstanceMethod=function(e){return t.isInstanceMember(e)&&t.isMethod(e)},t.isStaticMethod=function(e){return t.isStaticMember(e)&&t.isMethod(e)},t.isProperty=function(e){return"member"===e.kind},t.isInstanceProperty=function(e){return t.isInstanceMember(e)&&t.isProperty(e)},t.isStaticProperty=function(e){return t.isStaticMember(e)&&t.isProperty(e)},t.isTypeDef=function(e){return"typedef"===e.kind},t.isCustomType=t.isTypeDef,t.isEnum=function(e){return e.isEnum},t.isReadOnly=function(e){return e.readonly},t.isPublic=function(e){return"string"!=typeof e.access||"public"===e.access},t.isPrivate=function(e){return"private"===e.access},t.isProtected=function(e){return"protected"===e.access},t.isUndocumented=function(e){return!e.comments},t.hasDescription=function(n){return Boolean(e(n.classdesc)||e(n.description))},t.getTypes=function(e){if("class"===e.kind)return"class";var n=t.notate(e,"type.names")||[];return n=n.join("|"),e.isEnum?"enum<"+n+">":n},t.getReturnTypes=function(e){var n=e.returns;if(!Array.isArray(n))return"void";var r,i=n.reduce(function(e,n){return r=t.notate(n,"type.names"),Array.isArray(r)?e.concat(r):e},[]);return i.length>0?i.join("|"):"void"},t.trimLeft=function(e){return e.replace(/^[\s\n\r\-—]*/,"")},t.parseTicks=function(e){return e.replace(/(```\s*)([\s\S]*?)(\s*```)/g,function(e,n,r){return t.normalizeTabs(t._wrapEscapeCode(r,!0).replace(/`/g,"&#x60;"))}).replace(/(`)(.*?)(`)/g,function(e,n,r){return t._wrapEscapeCode(r)})},t.parseNewLines=function(e,n){return n=n||{},t._tokenize(e,function(e,r){if(r)return e;var t=e.split(/\n{2,}/);return t.length<=1&&n.keepIfSingle?e:t.map(function(e){return"<p>"+e+"</p>"}).join("")}).join("")},t.parseLinks=function(e,n){n=n||{};var r=/\{@link +([^\}]*?)\}/g,i=e.replace(r,function(e,r){var t,i,a=r.split("|");1===a.length?t=i=a[0].trim():(t=a[0].trim(),i=a[1].trim());var o=n.target?' target="'+n.target+'"':"";return'<a href="'+t+'"'+o+">"+i+"</a>"});return t.parseTicks(i)},t.parse=function(e,n){return n=n||{},e=t.trimLeft(e),e=t.parseNewLines(e,n),e=t.parseTicks(e),t.parseLinks(e,n)},t.normalizeTabs=function(e){var n=e.match(/^\s*/gm),r=1/0;if(n.forEach(function(e,n){e=e.replace(/\t/g,"  "),n>0&&(r=Math.min(e.length,r))}),r!==1/0){var t=new RegExp("^\\s{"+r+"}","gm");e=e.replace(t,"")}e=e.replace(/^\s*/,"");var i;return e.replace(/(\n+)(\s+)/gm,function(e,n,r){return i=r.replace(/\t/g,"  "),i=new Array(i.length-i.length%2+1).join(" "),n+i})},t.getKeywords=function(e){if("string"==typeof e)return e.toLowerCase();var n=t.getFullName(e)+" "+e.longname+" "+e.name+" "+(e.alias||"")+" "+(e.memberOf||"")+" "+(e.kind||"")+" "+(e.scope||"")+" "+(e.classdesc||"")+" "+(e.description||"")+" "+(e.filename||"")+" "+(e.readonly?"readonly":"")+(e.isEnum?"enum":"");return t.isConstructor(e)&&(n+=" constructor"),t.isMethod(e)&&(n+=" method"),t.isProperty(e)&&(n+=" property"),n.replace(/[><"'`\n\r]/g,"").toLowerCase()},t.listType=function(e){return e.map(function(e){return t._wrapEscapeCode(e)}).join(", ")},t.listTypeDesc=function(e){if(!e||0===e.length)return"";var n,r=e.map(function(e){return n=t.parse(e.description||"",{keepIfSingle:!0}),n&&(n="&nbsp;&nbsp;—&nbsp;&nbsp;"+n),t._wrapEscapeCode(e.type.names.join("|"))+n});return r.length>1?"<ul>\n"+r.join("</li>\n<li>")+"\n</ul>":r},t._find=function(e,n){if(!e||!n)return null;var r,t,i=null;for(r=0;r<e.length;r++)if(t=e[r],t&&"object"==typeof t){for(var a in n)if(void 0!==n[a]&&n.hasOwnProperty(a)){if(n[a]!==t[a]){i=null;break}i=t}if(i)break}return i},t._assign=function(e,n,r){e=e||{};var t;for(t in n)n.hasOwnProperty(t)&&(r?Object.defineProperty(e,t,{enumerable:!0,value:n[t]}):e[t]=n[t]);return e},t._values=function(e){if(Array.isArray(e))return e;var n,r=[];for(n in e)e.hasOwnProperty(n)&&r.push(e[n]);return r},t._wrapEscapeCode=function(e,n){return e=e.replace(/</g,"&lt;").replace(/>/g,"&gt;"),e="<code>"+e+"</code>",n?"<pre>"+e+"</pre>":e},t._tokenize=function(e,n){"function"!=typeof n&&(n=r);var t="```";if(e.indexOf(t)<0)return[n(e,!1)];var i,a=t.length,o="",s="",u=[],c=!1;for(i=0;i<e.length;i++)o+=e[i],s+=e[i],o.length>a&&(o=o.slice(-a)),o===t&&(c=!c,c?(u.push(n(s.slice(0,-a),!1)),s=o):(u.push(n(s,!0)),s=""));return u},docma.utils=t}();
!function(){function e(e,t){l.info("Event:",e,t?t[0]:""),y.trigger(e,t)}function t(e,n){if(n&&!(u.indexOf(n)<0)){if(e)docma.app.routing.caseSensitive||(e=e.toLowerCase());else{if(n!==t.Type.API)return;e=f}var o=p._find(docma.routes,{type:n,name:e});o&&p._assign(this,o)}}function n(e,t){dust.render(e,docma,function(e,n){if(e)throw e;m.loadCompiledContent(n),"function"==typeof t&&t()})}function o(){e(docma.Event.Render,[docma.currentRoute]),d&&(e(docma.Event.Ready),d=!1)}function r(o){docma._.currentRoute=t.create(null),n(docma._.partials.notFound,function(){if(e(docma.Event.Render,[null]),m.scrollTo(),"function"==typeof o)return o(404);throw new Error("Page or content not found.")})}function a(){if(s){var e=sessionStorage.getItem("redirectPath")||null;if(e)return sessionStorage.removeItem("redirectPath"),l.info("Redirecting to:",e),page.redirect(e),!0}return!1}function i(e){var t=e||window.location.search;return/^[\?&]/.test(t)&&(t=t.slice(1)),t||null}var c,u,d=!1,s="path"===docma.app.routing.method,f="_def_",p=docma.utils,m=docma.dom,l={};["log","info","warn","error"].forEach(function(e){!function(){l[e]=function(){docma._.logsEnabled&&console[e].apply(console,arguments)}}()}),docma.addFilter=function(e,t){if(docma.filterExists(e))throw new Error('Filter "'+e+'" already exists.');return dust.filters[e]=t,docma},docma.removeFilter=function(e){return delete dust.filters[e],docma},docma.filterExists=function(e){return"function"==typeof dust.filters[e]};var y=new EventEmitter;docma.Event={Ready:"ready",Render:"render",Route:"route"},docma.on=function(e,t){return y.on.apply(y,arguments),docma},docma.once=function(){return y.once.apply(y,arguments),docma},docma.off=function(){return y.off.apply(y,arguments),docma},docma.addListener=docma.on,docma.addListenerOnce=docma.once,docma.removeListener=docma.off,Object.defineProperty(docma,"currentRoute",{configurable:!1,get:function(){return docma._.currentRoute}}),Object.defineProperty(docma,"documentation",{configurable:!1,get:function(){return docma._.documentation}}),Object.defineProperty(docma,"symbols",{configurable:!1,get:function(){return docma._.symbols}}),t.Type={API:"api",CONTENT:"content"},u=p._values(t.Type),t.prototype.exists=function(){return Boolean(this.id)},t.prototype.isEqualTo=function(e){return!!(e&&e.exists()&&this.exists())&&e.path===this.path},t.prototype.isCurrent=function(){return this.isEqualTo(docma.currentRoute)},t.prototype.apply=function(){return this.type===t.Type.API?(docma._.documentation=docma.apis[this.name].documentation,docma._.symbols=docma.apis[this.name].symbols):(docma._.documentation=null,docma._.symbols=null),e(docma.Event.Route,[this]),docma.render(this),this},t.prototype.toString=function(){return JSON.stringify(this)},t.create=function(e,n){return new t(e,n)},t.fromID=function(e){var n=e.split(":");return 2!==n.length?new t(null):new t(n[1],n[0])},t.fromQuery=function(e){if(!e)return new t(null);var n=e.split("&")[0].split("="),o=n[0].toLowerCase(),r=n[1];return new t(r,o)},Object.defineProperty(docma,"Route",{configurable:!1,get:function(){return t}}),docma.fetch=function(e,t){var n=new XMLHttpRequest;n.onreadystatechange=function(){if(4===n.readyState){var o=200===n.status?n.responseText:"";return l.log("XHR GET:",n.status,e),t(n.status,o)}},n.open("GET",e,!0),n.send()},docma.render=function(e,a){if(!e||!e.exists())return r(a);if(!e.isEqualTo(docma.currentRoute)){docma._.currentRoute=e;var i="function"==typeof a;e.type===t.Type.API?n(docma._.partials.api,function(){o(),i&&a(200),m.fixAnchors(),m.scrollTo()}):docma.fetch(e.contentPath,function(e,t){return 404===e?r(a):void n(docma._.partials.content,function(){m.loadContent(t),o(),i&&a(e),m.fixAnchors()})})}},docma.app.base&&page.base(docma.app.base),page.redirect("(/)?"+docma.template.main,""),s&&(page("(/)?api/:apiName?",function(e,n){var o=e.params.apiName||f,r=t.create(o,t.Type.API);return r&&r.exists()?void r.apply():n()}),page("(/)?:content",function(e,n){var o=e.params.content,r=t.create(o,t.Type.CONTENT);return r&&r.exists()?void r.apply():n()})),page("(/)?",function(e,n){a()||setTimeout(function(){var o,r=i(e.querystring);if(s){if(r)return n();o=c}else l.log("Query-string:",r),o=r?t.fromQuery(r):c;return o&&o.exists()?void(o.isCurrent()||o.apply()):n()},100)}),page("*",function(e){l.warn("Unknown Route:",e.path),t.create(null).apply()}),l.info("Docma SPA Configuration:"),l.info("App Title:          ",docma.app.title),l.info("Routing Method:     ",docma.app.routing.method),l.info("App Server:         ",docma.app.server),l.info("Base Path:          ",docma.app.base),l.info("Entrance Route ID:  ",docma.app.entrance),window.onload=function(){d=!0,c=t.fromID(docma.app.entrance),page.start({click:!0,popstate:!0,dispatch:!0,hashbang:!1,decodeURLComponents:!0}),l.info("Docma SPA loaded!")}}();
docma = Object.freeze(docma);